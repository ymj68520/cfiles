<?xml version="1.0"?>
<doc>
    <assembly>
        <name>facecat_net</name>
    </assembly>
    <members>
        <member name="T:FaceCat.FCHttpEasyService">
            <summary>
            HTTP的GET服务
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpEasyService.onReceive(FaceCat.FCHttpData)">
            <summary>
            请求数据
            </summary>
            <param name="data">请求数据</param>
            <returns>数据</returns>
        </member>
        <member name="T:FaceCat.FCLayoutDiv">
            <summary>
            布局控件
            </summary>
        </member>
        <member name="T:FaceCat.FCDiv">
            <summary>
            图层
            </summary>
        </member>
        <member name="T:FaceCat.FCView">
            <summary>
            图层内置控件的基类
            </summary>
        </member>
        <member name="T:FaceCat.FCProperty">
            <summary>
            属性接口
            </summary>
        </member>
        <member name="M:FaceCat.FCProperty.getProperty(System.String,System.String@,System.String@)">
            <summary>
            根据属性名称获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
            <param name="type">属性类型</param>
        </member>
        <member name="M:FaceCat.FCProperty.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCProperty.setProperty(System.String,System.String)">
            <summary>
            设置属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCView.#ctor">
            <summary>
            创建控件
            </summary>
        </member>
        <member name="M:FaceCat.FCView.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCView.m_controls">
            <summary>
            控件集合
            </summary>
        </member>
        <member name="F:FaceCat.FCView.m_events">
            <summary>
            事件集合
            </summary>
        </member>
        <member name="F:FaceCat.FCView.m_oldLocation">
            <summary>
            上次坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCView.m_oldSize">
            <summary>
            上次尺寸
            </summary>
        </member>
        <member name="F:FaceCat.FCView.m_percentLocation">
            <summary>
            百分比位置
            </summary>
        </member>
        <member name="F:FaceCat.FCView.m_percentSize">
            <summary>
            百分比尺寸
            </summary>
        </member>
        <member name="M:FaceCat.FCView.addControl(FaceCat.FCView)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCView.addEvent(System.Object,System.Int32)">
            <summary>
            注册事件
            </summary>
            <param name="func">函数指针</param>
            <param name="eventID">事件ID</param>
        </member>
        <member name="M:FaceCat.FCView.beginInvoke(System.Object)">
            <summary>
            在控件线程中调用方法
            </summary>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.FCView.bringChildToFront(FaceCat.FCView)">
            <summary>
            将子控件置于最前
            </summary>
            <param name="childControl">子控件</param>
        </member>
        <member name="M:FaceCat.FCView.bringToFront">
            <summary>
            将控件放到最前显示
            </summary>
        </member>
        <member name="M:FaceCat.FCView.callEvents(System.Int32)">
            <summary>
            调用事件
            </summary>
            <param name="eventID">事件ID</param>
        </member>
        <member name="M:FaceCat.FCView.callInvokeEvents(System.Int32,System.Object)">
            <summary>
            调用控件线程方法事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.FCView.callKeyEvents(System.Int32,System.Char)">
            <summary>
            调用键盘事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCView.callPaintEvents(System.Int32,FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            调用重绘事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCView.callPreviewsKeyEvent(System.Int32,System.Int32,System.Char)">
            <summary>
            预处理键盘事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="tEventID">事件ID2</param>
            <param name="key">键</param>
            <returns>是否不处理</returns>
        </member>
        <member name="M:FaceCat.FCView.callPreviewsTouchEvents(System.Int32,System.Int32,FaceCat.FCTouchInfo)">
            <summary>
            调用触摸事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="tEventID">事件ID2</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.callTimerEvents(System.Int32,System.Int32)">
            <summary>
            调用秒表事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="timerID">秒表编号</param>
        </member>
        <member name="M:FaceCat.FCView.callTouchEvents(System.Int32,FaceCat.FCTouchInfo)">
            <summary>
            调用触摸事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.clearControls">
            <summary>
            清除所有控件
            </summary>
        </member>
        <member name="M:FaceCat.FCView.containsControl(FaceCat.FCView)">
            <summary>
            是否包含控件
            </summary>
            <param name="control">控件</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:FaceCat.FCView.containsPoint(FaceCat.FCPoint)">
            <summary>
            是否包含点
            </summary>
            <param name="point">坐标</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:FaceCat.FCView.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.FCView.focus">
            <summary>
            设置焦点
            </summary>
        </member>
        <member name="M:FaceCat.FCView.getControls">
            <summary>
            获取控件集合的拷贝
            </summary>
            <returns>控件集合</returns>
        </member>
        <member name="M:FaceCat.FCView.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCView.getDisplayOffset">
            <summary>
            获取显示偏移坐标
            </summary>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.FCView.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCView.getNewTimerID">
            <summary>
            获取新的秒表编号
            </summary>
            <returns>新编号</returns>
        </member>
        <member name="M:FaceCat.FCView.getPaintingBackColor">
            <summary>
            获取或设置的背景色
            </summary>
            <returns>背景色</returns>
        </member>
        <member name="M:FaceCat.FCView.getPaintingBackImage">
            <summary>
            获取要绘制的背景图片
            </summary>
            <returns>背景图片</returns>
        </member>
        <member name="M:FaceCat.FCView.getPaintingBorderColor">
            <summary>
            获取要绘制的边线颜色
            </summary>
            <returns>边线颜色</returns>
        </member>
        <member name="M:FaceCat.FCView.getPaintingTextColor">
            <summary>
            获取要绘制的前景色
            </summary>
            <returns>前景色</returns>
        </member>
        <member name="M:FaceCat.FCView.getPopupMenuContext(FaceCat.FCView)">
            <summary>
            获取弹出菜单上下文
            </summary>
            <param name="control">当前控件</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCView.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCView.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCView.hasChildren">
            <summary>
            判断是否包含子控件
            </summary>
            <returns>是否包含子控件</returns>
        </member>
        <member name="M:FaceCat.FCView.hide">
            <summary>
            隐藏控件
            </summary>
        </member>
        <member name="M:FaceCat.FCView.insertControl(System.Int32,FaceCat.FCView)">
            <summary>
            插入控件
            </summary>
            <param name="index">索引</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCView.invalidate">
            <summary>
            启动绘制
            </summary>
        </member>
        <member name="M:FaceCat.FCView.invoke(System.Object)">
            <summary>
            在控件线程中调用方法
            </summary>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.FCView.isPaintEnabled(FaceCat.FCView)">
            <summary>
            判断是否绘制可用状态
            </summary>
            <param name="control">控件</param>
            <returns>是否绘制可用状态</returns>
        </member>
        <member name="M:FaceCat.FCView.isPaintVisible(FaceCat.FCView)">
            <summary>
            判断是否绘图时可见
            </summary>
            <param name="control">控件</param>
            <returns>是否可见</returns>
        </member>
        <member name="M:FaceCat.FCView.onAdd">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onAutoSizeChanged">
            <summary>
            自动设置尺寸属性改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onBackColorChanged">
            <summary>
            背景色改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onBackImageChanged">
            <summary>
            背景图片改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onChar(System.Char)">
            <summary>
            字符输入
            </summary>
            <param name="ch">字符</param>
        </member>
        <member name="M:FaceCat.FCView.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onCopy">
            <summary>
            复制
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onCut">
            <summary>
            剪切
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onDockChanged">
            <summary>
            悬停改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onDoubleClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸双击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onDragBegin">
            <summary>
            拖动开始方法
            </summary>
            <returns>是否拖动</returns>
        </member>
        <member name="M:FaceCat.FCView.onDragEnd">
            <summary>
            拖动结束方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onDragging">
            <summary>
            正在拖动方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onDragReady(FaceCat.FCPoint@)">
            <summary>
            拖动准备方法
            </summary>
            <param name="startOffset">可以拖动的偏移坐标量</param>
        </member>
        <member name="M:FaceCat.FCView.onEnableChanged">
            <summary>
            可用改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onFontChanged">
            <summary>
            字体改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onGotFocus">
            <summary>
            获得焦点方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onInvoke(System.Object)">
            <summary>
            在控件线程中调用方法
            </summary>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.FCView.onLoad">
            <summary>
            控件加载方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onLocationChanged">
            <summary>
            位置改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onLostFocus">
            <summary>
            丢失焦点方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onKeyDown(System.Char)">
            <summary>
            键盘按下方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCView.onKeyUp(System.Char)">
            <summary>
            键盘弹起方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCView.onMarginChanged">
            <summary>
            外边距改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onPaddingChanged">
            <summary>
            内边距改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onPaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCView.onPaintBackground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCView.onPaintBorder(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘边线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCView.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCView.onParentChanged">
            <summary>
            父容器改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onPaste">
            <summary>
            复制
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onPrePaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            预绘图方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCView.onPreviewsKeyEvent(System.Int32,System.Char)">
            <summary>
            键盘下按方法
            </summary>
            <param name="eventID">事件ID</param>
            <param name="key">按键</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCView.onPreviewsTouchEvent(System.Int32,FaceCat.FCTouchInfo)">
            <summary>
            预处理触摸事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="touchInfo">触摸信息</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCView.onRemove">
            <summary>
            移除控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onRegionChanged">
            <summary>
            裁剪区域改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onSizeChanged">
            <summary>
            尺寸改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onTabIndexChanged">
            <summary>
            TAB索引改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onTabStop">
            <summary>
            被使用TAB切换方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onTabStopChanged">
            <summary>
            是否用TAB切换改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onTextChanged">
            <summary>
            文本改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onTextColorChanged">
            <summary>
            前景色改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onTouchEnter(FaceCat.FCTouchInfo)">
            <summary>
            触摸进入方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onTouchLeave(FaceCat.FCTouchInfo)">
            <summary>
            触摸离开方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动调用方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onTouchWheel(FaceCat.FCTouchInfo)">
            <summary>
            触摸滚动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCView.onTimer(System.Int32)">
            <summary>
            秒表回调方法
            </summary>
            <param name="timerID">编号</param>
        </member>
        <member name="M:FaceCat.FCView.onVisibleChanged">
            <summary>
            可见状态改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCView.pointToControl(FaceCat.FCPoint)">
            <summary>
            获取相对于控件的相对坐标
            </summary>
            <param name="point">坐标</param>
            <returns>相对坐标</returns>
        </member>
        <member name="M:FaceCat.FCView.pointToNative(FaceCat.FCPoint)">
            <summary>
            获取控件的绝对坐标
            </summary>
            <param name="point">坐标</param>
            <returns>绝对坐标</returns>
        </member>
        <member name="M:FaceCat.FCView.removeControl(FaceCat.FCView)">
            <summary>
            移除控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCView.removeEvent(System.Object,System.Int32)">
            <summary>
            取消注册事件
            </summary>
            <param name="func">函数指针</param>
            <param name="eventID">事件ID</param>
        </member>
        <member name="M:FaceCat.FCView.sendChildToBack(FaceCat.FCView)">
            <summary>
            将控件置于最后
            </summary>
            <param name="childControl">子控件</param>
        </member>
        <member name="M:FaceCat.FCView.sendToBack">
            <summary>
            将控件放到最下面显示
            </summary>
        </member>
        <member name="M:FaceCat.FCView.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCView.show">
            <summary>
            显示控件
            </summary>
        </member>
        <member name="M:FaceCat.FCView.startTimer(System.Int32,System.Int32)">
            <summary>
            开始秒表
            </summary>
            <param name="timerID">编号</param>
            <param name="interval">间隔</param>
        </member>
        <member name="M:FaceCat.FCView.stopTimer(System.Int32)">
            <summary>
            停止秒表
            </summary>
            <param name="timerID">编号</param>
        </member>
        <member name="M:FaceCat.FCView.update">
            <summary>
            更新界面
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Align">
            <summary>
            获取或设置横向排列方式
            </summary>
        </member>
        <member name="P:FaceCat.FCView.AllowDrag">
            <summary>
            获取或设置是否可以拖动位置
            </summary>
        </member>
        <member name="P:FaceCat.FCView.AllowPreviewsEvent">
            <summary>
            获取或设置是否允许预处理事件
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Anchor">
            <summary>
            获取或设置锚定信息
            </summary>
        </member>
        <member name="P:FaceCat.FCView.AutoEllipsis">
            <summary>
            获取或设置是否在文字超出范围时在结尾显示省略号
            </summary>
        </member>
        <member name="P:FaceCat.FCView.AutoSize">
            <summary>
            获取或设置是否自动调整尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCView.BackColor">
            <summary>
            获取或设置背景色
            </summary>
        </member>
        <member name="P:FaceCat.FCView.BackImage">
            <summary>
            获取或设置背景图片
            </summary>
        </member>
        <member name="P:FaceCat.FCView.BorderColor">
            <summary>
            获取或设置边线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Bottom">
            <summary>
            获取距离下侧的位置
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Bounds">
            <summary>
            获取或设置控件的区域属性
            </summary>
        </member>
        <member name="P:FaceCat.FCView.CanFocus">
            <summary>
            获取或设置是否可以设置焦点
            </summary>
        </member>
        <member name="P:FaceCat.FCView.CanRaiseEvents">
            <summary>
            获取或设置是否可以触发事件
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Capture">
            <summary>
            获取是否被触摸捕获
            </summary>
        </member>
        <member name="P:FaceCat.FCView.CornerRadius">
            <summary>
            获取或设置圆角角度
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Cursor">
            <summary>
            获取或设置光标
            </summary>
        </member>
        <member name="P:FaceCat.FCView.DisplayOffset">
            <summary>
            获取或设置是否允许偏移显示
            </summary>
        </member>
        <member name="P:FaceCat.FCView.DisplayRect">
            <summary>
            获取虚拟显示的区域
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Dock">
            <summary>
            获取或设置绑定边缘类型
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Enabled">
            <summary>
            获取或设置控件是否可用
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Focused">
            <summary>
            获取或设置是否具有焦点
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Font">
            <summary>
            获取或设置字体
            </summary>
        </member>
        <member name="P:FaceCat.FCView.HasPopupMenu">
            <summary>
            获取或设置是否有右键菜单
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Height">
            <summary>
            获取或设置控件的高度
            </summary>
        </member>
        <member name="P:FaceCat.FCView.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCView.IsDragging">
            <summary>
            获取或设置是否正被拖动
            </summary>
        </member>
        <member name="P:FaceCat.FCView.IsWindow">
            <summary>
            获取或设置是否为窗体
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Left">
            <summary>
            获取或设置距离左侧的位置
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Location">
            <summary>
            获取或设置控件的位置
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Margin">
            <summary>
            获取或设置外边距
            </summary>
        </member>
        <member name="P:FaceCat.FCView.MaximumSize">
            <summary>
            获取或设置控件的最大尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCView.MinimumSize">
            <summary>
            获取或设置控件的最小尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Name">
            <summary>
            获取或设置控件的唯一标识名称
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Native">
            <summary>
            获取或设置按钮所在的图形接口
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Opacity">
            <summary>
            获取或设置透明度
            </summary>
        </member>
        <!-- 对于成员“P:FaceCat.FCView.Padding”忽略有格式错误的 XML 注释 -->
        <member name="P:FaceCat.FCView.Parent">
            <summary>
            获取或设置父控件
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Region">
            <summary>
            获取或设置裁剪矩形
            </summary>
        </member>
        <member name="P:FaceCat.FCView.ResourcePath">
            <summary>
            获取或设置资源路径
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Right">
            <summary>
            获取距离右侧的距离
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Size">
            <summary>
            获取或设置尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCView.TabIndex">
            <summary>
            获取或设置Tab键的顺序
            </summary>
        </member>
        <member name="P:FaceCat.FCView.TabStop">
            <summary>
            获取或设置是否能用Tab键将焦点放置到该控件上
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Tag">
            <summary>
            获取或设置TAG值
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Text">
            <summary>
            获取或设置文字
            </summary>
        </member>
        <member name="P:FaceCat.FCView.TextColor">
            <summary>
            获取或设置前景色
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Top">
            <summary>
            获取或设置距离上侧的位置
            </summary>
        </member>
        <member name="P:FaceCat.FCView.TopMost">
            <summary>
            获取或设置是否置顶显示
            </summary>
        </member>
        <member name="P:FaceCat.FCView.TouchPoint">
            <summary>
            获取触摸的实际位置
            </summary>
        </member>
        <member name="P:FaceCat.FCView.UseRegion">
            <summary>
            获取或设置是否设置裁剪
            </summary>
        </member>
        <member name="P:FaceCat.FCView.VerticalAlign">
            <summary>
            获取或设置纵向排列方式
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Visible">
            <summary>
            获取或设置控件是否可见
            </summary>
        </member>
        <member name="P:FaceCat.FCView.Width">
            <summary>
            获取或设置控件的宽度
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.#ctor">
            <summary>
            创建支持滚动条的控件
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_isDragScrolling2">
            <summary>
            是否正在滚动2
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_readyToDragScroll">
            <summary>
            是否准备拖动滚动
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_scrollButtonKeyDownEvent">
            <summary>
            滚动按钮键盘事件按下事件
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_scrollButtonTouchWheelEvent">
            <summary>
            滚动按钮触摸滚动事件
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_startMovePoint">
            <summary>
            开始移动的位置
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_startMovePosX">
            <summary>
            开始移动的横向位置
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_startMovePosY">
            <summary>
            开始移动的纵向位置
            </summary>
        </member>
        <member name="F:FaceCat.FCDiv.m_startMoveTime">
            <summary>
            开始移动时间
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.getContentHeight">
            <summary>
            获取内容的高度
            </summary>
            <returns>高度</returns>
        </member>
        <member name="M:FaceCat.FCDiv.getContentWidth">
            <summary>
            获取内容的宽度
            </summary>
            <returns>宽度</returns>
        </member>
        <member name="M:FaceCat.FCDiv.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCDiv.getDisplayOffset">
            <summary>
            获取显示偏移坐标
            </summary>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.FCDiv.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCDiv.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCDiv.lineDown">
            <summary>
            向下滚动一行
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.lineLeft">
            <summary>
            向左滚动一行
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.LineRight">
            <summary>
            向右滚动一行
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.lineUp">
            <summary>
            向上滚动一行
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.onDragReady(FaceCat.FCPoint@)">
            <summary>
            拖动准备方法
            </summary>
            <param name="startOffset">可以拖动的偏移坐标量</param>
        </member>
        <member name="M:FaceCat.FCDiv.onDragScrollEnd">
            <summary>
            拖动滚动结束
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.onDragScrolling">
            <summary>
            拖动滚动中
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.onDragScrollPermit">
            <summary>
            拖动滚动许可检查
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.onDragScrollStart">
            <summary>
            拖动滚动开始
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.onKeyDown(System.Char)">
            <summary>
            键盘按下方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCDiv.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCDiv.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCDiv.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCDiv.onTouchWheel(FaceCat.FCTouchInfo)">
            <summary>
            触摸滚动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCDiv.onPreviewsTouchEvent(System.Int32,FaceCat.FCTouchInfo)">
            <summary>
            预处理触摸事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="touchInfo">触摸信息</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCDiv.pageDown">
            <summary>
            向下翻一页
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.pageLeft">
            <summary>
            向左翻一页
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.pageRight">
            <summary>
            向右翻一页
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.pageUp">
            <summary>
            向上翻一页
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.scrollButtonKeyDown(System.Object,System.Char)">
            <summary>
            滚动按钮键盘按下事件
            </summary>
            <param name="sender">调用者</param>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCDiv.scrollButtonTouchWheel(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            滚动按钮触摸滚动事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCDiv.setProperty(System.String,System.String)">
            <summary>
            设置属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCDiv.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="M:FaceCat.FCDiv.updateScrollBar">
            <summary>
            更新滚动条的布局
            </summary>
        </member>
        <member name="P:FaceCat.FCDiv.AllowDragScroll">
            <summary>
            获取或设置是否允许拖动滚动
            </summary>
        </member>
        <member name="P:FaceCat.FCDiv.HScrollBar">
            <summary>
            获取横向滚动条
            </summary>
        </member>
        <member name="P:FaceCat.FCDiv.ShowHScrollBar">
            <summary>
            获取或设置是否显示横向滚动条
            </summary>
        </member>
        <member name="P:FaceCat.FCDiv.IsDragScrolling">
            <summary>
            获取是否正在被拖动
            </summary>
        </member>
        <member name="P:FaceCat.FCDiv.ShowVScrollBar">
            <summary>
            获取或设置是否显示纵向滚动条
            </summary>
        </member>
        <member name="P:FaceCat.FCDiv.VScrollBar">
            <summary>
            获取纵向滚动条
            </summary>
        </member>
        <member name="M:FaceCat.FCLayoutDiv.#ctor">
            <summary>
            创建布局控件
            </summary>
        </member>
        <member name="M:FaceCat.FCLayoutDiv.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCLayoutDiv.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCLayoutDiv.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCLayoutDiv.onResetLayout">
            <summary>
            重置布局
            </summary>
        </member>
        <member name="M:FaceCat.FCLayoutDiv.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCLayoutDiv.update">
            <summary>
            布局更新方法
            </summary>
        </member>
        <member name="P:FaceCat.FCLayoutDiv.AutoWrap">
            <summary>
            获取或设置是否自动换行
            </summary>
        </member>
        <member name="P:FaceCat.FCLayoutDiv.LayoutStyle">
            <summary>
            获取或设置排列模式
            </summary>
        </member>
        <member name="T:FaceCat.AndrewsPitchfork">
            <summary>
            安德鲁斯干草叉
            </summary>
        </member>
        <member name="T:FaceCat.FCPlot">
            <summary>
            画线工具的基类
            </summary>
        </member>
        <member name="M:FaceCat.FCPlot.#ctor">
            <summary>
            创建画线
            </summary>
        </member>
        <member name="M:FaceCat.FCPlot.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_action">
            <summary>
            移动类型
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_dataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_isPaintingGhost">
            <summary>
            是否正在绘制阴影
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_marks">
            <summary>
            关键点
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_moveTimes">
            <summary>
            移动次数
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_sourceFields">
            <summary>
            源字段
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_startMarks">
            <summary>
            开始移动时的值
            </summary>
        </member>
        <member name="F:FaceCat.FCPlot.m_startPoint">
            <summary>
            开始移动的点
            </summary>
        </member>
        <member name="M:FaceCat.FCPlot.createPoint(FaceCat.FCPoint)">
            <summary>
            初始化一个点类型的通用方法
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FCPlot.create2PointsA(FaceCat.FCPoint)">
            <summary>
            初始化两个点类型的通用方法
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FCPlot.create2PointsB(FaceCat.FCPoint)">
            <summary>
            初始化两个点类型的通用方法
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FCPlot.create2CandlePoints(FaceCat.FCPoint)">
            <summary>
            初始两个K线点的方法
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FCPlot.create3Points(FaceCat.FCPoint)">
            <summary>
            初始化三个点类型的通用方法
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FCPlot.createCandlePoint(System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化对应K线上的点
            </summary>
            <param name="pos">位置</param>
            <param name="index">索引</param>
            <param name="close">收盘价字段</param>
        </member>
        <member name="M:FaceCat.FCPlot.create4CandlePoints(FaceCat.FCPoint)">
            <summary>
            初始四个K线点的方法
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FCPlot.delete">
            <summary>
             销毁资源方法
            </summary>
        </member>
        <member name="M:FaceCat.FCPlot.drawEllipse(FaceCat.FCPaint,System.Int64,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            画椭圆
            </summary>
            <param name="paint">绘图对象</param>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">横坐标</param>
            <param name="top">纵坐标</param>
            <param name="right">右侧横坐标</param>
            <param name="bottom">右侧纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawLine(FaceCat.FCPaint,System.Int64,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            画线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawRay(FaceCat.FCPaint,System.Int64,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            画射线
            </summary>
            <param name="paint">绘图对象</param>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <param name="k">直线参数k</param>
            <param name="b">直线参数b</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawRect(FaceCat.FCPaint,System.Int64,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            画矩形
            </summary>
            <param name="paint">绘图对象</param>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">横坐标</param>
            <param name="top">纵坐标</param>
            <param name="right">右侧横坐标</param>
            <param name="bottom">右侧纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawRect(FaceCat.FCPaint,System.Int64,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            画矩形
            </summary>
            <param name="paint">绘图对象</param>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">横坐标</param>
            <param name="top">纵坐标</param>
            <param name="right">右侧横坐标</param>
            <param name="bottom">右侧纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawPolyline(FaceCat.FCPaint,System.Int64,System.Int32,System.Int32,FaceCat.FCPoint[])">
            <summary>
            画曲线
            </summary>
            <param name="paint">绘图对象</param>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">点的集合</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawSelect(FaceCat.FCPaint,System.Int64,System.Single,System.Single)">
            <summary>
            绘制选中点
            </summary>
            <param name="paint">绘图对象</param>
            <param name="dwPenColor">颜色</param>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawText(FaceCat.FCPaint,System.String,System.Int64,FaceCat.FCFont,System.Int32,System.Int32)">
            <summary>
            画文字
            </summary>
            <param name="paint">绘图对象</param>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.drawText(FaceCat.FCPaint,System.String,System.Int64,FaceCat.FCFont,System.Single,System.Single)">
            <summary>
            画文字
            </summary>
            <param name="paint">绘图对象</param>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.fillPolygon(FaceCat.FCPaint,System.Int64,FaceCat.FCPoint[])">
            <summary>
            填充多边形
            </summary>
            <param name="paint">绘图对象</param>
            <param name="color">颜色</param>
            <param name="points">点的集合</param>
        </member>
        <member name="M:FaceCat.FCPlot.getCandleRange(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取K线区域内最高价和最低价
            </summary>
            <param name="pList">点阵集合</param>
            <returns>幅度尺的参数</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getAction">
            <summary>
            获取动作
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getIndex(FaceCat.FCPoint)">
            <summary>
            根据坐标获取索引
            </summary>
            <param name="mp">坐标</param>
            <returns>索引</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getLineParams(FaceCat.PlotMark,FaceCat.PlotMark)">
            <summary>
            获取直线的参数
            </summary>
            <param name="markA">第一个点</param>
            <param name="markB">第二个点</param>
            <returns>直线的参数</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getLRBandRange(FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Single[])">
            <summary>
            获取线性回归带的高低点偏离值
            </summary>
            <param name="pList">点阵集合</param>
            <param name="param">直线参数</param>
            <returns>高低点偏离值</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getLRParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取线性回归的参数
            </summary>
            <param name="marks">点阵集合</param>
            <returns>点阵数组</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getMovingPoint">
            <summary>
            获取移动坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCPlot.getNumberValue(FaceCat.FCPoint)">
            <summary>
            根据坐标获取数值
            </summary>
            <param name="mp">坐标</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getPx">
            <summary>
            获取偏移横坐标
            </summary>
            <returns>偏移横坐标</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getPy">
            <summary>
            获取偏移纵坐标
            </summary>
            <returns>偏移纵坐标</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getRectangle(FaceCat.PlotMark,FaceCat.PlotMark)">
            <summary>
            根据两点获取矩形
            </summary>
            <param name="markA">第一个点</param>
            <param name="markB">第二个点</param>
            <returns>矩形对象</returns>
        </member>
        <member name="M:FaceCat.FCPlot.getTouchOverPoint">
            <summary>
            获取瞄准的坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCPlot.GoldenRatioParams(System.Double,System.Double)">
            <summary>
            获取黄金分割线的直线参数
            </summary>
            <param name="value1">值1</param>
            <param name="value2">值2</param>
            <returns>黄金分割线的直线参数</returns>
        </member>
        <member name="M:FaceCat.FCPlot.hLinesSelect(System.Single[],System.Int32)">
            <summary>
            多条横线的选中方法
            </summary>
            <param name="param">参数</param>
            <param name="length">长度</param>
            <returns>是否选中</returns>
        </member>
        <member name="M:FaceCat.FCPlot.move(FaceCat.FCPoint)">
            <summary>
            移动线条
            </summary>
            <param name="mp">坐标</param>
        </member>
        <member name="M:FaceCat.FCPlot.movePlot(System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single,System.Double,System.Double,System.Int32,System.Double@,System.Int32@)">
            <summary>
            移动画线
            </summary>
            <param name="touchY">纵坐标</param>
            <param name="startY">开始纵坐标</param>
            <param name="startIndex">开始索引</param>
            <param name="touchBeginIndex">触摸开始索引</param>
            <param name="touchEndIndex">触摸结束索引</param>
            <param name="pureV">纵向距离</param>
            <param name="max">最大值</param>
            <param name="min">最小值</param>
            <param name="dataCount">数据条数</param>
            <param name="yAddValue">纵向变化值</param>
            <param name="newIndex">新的索引</param>
        </member>
        <member name="M:FaceCat.FCPlot.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FCPlot.onMoveEnd">
            <summary>
            移动结束
            </summary>
        </member>
        <member name="M:FaceCat.FCPlot.onMoveStart">
            <summary>
            移动开始
            </summary>
        </member>
        <member name="M:FaceCat.FCPlot.onMoving">
            <summary>
            移动
            </summary>
        </member>
        <member name="M:FaceCat.FCPlot.onPaint(FaceCat.FCPaint)">
            <summary>
            绘图对象
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FCPlot.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FCPlot.onSelect">
            <summary>
            判断选中
            </summary>
            <returns>是否选中</returns>
        </member>
        <member name="M:FaceCat.FCPlot.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="M:FaceCat.FCPlot.px(System.Int32)">
            <summary>
            获取绘制横坐标
            </summary>
            <param name="index">索引</param>
            <returns>横坐标</returns>
        </member>
        <member name="M:FaceCat.FCPlot.py(System.Double)">
            <summary>
            获取绘制纵坐标
            </summary>
            <param name="value">值</param>
            <returns>纵坐标</returns>
        </member>
        <member name="M:FaceCat.FCPlot.px(System.Single)">
            <summary>
            根据横坐标获取画线工具内部横坐标
            </summary>
            <param name="x">横坐标</param>
            <returns>内部横坐标</returns>
        </member>
        <member name="M:FaceCat.FCPlot.py(System.Single)">
            <summary>
            根据纵坐标获取画线工具内部纵坐标
            </summary>
            <param name="y">纵坐标</param>
            <returns>内部纵坐标</returns>
        </member>
        <member name="M:FaceCat.FCPlot.render(FaceCat.FCPaint)">
            <summary>
            绘制到图像上
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FCPlot.resize(System.Int32)">
            <summary>
            调整大小
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:FaceCat.FCPlot.resize(FaceCat.FCPoint,FaceCat.FCPoint)">
            <summary>
            重新调整大小
            </summary>
            <param name="mp">坐标</param>
            <param name="oppositePoint">点位置</param>
        </member>
        <member name="M:FaceCat.FCPlot.selectPoint(FaceCat.FCPoint,System.Single,System.Single)">
            <summary>
            判断是否选中了指定的点
            </summary>
            <param name="mp">坐标</param>
            <param name="x">点的横坐标</param>
            <param name="y">点的纵坐标</param>
            <returns>是否选中</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectLine(FaceCat.FCPoint,System.Single,System.Single,System.Single)">
            <summary>
            判断是否选中线
            </summary>
            <param name="mp">点的位置</param>
            <param name="x">横坐标</param>
            <param name="k">直线参数k</param>
            <param name="b">直线参数b</param>
            <returns>是否选中线</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectLine(FaceCat.FCPoint,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            判断是否选中线
            </summary>
            <param name="mp">点的位置</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <returns>是否选中线</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectRay(FaceCat.FCPoint,System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            判断是否选中射线
            </summary>
            <param name="mp">点的位置</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <param name="k">直线参数k</param>
            <param name="b">直线参数b</param>
            <returns>是否选中射线</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectRay(FaceCat.FCPoint,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            判断是否选中射线
            </summary>
            <param name="mp">点的位置</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <returns>是否选中射线</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectRect(FaceCat.FCPoint,FaceCat.PlotMark,FaceCat.PlotMark)">
            <summary>
            获取选中状态
            </summary>
            <param name="mp">点的位置</param>
            <param name="markA">点A</param>
            <param name="markB">点B</param>
            <returns>选中状态</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectSegment(FaceCat.FCPoint,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            判断是否选中线段
            </summary>
            <param name="mp">坐标</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <returns>是否选中线段</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectSine(FaceCat.FCPoint,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            判断是否选中正弦线
            </summary>
            <param name="mp">点的位置</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <returns>是否选中正弦线</returns>
        </member>
        <member name="M:FaceCat.FCPlot.selectTriangle(FaceCat.FCPoint,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            判断是否选中三角形
            </summary>
            <param name="mp">点的位置</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <param name="x3">第三个点的横坐标</param>
            <param name="y3">第三个点的纵坐标</param>
            <returns>是否选中三角形</returns>
        </member>
        <member name="M:FaceCat.FCPlot.textSize(FaceCat.FCPaint,System.String,FaceCat.FCFont)">
            <summary>
            获取文字的大小
            </summary>
            <param name="paint">绘图对象</param>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <returns>大小</returns>
        </member>
        <member name="P:FaceCat.FCPlot.AttachVScale">
            <summary>
            获取或设置附着在左轴还是右轴
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Color">
            <summary>
            获取或设置线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Cursor">
            <summary>
            设置触摸形状
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Div">
            <summary>
            获取或设置所在图层
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.DrawGhost">
            <summary>
            获取或设置是否画移动残影
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Enabled">
            <summary>
            获取或设置是否可以选中或拖放
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Font">
            <summary>
            获取或设置字体
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Chart">
            <summary>
            获取所在布局
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.LineStyle">
            <summary>
            获取或设置线的样式，null为实线
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.LineWidth">
            <summary>
            获取或设置线的宽度
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Native">
            <summary>
            获取方法库
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.PlotType">
            <summary>
            获取或设置线条的类型
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Selected">
            <summary>
            获取或设置是否被选中
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.SelectedColor">
            <summary>
            获取或设置选中色
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.SelectedPoint">
            <summary>
            获取或设置选中点的样式
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Text">
            <summary>
            获取或设置显示的文字
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.Visible">
            <summary>
            获取或设置可见度
            </summary>
        </member>
        <member name="P:FaceCat.FCPlot.WorkingAreaWidth">
            <summary>
            获取区域宽度
            </summary>
            <returns>宽度</returns>
        </member>
        <member name="P:FaceCat.FCPlot.WorkingAreaHeight">
            <summary>
            获取区域高度
            </summary>
            <returns>高度</returns>
        </member>
        <member name="P:FaceCat.FCPlot.ZOrder">
            <summary>
            获取或设置图层顺序
            </summary>
        </member>
        <member name="M:FaceCat.AndrewsPitchfork.#ctor">
            <summary>
            创建安德鲁斯干草叉
            </summary>
        </member>
        <member name="M:FaceCat.AndrewsPitchfork.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.AndrewsPitchfork.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>初始化是否成功</returns>
        </member>
        <member name="M:FaceCat.AndrewsPitchfork.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.AndrewsPitchfork.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Angleline">
            <summary>
            角度线
            </summary>
        </member>
        <member name="M:FaceCat.Angleline.#ctor">
            <summary>
            创建角度线
            </summary>
        </member>
        <member name="M:FaceCat.Angleline.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Angleline.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Angleline.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Angleline.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.ArrowSegment">
            <summary>
            箭头线段
            </summary>
        </member>
        <member name="M:FaceCat.ArrowSegment.#ctor">
            <summary>
            创建箭头线段
            </summary>
        </member>
        <member name="M:FaceCat.ArrowSegment.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.ArrowSegment.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.ArrowSegment.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.ArrowSegment.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.BoxLine">
            <summary>
            箱形线
            </summary>
        </member>
        <member name="T:FaceCat.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="M:FaceCat.Rect.#ctor">
            <summary>
            创建矩形
            </summary>
        </member>
        <member name="F:FaceCat.Rect.oppositePoint">
            <summary>
            对面点的坐标
            </summary>
        </member>
        <member name="M:FaceCat.Rect.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Rect.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>初始化是否成功</returns>
        </member>
        <member name="M:FaceCat.Rect.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Rect.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.Rect.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.Rect.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="M:FaceCat.BoxLine.#ctor">
            <summary>
            创建箱形线
            </summary>
        </member>
        <member name="M:FaceCat.BoxLine.getAction(FaceCat.FCPoint)">
            <summary>
            获取动作
            </summary>
            <param name="mp">点的位置</param>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.BoxLine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.BoxLine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.BoxLine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.BoxLine.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.BoxLine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Circle">
            <summary>
            圆
            </summary>
        </member>
        <member name="M:FaceCat.Circle.#ctor">
            <summary>
            创建圆
            </summary>
        </member>
        <member name="M:FaceCat.Circle.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Circle.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Circle.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Circle.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.CircumCircle">
            <summary>
            外接圆
            </summary>
        </member>
        <member name="M:FaceCat.CircumCircle.#ctor">
            <summary>
            创建外接圆
            </summary>
        </member>
        <member name="M:FaceCat.CircumCircle.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.CircumCircle.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.CircumCircle.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.CircumCircle.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.DownArrow">
            <summary>
            下跌箭头
            </summary>
        </member>
        <member name="M:FaceCat.DownArrow.#ctor">
            <summary>
            创建下跌箭头
            </summary>
        </member>
        <member name="M:FaceCat.DownArrow.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.DownArrow.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.DownArrow.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.DownArrow.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Dropline">
            <summary>
            下降45度线
            </summary>
        </member>
        <member name="M:FaceCat.Dropline.#ctor">
            <summary>
            创建下降45度线
            </summary>
        </member>
        <member name="M:FaceCat.Dropline.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Dropline.getDropLineParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取直线的参数
            </summary>
            <param name="pList">点阵集合</param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.Dropline.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Dropline.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Dropline.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Ellipse">
            <summary>
            椭圆
            </summary>
        </member>
        <member name="M:FaceCat.Ellipse.#ctor">
            <summary>
            创建椭圆
            </summary>
        </member>
        <member name="M:FaceCat.Ellipse.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Ellipse.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Ellipse.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Ellipse.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.FiboEllipse">
            <summary>
            斐波圆
            </summary>
        </member>
        <member name="M:FaceCat.FiboEllipse.#ctor">
            <summary>
            创建斐波圆
            </summary>
        </member>
        <member name="M:FaceCat.FiboEllipse.fibonacciEllipseParam(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            斐波圆的参数
            </summary>
            <param name="pList">点阵描述集合</param>
            <returns>斐波圆的参数</returns>
        </member>
        <member name="M:FaceCat.FiboEllipse.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.FiboEllipse.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化图形
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FiboEllipse.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.FiboEllipse.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FiboEllipse.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.FiboFanline">
            <summary>
            斐波扇面
            </summary>
        </member>
        <member name="M:FaceCat.FiboFanline.#ctor">
            <summary>
            创建斐波扇面
            </summary>
        </member>
        <member name="M:FaceCat.FiboFanline.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.FiboFanline.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FiboFanline.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.FiboFanline.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FiboFanline.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.FiboTimezone">
            <summary>
            斐波周期线
            </summary>
        </member>
        <member name="M:FaceCat.FiboTimezone.#ctor">
            <summary>
            创建斐波周期线
            </summary>
        </member>
        <member name="M:FaceCat.FiboTimezone.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.FiboTimezone.getFibonacciTimeZonesParam(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取斐波周期线的参数
            </summary>
            <param name="pList">点阵描述</param>
            <returns>斐波周期线的参数</returns>
        </member>
        <member name="M:FaceCat.FiboTimezone.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.FiboTimezone.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.FiboTimezone.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.GannBox">
            <summary>
            甘氏箱
            </summary>
        </member>
        <member name="M:FaceCat.GannBox.#ctor">
            <summary>
            创建甘氏箱
            </summary>
        </member>
        <member name="F:FaceCat.GannBox.oppositePoint">
            <summary>
            对面点的坐标
            </summary>
        </member>
        <member name="M:FaceCat.GannBox.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.GannBox.getClickStatus">
            <summary>
            获取选中状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.GannBox.getGannBoxPoints(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            获取江恩箱的重要点
            </summary>
            <param name="x1">第一个点的X</param>
            <param name="y1">第一个点的Y</param>
            <param name="x2">第二个点的X</param>
            <param name="y2">第二个点的Y</param>
            <returns>江恩箱的重要点</returns>
        </member>
        <member name="M:FaceCat.GannBox.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.GannBox.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.GannBox.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.GannBox.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.GannBox.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.GannLine">
            <summary>
            甘氏线
            </summary>
        </member>
        <member name="M:FaceCat.GannLine.#ctor">
            <summary>
            创建甘氏线
            </summary>
        </member>
        <member name="M:FaceCat.GannLine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.GannLine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.GannLine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.GannLine.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.GannLine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.GoldenRatio">
            <summary>
            黄金分割线
            </summary>
        </member>
        <member name="M:FaceCat.GoldenRatio.#ctor">
            <summary>
            创建黄金分割线
            </summary>
        </member>
        <member name="M:FaceCat.GoldenRatio.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.GoldenRatio.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.GoldenRatio.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.GoldenRatio.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.GoldenRatio.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.GoldenRatio.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Ga">
            <summary>
            黄金分割目标线
            </summary>
        </member>
        <member name="T:FaceCat.Triangle">
            <summary>
            三角形
            </summary>
        </member>
        <member name="M:FaceCat.Triangle.#ctor">
            <summary>
            创建三角形
            </summary>
        </member>
        <member name="M:FaceCat.Triangle.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Triangle.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Triangle.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Triangle.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.Triangle.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="M:FaceCat.Ga.#ctor">
            <summary>
            创建黄金分割目标线
            </summary>
        </member>
        <member name="M:FaceCat.Ga.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Ga.getGoldenRatioAimParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取黄金分割的直线参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.Ga.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Ga.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Gp">
            <summary>
            黄金分割价位线
            </summary>
        </member>
        <member name="M:FaceCat.Gp.#ctor">
            <summary>
            创建黄金分割价位线
            </summary>
        </member>
        <member name="M:FaceCat.Gp.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Gp.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Gp.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Gp.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.Gp.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.HLine">
            <summary>
            水平线
            </summary>
        </member>
        <member name="M:FaceCat.HLine.#ctor">
            <summary>
            创建水平线
            </summary>
        </member>
        <member name="M:FaceCat.HLine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.HLine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.HLine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.HLine.onMoving">
            <summary>
            移动
            </summary>
        </member>
        <member name="M:FaceCat.HLine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.LevelGrading">
            <summary>
            高低推档
            </summary>
        </member>
        <member name="M:FaceCat.LevelGrading.#ctor">
            <summary>
            创建高低推档
            </summary>
        </member>
        <member name="M:FaceCat.LevelGrading.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.LevelGrading.levelGradingParams(System.Double,System.Double)">
            <summary>
            获取高低推档的直线参数
            </summary>
            <param name="value1">值1</param>
            <param name="value2">值2</param>
            <returns>高低推档的直线参数</returns>
        </member>
        <member name="M:FaceCat.LevelGrading.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.LevelGrading.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.LevelGrading.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.LevelGrading.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.LevelGrading.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Line">
            <summary>
            直线
            </summary>
        </member>
        <member name="M:FaceCat.Line.#ctor">
            <summary>
            创建直线
            </summary>
        </member>
        <member name="M:FaceCat.Line.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Line.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Line.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Line.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.LrBand">
            <summary>
            线性回归带
            </summary>
        </member>
        <member name="M:FaceCat.LrBand.#ctor">
            <summary>
            创建线性回归带
            </summary>
        </member>
        <member name="M:FaceCat.LrBand.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.LrBand.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.LrBand.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.LrBand.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.LrBand.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.LrChannel">
            <summary>
            回归通道
            </summary>
        </member>
        <member name="M:FaceCat.LrChannel.#ctor">
            <summary>
            创建回归通道
            </summary>
        </member>
        <member name="M:FaceCat.LrChannel.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.LrChannel.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.LrChannel.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.LrChannel.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.LrChannel.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.LrLine">
            <summary>
            线性回归
            </summary>
        </member>
        <member name="M:FaceCat.LrLine.#ctor">
            <summary>
            创建线性回归
            </summary>
        </member>
        <member name="M:FaceCat.LrLine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.LrLine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.LrLine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.LrLine.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.LrLine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.NullPoint">
            <summary>
            解消点
            </summary>
        </member>
        <member name="M:FaceCat.NullPoint.#ctor">
            <summary>
            创建解消点
            </summary>
        </member>
        <member name="M:FaceCat.NullPoint.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.NullPoint.getNullPointParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取解消点的参数
            </summary>
            <param name="pList">点阵集合</param>
            <returns>解消点的参数</returns>
        </member>
        <member name="M:FaceCat.NullPoint.nullPoint(System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            计算解消点参数
            </summary>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
            <param name="nullX">解消点的横坐标</param>
            <param name="nullY">解消点的纵坐标</param>
        </member>
        <member name="M:FaceCat.NullPoint.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.NullPoint.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.NullPoint.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Parallel">
            <summary>
            平行线
            </summary>
        </member>
        <member name="M:FaceCat.Parallel.#ctor">
            <summary>
            创建平行线
            </summary>
        </member>
        <member name="M:FaceCat.Parallel.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Parallel.getParallelParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取平行直线的参数
            </summary>
            <param name="pList">点阵集合</param>
            <returns>平行直线的参数</returns>
        </member>
        <member name="M:FaceCat.Parallel.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Parallel.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Parallel.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.ParalleGram">
            <summary>
            平行四边形
            </summary>
        </member>
        <member name="M:FaceCat.ParalleGram.#ctor">
            <summary>
            创建平行四边形
            </summary>
        </member>
        <member name="M:FaceCat.ParalleGram.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.ParalleGram.getPLPoints(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取参数
            </summary>
            <param name="marks">点的集合</param>
            <returns>坐标数组</returns>
        </member>
        <member name="M:FaceCat.ParalleGram.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.ParalleGram.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.ParalleGram.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.ParalleGram.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Percent">
            <summary>
            百分比线
            </summary>
        </member>
        <member name="M:FaceCat.Percent.#ctor">
            <summary>
            创建百分比线
            </summary>
        </member>
        <member name="M:FaceCat.Percent.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Percent.getPercentParams(System.Double,System.Double)">
            <summary>
            获取百分比线的参数
            </summary>
            <param name="value1">值1</param>
            <param name="value2">值2</param>
            <returns>百分比线的参数</returns>
        </member>
        <member name="M:FaceCat.Percent.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Percent.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Percent.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.Percent.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.Percent.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Periodic">
            <summary>
            周期线
            </summary>
        </member>
        <member name="M:FaceCat.Periodic.#ctor">
            <summary>
            创建周期线
            </summary>
        </member>
        <member name="F:FaceCat.Periodic.m_period">
            <summary>
            周期
            </summary>
        </member>
        <member name="F:FaceCat.Periodic.m_beginPeriod">
            <summary>
            初始移动周期
            </summary>
        </member>
        <member name="M:FaceCat.Periodic.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Periodic.getPLParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取线条参数
            </summary>
            <param name="pList">点阵的集合</param>
            <returns>点阵的数组描述</returns>
        </member>
        <member name="M:FaceCat.Periodic.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">出现位置</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Periodic.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Periodic.onMoving">
            <summary>
            移动方法
            </summary>
        </member>
        <member name="M:FaceCat.Periodic.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Price">
            <summary>
            价格签条
            </summary>
        </member>
        <member name="M:FaceCat.Price.#ctor">
            <summary>
            创建价格签条
            </summary>
        </member>
        <member name="M:FaceCat.Price.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Price.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Price.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Price.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.PriceChannel">
            <summary>
            价格通道线
            </summary>
        </member>
        <member name="M:FaceCat.PriceChannel.#ctor">
            <summary>
            创建价格通道线
            </summary>
        </member>
        <member name="M:FaceCat.PriceChannel.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.PriceChannel.getLine3Params(FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Single@,System.Single@,System.Single@)">
            <summary>
            获取第三条线的参数
            </summary>
            <param name="marks">点阵集合</param>
            <param name="k">直线参数k</param>
            <param name="d">直线参数d</param>
            <param name="x4">第四个点的横坐标</param>
        </member>
        <member name="M:FaceCat.PriceChannel.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.PriceChannel.onPaint(FaceCat.FCPaint)">
            <summary>
            绘制图像
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.PriceChannel.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.PriceChannel.paintEx(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.QuadrantLines">
            <summary>
            四等分线
            </summary>
        </member>
        <member name="M:FaceCat.QuadrantLines.#ctor">
            <summary>
            创建四等分线
            </summary>
        </member>
        <member name="M:FaceCat.QuadrantLines.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.QuadrantLines.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.QuadrantLines.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.QuadrantLines.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.QuadrantLines.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.RaffChannel">
            <summary>
            拉弗回归通道
            </summary>
        </member>
        <member name="M:FaceCat.RaffChannel.#ctor">
            <summary>
            创建拉弗回归通道
            </summary>
        </member>
        <member name="M:FaceCat.RaffChannel.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.RaffChannel.getRRCRange(FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Single[])">
            <summary>
            获取拉弗线性回归的高低点值
            </summary>
            <param name="pList">点阵集合</param>
            <param name="param">直线参数</param>
            <returns>拉弗线性回归的高低点值</returns>
        </member>
        <member name="M:FaceCat.RaffChannel.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.RaffChannel.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.RaffChannel.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.RaffChannel.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.RangeRuler">
            <summary>
            幅度尺
            </summary>
        </member>
        <member name="M:FaceCat.RangeRuler.#ctor">
            <summary>
            创建幅度尺
            </summary>
        </member>
        <member name="M:FaceCat.RangeRuler.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.RangeRuler.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.RangeRuler.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.RangeRuler.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.RaseLine">
            <summary>
            上升45度线
            </summary>
        </member>
        <member name="M:FaceCat.RaseLine.#ctor">
            <summary>
            创建上升45度线
            </summary>
        </member>
        <member name="M:FaceCat.RaseLine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.RaseLine.getRaseLineParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取直线的参数
            </summary>
            <param name="pList">点阵集合</param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.RaseLine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.RaseLine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.RaseLine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Ray">
            <summary>
            射线
            </summary>
        </member>
        <member name="M:FaceCat.Ray.#ctor">
            <summary>
            创建射线
            </summary>
        </member>
        <member name="M:FaceCat.Ray.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Ray.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Ray.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Ray.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Segment">
            <summary>
            线段
            </summary>
        </member>
        <member name="M:FaceCat.Segment.#ctor">
            <summary>
            创建线段
            </summary>
        </member>
        <member name="M:FaceCat.Segment.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Segment.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Segment.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Segment.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.Sine">
            <summary>
            正弦线
            </summary>
        </member>
        <member name="M:FaceCat.Sine.#ctor">
            <summary>
            创建正弦线
            </summary>
        </member>
        <member name="M:FaceCat.Sine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.Sine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.Sine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.Sine.onMoving">
            <summary>
            移动方法
            </summary>
        </member>
        <member name="M:FaceCat.Sine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.SpeedResist">
            <summary>
            速阻线
            </summary>
        </member>
        <member name="M:FaceCat.SpeedResist.#ctor">
            <summary>
            创建速阻线
            </summary>
        </member>
        <member name="M:FaceCat.SpeedResist.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.SpeedResist.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.SpeedResist.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.SpeedResist.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.SpeedResist.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.SeChannel">
            <summary>
            标准误差通道
            </summary>
        </member>
        <member name="M:FaceCat.SeChannel.#ctor">
            <summary>
            创建标准误差通道
            </summary>
        </member>
        <member name="M:FaceCat.SeChannel.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.SeChannel.getSEChannelSD(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取标准误差通道的标准差值
            </summary>
            <param name="pList">点阵集合</param>
            <returns>标准误差通道的参数</returns>
        </member>
        <member name="M:FaceCat.SeChannel.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.SeChannel.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.SeChannel.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.SeChannel.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.SymmetricLine">
            <summary>
            对称线
            </summary>
        </member>
        <member name="M:FaceCat.SymmetricLine.#ctor">
            <summary>
            创建对称线
            </summary>
        </member>
        <member name="M:FaceCat.SymmetricLine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.SymmetricLine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.SymmetricLine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.SymmetricLine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.SymemetrictriAngle">
            <summary>
            对称三角形
            </summary>
        </member>
        <member name="M:FaceCat.SymemetrictriAngle.#ctor">
            <summary>
            创建对称三角形
            </summary>
        </member>
        <member name="M:FaceCat.SymemetrictriAngle.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.SymemetrictriAngle.getSymmetricTriangleParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取对称三角形直线的参数
            </summary>
            <param name="pList">点阵集合</param>
            <returns>对称三角形直线的参数</returns>
        </member>
        <member name="M:FaceCat.SymemetrictriAngle.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.SymemetrictriAngle.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.SymemetrictriAngle.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.TimeRuler">
            <summary>
            时间尺
            </summary>
        </member>
        <member name="M:FaceCat.TimeRuler.#ctor">
            <summary>
            创建时间尺
            </summary>
        </member>
        <member name="M:FaceCat.TimeRuler.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.TimeRuler.getTimeRulerParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取时间尺的参数
            </summary>
            <param name="pList">点阵集合</param>
            <returns>时间尺的参数</returns>
        </member>
        <member name="M:FaceCat.TimeRuler.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.TimeRuler.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.TimeRuler.onMoving">
            <summary>
            移动线条
            </summary>
        </member>
        <member name="M:FaceCat.TimeRuler.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.TironeLevels">
            <summary>
            泰龙水平线
            </summary>
        </member>
        <member name="M:FaceCat.TironeLevels.#ctor">
            <summary>
            创建泰龙水平线
            </summary>
        </member>
        <member name="M:FaceCat.TironeLevels.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.TironeLevels.getTironelLevelsParams(FaceCat.HashMap{System.Int32,FaceCat.PlotMark})">
            <summary>
            获取泰龙水平线的参数
            </summary>
            <param name="pList">点阵集合</param>
            <returns>泰龙水平线的参数</returns>
        </member>
        <member name="M:FaceCat.TironeLevels.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.TironeLevels.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.TironeLevels.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.UpArrow">
            <summary>
            上涨箭头
            </summary>
        </member>
        <member name="M:FaceCat.UpArrow.#ctor">
            <summary>
            创建上涨箭头
            </summary>
        </member>
        <member name="M:FaceCat.UpArrow.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.UpArrow.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.UpArrow.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.UpArrow.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.VLine">
            <summary>
            垂直线
            </summary>
        </member>
        <member name="M:FaceCat.VLine.#ctor">
            <summary>
            创建垂直线
            </summary>
        </member>
        <member name="M:FaceCat.VLine.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.VLine.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.VLine.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.VLine.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.WaveRuler">
            <summary>
            波浪尺
            </summary>
        </member>
        <member name="M:FaceCat.WaveRuler.#ctor">
            <summary>
            创建波浪尺
            </summary>
        </member>
        <member name="M:FaceCat.WaveRuler.getAction">
            <summary>
            获取动作类型
            </summary>
            <returns>动作类型</returns>
        </member>
        <member name="M:FaceCat.WaveRuler.getWaveRulerParams(System.Double,System.Double)">
            <summary>
            获取波浪尺参数
            </summary>
            <param name="value1">值1</param>
            <param name="value2">值2</param>
            <returns>波浪尺参数</returns>
        </member>
        <member name="M:FaceCat.WaveRuler.onCreate(FaceCat.FCPoint)">
            <summary>
            初始化线条
            </summary>
            <param name="mp">坐标</param>
            <returns>是否初始化成功</returns>
        </member>
        <member name="M:FaceCat.WaveRuler.onMoveStart">
            <summary>
            开始移动画线工具
            </summary>
        </member>
        <member name="M:FaceCat.WaveRuler.onPaintGhost(FaceCat.FCPaint)">
            <summary>
            绘制图像的残影
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.WaveRuler.onPaint(FaceCat.FCPaint,FaceCat.HashMap{System.Int32,FaceCat.PlotMark},System.Int64)">
            <summary>
            绘制图像的方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="pList">横纵值描述</param>
            <param name="lineColor">颜色</param>
        </member>
        <member name="T:FaceCat.PFactory">
            <summary>
            画线工具工厂类
            </summary>
        </member>
        <member name="M:FaceCat.PFactory.createPlot(System.String)">
            <summary>
            根据类型创建线条
            </summary>
            <param name="plotType">类型</param>
            <returns>画线工具对象</returns>
        </member>
        <member name="T:FaceCat.FCEvent">
            <summary>
            控件事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="T:FaceCat.FCInvokeEvent">
            <summary>
            在线程中调用方法事件
            </summary>
            <param name="sender">调用者</param>
            <param name="args">参数</param>
        </member>
        <member name="T:FaceCat.FCKeyEvent">
            <summary>
            键盘事件
            </summary>
            <param name="sender">调用者</param>
            <param name="key">按键</param>
        </member>
        <member name="T:FaceCat.FCPreviewKeyEvent">
            <summary>
            键盘事件
            </summary>
            <param name="sender">调用者</param>
            <param name="eventID">事件ID</param>
            <param name="key">按键</param>
        </member>
        <member name="T:FaceCat.FCTouchEvent">
            <summary>
            控件触摸事件
            </summary>
            <param name="sender">调用者</param>
            <param name="mp">触摸位置</param>
            <param name="button">按钮</param>
            <param name="clicks">点击次数</param>
            <param name="delta">滚轮值</param>
        </member>
        <member name="T:FaceCat.FCPreviewTouchEvent">
            <summary>
            控件触摸事件
            </summary>
            <param name="sender">调用者</param>
            <param name="eventID">事件ID</param>
            <param name="mp">触摸位置</param>
            <param name="button">按钮</param>
            <param name="clicks">点击次数</param>
            <param name="delta">滚轮值</param>
        </member>
        <member name="T:FaceCat.FCPaintEvent">
            <summary>
            控件重绘事件
            </summary>
            <param name="sender">调用者</param>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="T:FaceCat.FCTimerEvent">
            <summary>
            秒表事件
            </summary>
            <param name="sender">调用者</param>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="T:FaceCat.FCEventID">
            <summary>
            事件编号
            </summary>
        </member>
        <member name="T:FaceCat.FCChart">
            <summary>
             股票布局控件
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_tooltip_dely">
            <summary>
            提示框显示延迟tick值
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.#ctor">
            <summary>
            创建控件
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_divs">
            <summary>
            图层
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_cross_y">
            <summary>
            十字线定位y坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_hResizeType">
            <summary>
            横向重置大小标识
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_lastUnEmptyIndex">
            <summary>
            最后一条非空索引
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_lastRecordIsVisible">
            <summary>
            当前最后一条记录是否可见
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_lastVisibleKey">
            <summary>
            最后一条可见记录的时间
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_isScrollCross">
            <summary>
            滚动十字线标识
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_isTouchMove">
            <summary>
            触摸是否正在移动
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_lastTouchClickPoint">
            <summary>
            上次点击的位置
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_lastTouchMovePoint">
            <summary>
            上次移动的点位
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_lastTouchMoveTime">
            <summary>
            触摸最后一次移动的事件
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_scrollStep">
            <summary>
            按键滚动的幅度
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_showingSelectArea">
            <summary>
            显示选中区域
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_showingToolTip">
            <summary>
            是否正在显示提示框
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_timerID">
            <summary>
            秒表编号
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.m_userResizeDiv">
            <summary>
            获取或设置正在改变大小的图层
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.addDiv(System.Int32)">
            <summary>
            添加一个新的图层，按照所设置的比例调节纵向高度
            </summary>
            <param name="vPercent">纵向高度比例</param>
            <returns>图层</returns>
        </member>
        <member name="M:FaceCat.FCChart.addDiv">
            <summary>
            添加一个新的图层，自动调节高度
            </summary>
            <returns>图层ID</returns>
        </member>
        <member name="M:FaceCat.FCChart.adjust">
            <summary>
            设置可见部分的最大值和最小值
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.addPlot(FaceCat.FCPlot,FaceCat.FCPoint,FaceCat.ChartDiv)">
            <summary>
            在指定层的指定位置添加画线工具
            </summary>
            <param name="bpl">画线工具对象</param>
            <param name="mp">出现的位置</param>
            <param name="div">画线工具所在层</param>
        </member>
        <member name="M:FaceCat.FCChart.changeChart(FaceCat.FCChart.ScrollType,System.Int32)">
            <summary>
            对图像进行操作
            </summary>
            <param name="scrollType">ScrollType枚举</param>
            <param name="limitStep">滚动幅度</param>
        </member>
        <member name="M:FaceCat.FCChart.checkToolTip">
            <summary>
            检查并弹出提示框
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.checkLastVisibleIndex">
            <summary>
            检查最后可见索引
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.clear">
            <summary>
            清除图像上的数据，但不改变图形结构
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.clearSelectedShape">
            <summary>
            取消选中所有图形，包括K线，柱状图，线等
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.clearSelectedPlot">
            <summary>
            取消选中所有的画线工具
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.clearSelectedDiv">
            <summary>
            取消选中所有的层
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.closeSelectArea">
            <summary>
            隐藏选中框
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.divMaxOrMin(System.Int32,FaceCat.ChartDiv,System.Int32)">
            <summary>
            根据记录号获取层极值
            </summary>
            <param name="index">索引号</param>
            <param name="div">图层</param>
            <param name="flag">标识 0:最大值 1:最小值</param>
            <returns>极值</returns>
        </member>
        <member name="M:FaceCat.FCChart.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.findDiv(FaceCat.FCPoint)">
            <summary>
            由坐标获取层对象，返回图层对象
            </summary>
            <param name="mp">坐标</param>
            <returns>图层对象</returns>
        </member>
        <member name="M:FaceCat.FCChart.findDiv(FaceCat.BaseShape)">
            <summary>
            由图形名称获取包含它的层，返回图层对象
            </summary>
            <param name="shape">图形的名称</param>
            <returns>图层对象</returns>
        </member>
        <member name="M:FaceCat.FCChart.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCChart.getDivs">
            <summary>
            获取图层集合的拷备
            </summary>
            <returns>图层集合</returns>
        </member>
        <member name="M:FaceCat.FCChart.getHScaleDateString(System.Double,System.Double,FaceCat.DateType@)">
            <summary>
             获取横轴的文字
            </summary>
            <param name="date">日期</param>
            <param name="lDate">上一日期</param>
            <param name="dateType">日期类型</param>
            <returns>横轴的文字</returns>
        </member>
        <member name="M:FaceCat.FCChart.getIndex(FaceCat.FCPoint)">
            <summary>
            由坐标点获取它对应的索引
            </summary>
            <param name="mp">坐标</param>
            <returns>索引号</returns>
        </member>
        <member name="M:FaceCat.FCChart.getNumberValue(FaceCat.ChartDiv,FaceCat.FCPoint,FaceCat.AttachVScale)">
            <summary>
            获取坐标轴的值
            </summary>
            <param name="div">图层</param>
            <param name="mp">坐标</param>
            <param name="attachVScale">对应坐标轴</param>
            <returns>指标值</returns>
        </member>
        <!-- 对于成员“M:FaceCat.FCChart.getProperty(System.String,System.String@,System.String@)”忽略有格式错误的 XML 注释 -->
        <member name="M:FaceCat.FCChart.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCChart.getShapesCount(System.Int32)">
            <summary>
            由字段获取所有的图形
            </summary>
            <param name="field">字段</param>
            <returns>图形对象的数量</returns>
        </member>
        <member name="M:FaceCat.FCChart.getTouchOverIndex">
            <summary>
            获取触摸所在横向记录索引，索引是从0开始的，最大值为显示条数-1
            </summary>
            <returns>索引号</returns>
        </member>
        <member name="M:FaceCat.FCChart.getTouchOverDiv">
            <summary>
            获取触摸所在的图层
            </summary>
            <returns>图层</returns>
        </member>
        <member name="M:FaceCat.FCChart.getVScaleBaseField(FaceCat.ChartDiv,FaceCat.VScale)">
            <summary>
            获取纵轴的基础字段
            </summary>
            <param name="div">图层</param>
            <param name="vScale">指定纵轴</param>
            <returns>基准值</returns>
        </member>
        <member name="M:FaceCat.FCChart.getVScaleBaseValue(FaceCat.ChartDiv,FaceCat.VScale,System.Int32)">
            <summary>
            获取纵轴的基准值
            </summary>
            <param name="div">图层</param>
            <param name="vScale">指定纵轴</param>
            <param name="i">索引号</param>
            <returns>基准值</returns>
        </member>
        <member name="M:FaceCat.FCChart.getX(System.Int32)">
            <summary>
            获取指定索引的横坐标
            </summary>
            <param name="index">指定索引</param>
            <returns>横坐标</returns>
        </member>
        <member name="M:FaceCat.FCChart.getY(FaceCat.ChartDiv,System.Double,FaceCat.AttachVScale)">
            <summary>
            获取某一值对应的纵坐标
            </summary>
            <param name="div">图层</param>
            <param name="value">指定的值</param>
            <param name="attach">true为左纵轴，false为右纵轴</param>
            <returns>纵坐标</returns>
        </member>
        <member name="M:FaceCat.FCChart.isOperating">
            <summary>
            判断是否正在操作图形
            </summary>
            <returns>是否正在操作图形</returns>
        </member>
        <member name="M:FaceCat.FCChart.locateCrossLine">
            <summary>
            定位十字线
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.moveShape(FaceCat.ChartDiv,FaceCat.BaseShape)">
            <summary>
            将图形移动到另一个层中
            </summary>
            <param name="cDiv">目标层</param>
            <param name="shape">将要移动的图形</param>
        </member>
        <member name="M:FaceCat.FCChart.resetCrossOverIndex">
            <summary>
            重置十字线穿越的记录号
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.removeAll">
            <summary>
            重置图像，删除所有的数据，层，指标和画线工具等
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.removeDiv(FaceCat.ChartDiv)">
            <summary>
            移除图层
            </summary>
            <param name="div">图层</param>
        </member>
        <member name="M:FaceCat.FCChart.resizeDiv">
            <summary>
            拖动图层改变大小
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.resetVisibleRecord">
            <summary>
            自动设置首先可见和最后可见的记录号
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCChart.scrollCrossLineLeft(System.Int32)">
            <summary>
            左滚十字线，仅在显示十字线时有效
            </summary>
            <param name="step">幅度，即滚动跨越的记录条数</param>
        </member>
        <member name="M:FaceCat.FCChart.scrollCrossLineRight(System.Int32)">
            <summary>
            右滚十字线，仅在显示十字线时有效
            </summary>
            <param name="step">幅度，即滚动跨越的记录条数</param>
        </member>
        <member name="M:FaceCat.FCChart.scrollLeft(System.Int32)">
            <summary>
            左滚画面
            </summary>
            <param name="step">幅度，即滚动跨越的记录条数</param>
        </member>
        <member name="M:FaceCat.FCChart.scrollLeftToBegin">
            <summary>
            立即向左滚动到显示第一条数据为止
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.scrollRight(System.Int32)">
            <summary>
            右滚画面
            </summary>
            <param name="step">幅度，即滚动跨越的记录条数</param>
        </member>
        <member name="M:FaceCat.FCChart.scrollRightToEnd">
            <summary>
            立即向右滚动到显示最后一条数据为止
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.selectBar(FaceCat.ChartDiv,System.Single,System.Int32,System.Int32,System.Int32,FaceCat.AttachVScale,System.Int32)">
            <summary>
            判断是否选中柱状图
            </summary>
            <param name="div">图层</param>
            <param name="mpY">触摸所在纵坐标</param>
            <param name="fieldName">字段名</param>
            <param name="fieldName2">字段名2</param>
            <param name="styleField">样式字段</param>
            <param name="attachVScale">依附坐标轴</param>
            <param name="curIndex">当前索引</param>
            <returns>是否选中</returns>
        </member>
        <member name="M:FaceCat.FCChart.selectCandle(FaceCat.ChartDiv,System.Single,System.Int32,System.Int32,System.Int32,FaceCat.AttachVScale,System.Int32)">
            <summary>
            判断是否选中K线
            </summary>
            <param name="div">图层</param>
            <param name="mpY">触摸纵坐标</param>
            <param name="highField">最高价字段</param>
            <param name="lowField">最低价字段</param>
            <param name="styleField">样式字段</param>
            <param name="attachVScale">依附坐标轴</param>
            <param name="curIndex">当前索引</param>
            <returns>是否选中</returns>
        </member>
        <member name="M:FaceCat.FCChart.selectPolyline(FaceCat.ChartDiv,FaceCat.FCPoint,System.Int32,System.Single,FaceCat.AttachVScale,System.Int32)">
            <summary>
            判断是否选中线
            </summary>
            <param name="div">图层</param>
            <param name="mp">触摸位置</param>
            <param name="fieldName">字段名</param>
            <param name="lineWidth">线的宽度</param>
            <param name="attachVScale">依附坐标轴</param>
            <param name="curIndex">当前索引</param>
            <returns>是否选中</returns>
        </member>
        <member name="M:FaceCat.FCChart.selectShape(System.Int32,System.Int32)">
            <summary>
            选中线条的方法
            </summary>
            <param name="curIndex">当前选中的索引号</param>
            <param name="state">状态 0:只判断不选中 1:单选</param>
            <returns>线条</returns>
        </member>
        <member name="M:FaceCat.FCChart.setVisibleIndex(System.Int32,System.Int32)">
            <summary>
            设置图形首先可见的索引号和最后可见的索引号
            </summary>
            <param name="firstVisibleIndex">开始记录号</param>
            <param name="lastVisibleIndex">结束记录号</param>
        </member>
        <member name="M:FaceCat.FCChart.update">
            <summary>
            重新布局 
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.zoomOut">
            <summary>
            放大
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.zoomIn">
            <summary>
            缩小
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.drawText(FaceCat.FCPaint,System.String,System.Int64,FaceCat.FCFont,FaceCat.FCPoint)">
            <summary>
            绘制文字
            </summary>
            <param name="paint">绘图对象</param>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="point">坐标</param>
        </member>
        <member name="M:FaceCat.FCChart.drawThinLine(FaceCat.FCPaint,System.Int64,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            画细线，只能是水平线或垂直线
            </summary>
            <param name="paint">绘图对象</param>
            <param name="color">颜色</param>
            <param name="width">宽度</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.FCChart.getVScaleStep(System.Double,System.Double,FaceCat.ChartDiv,FaceCat.VScale)">
            <summary>
            获取纵轴的刻度
            </summary>
            <param name="max">最大值</param>
            <param name="min">最小值</param>
            <param name="div">图层</param>
            <param name="vScale">坐标轴</param>
            <returns>刻度集合</returns>
        </member>
        <member name="M:FaceCat.FCChart.onPaintBar(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.BarShape)">
            <summary>
            绘制成交量
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
            <param name="bs">线条对象</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintCandle(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.CandleShape)">
            <summary>
            绘制K线
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
            <param name="cs">K线</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintCandleEx(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.CandleShape,System.Int32,System.Double,System.Int32,System.Double)">
            <summary>
            绘制K线的扩展属性
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
            <param name="cs">K线</param>
            <param name="visibleMaxIndex">最大值索引</param>
            <param name="visibleMax">最大值</param>
            <param name="visibleMinIndex">最小值索引</param>
            <param name="visibleMin">最小值</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintCrossLine(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制十字线
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintDivBackGround(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制层背景
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintDivBorder(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制层边框       
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintHScale(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制横坐标轴
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintIcon(FaceCat.FCPaint)">
            <summary>
            绘制图形的图标
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintPlots(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制画线工具
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintPolyline(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.PolylineShape)">
            <summary>
            绘制趋势线
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
            <param name="ls">线条对象</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintPolyline(FaceCat.FCPaint,FaceCat.ChartDiv,System.Int64,System.Int64,System.Int32,System.Single,FaceCat.PolylineStyle,System.Double,FaceCat.AttachVScale,System.Int32,System.Int32,System.Int32,FaceCat.ArrayList{FaceCat.FCPoint},System.Int32@,System.Int32@)">
            <summary>
            绘制趋势线
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="lineColor">线的颜色</param>
            <param name="fillColor">填充色</param>
            <param name="ciClr">颜色字段</param>
            <param name="lineWidth">线的宽度</param>
            <param name="lineStyle">线的样式</param>
            <param name="value">点的值</param>
            <param name="attachVScale">依附坐标轴 </param>
            <param name="scaleX">横坐标 </param>
            <param name="lY">纵坐标 </param>
            <param name="i">索引</param>
            <param name="points">点集合</param>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintResizeLine(FaceCat.FCPaint)">
            <summary>
            绘制拖动的边线
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintSelectArea(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制选中块
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintShapes(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制K线，成交量，趋势线等等
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintText(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.TextShape)">
            <summary>
            绘制文字
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="ts">文字</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintTitle(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制标题
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintToolTip(FaceCat.FCPaint)">
            <summary>
            绘制提示框
            </summary>
            <param name="paint">绘图对象</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintVScale(FaceCat.FCPaint,FaceCat.ChartDiv)">
            <summary>
            绘制纵坐标轴
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">要绘制的层</param>
        </member>
        <member name="M:FaceCat.FCChart.onKeyDown(System.Char)">
            <summary>
            触摸滚动的方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCChart.onLoad">
            <summary>
            控件添加方法
            </summary>
        </member>
        <member name="M:FaceCat.FCChart.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸离开的方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCChart.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起的方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCChart.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下的方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCChart.onTouchWheel(FaceCat.FCTouchInfo)">
            <summary>
            触摸滚动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCChart.onKeyUp(System.Char)">
            <summary>
            按键弹起的方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCChart.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCChart.onTimer(System.Int32)">
            <summary>
            秒表回调方法
            </summary>
            <param name="timerID">编号</param>
        </member>
        <member name="M:FaceCat.FCChart.getMaxVisibleCount(System.Double,System.Int32)">
            <summary>
            获取最大显示条数
            </summary>
            <param name="hScalePixel">数据间隔</param>
            <param name="pureH">横向宽度</param>
            <returns>最大显示条数</returns>
        </member>
        <member name="M:FaceCat.FCChart.getCandleMaxStringPoint(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            获取K线最大值的显示位置
            </summary>
            <param name="scaleX">横坐标</param>
            <param name="scaleY">纵坐标</param>
            <param name="stringWidth">文字的宽度</param>
            <param name="stringHeight">文字的高度</param>
            <param name="actualWidth">横向宽度</param>
            <param name="leftVScaleWidth">左侧纵轴宽度</param>
            <param name="rightVScaleWidth">右侧纵轴宽度</param>
            <param name="x">最大值的横坐标</param>
            <param name="y">最大值的纵坐标</param>
        </member>
        <member name="M:FaceCat.FCChart.getCandleMinStringPoint(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            获取K线最小值的显示位置
            </summary>
            <param name="scaleX">横坐标</param>
            <param name="scaleY">纵坐标</param>
            <param name="stringWidth">文字的宽度</param>
            <param name="stringHeight">文字的高度</param>
            <param name="actualWidth">横向宽度</param>
            <param name="leftVScaleWidth">左侧纵轴宽度</param>
            <param name="rightVScaleWidth">右侧纵轴宽度</param>
            <param name="x">最小值的横坐标</param>
            <param name="y">最小值的纵坐标</param>
        </member>
        <member name="M:FaceCat.FCChart.getChartIndex(System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>
            获取某坐标对应的索引
            </summary>
            <param name="x">横坐标</param>
            <param name="leftVScaleWidth">左侧纵轴的高度</param>
            <param name="hScalePixel">数据间隔</param>
            <param name="firstVisibleIndex">首先可见索引</param>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.FCChart.getUpCandleHeight(System.Double,System.Double,System.Double,System.Double,System.Single)">
            <summary>
            获取阳K线的高度
            </summary>
            <param name="close">收盘价</param>
            <param name="open">开盘价</param>
            <param name="max">最高价</param>
            <param name="min">最低价</param>
            <param name="divPureV">层高度</param>
            <returns>高度</returns>
        </member>
        <member name="M:FaceCat.FCChart.getDownCandleHeight(System.Double,System.Double,System.Double,System.Double,System.Single)">
            <summary>
            获取阴K线的高度
            </summary>
            <param name="close">收盘价</param>
            <param name="open">开盘价</param>
            <param name="max">最高价</param>
            <param name="min">最低价</param>
            <param name="divPureV">层高度</param>
            <returns>高度</returns>
        </member>
        <member name="M:FaceCat.FCChart.scrollLeft(System.Int32,System.Int32,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            左滚
            </summary>
            <param name="step">步长</param>
            <param name="dateCount">数据条数</param>
            <param name="hScalePixel">数据间隔</param>
            <param name="pureH">横向宽度</param>
            <param name="fIndex">首先可见索引号</param>
            <param name="lIndex">最后可见索引号</param>
        </member>
        <member name="M:FaceCat.FCChart.scrollRight(System.Int32,System.Int32,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            右滚
            </summary>
            <param name="step">步长</param>
            <param name="dataCount">数据条数</param>
            <param name="hScalePixel">数据间隔</param>
            <param name="pureH">横向宽度</param>
            <param name="fIndex">首先可见索引号</param>
            <param name="lIndex">最后可见索引号</param>
        </member>
        <member name="M:FaceCat.FCChart.getVScaleValue(System.Int32,System.Double,System.Double,System.Single)">
            <summary>
            获取纵轴某坐标的值
            </summary>
            <param name="y">纵坐标</param>
            <param name="max">最大值</param>
            <param name="min">最小值</param>
            <param name="vHeight">层高度</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCChart.correctVisibleRecord(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            修正可见索引
            </summary>
            <param name="dataCount">数据条数</param>
            <param name="first">首先可见索引号</param>
            <param name="last">最后可见索引号</param>
        </member>
        <member name="M:FaceCat.FCChart.resetCrossOverIndex(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            重置十字线索引
            </summary>
            <param name="dataCount">数据条数</param>
            <param name="maxVisibleRecord">最大显示记录数</param>
            <param name="crossStopIndex">十字线索引</param>
            <param name="firstL">首先可见索引号</param>
            <param name="lastL">最后可见索引号</param>
            <returns>修正后的十字线索引</returns>
        </member>
        <member name="M:FaceCat.FCChart.zoomIn(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Double@)">
            <summary>
            缩小
            </summary>
            <param name="pureH">横向宽度</param>
            <param name="dataCount">数据条数</param>
            <param name="findex">首先可见索引号</param>
            <param name="lindex">最后可见索引号</param>
            <param name="hScalePixel">数据间隔</param>
        </member>
        <member name="M:FaceCat.FCChart.zoomOut(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Double@)">
            <summary>
            放大
            </summary>
            <param name="pureH">横向宽度</param>
            <param name="dataCount">数据条数</param>
            <param name="findex">首先可见索引号</param>
            <param name="lindex">最后可见索引号</param>
            <param name="hScalePixel">数据间隔</param>
        </member>
        <member name="P:FaceCat.FCChart.AutoFillHScale">
            <summary>
            获取或设置数据是否
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.BlankSpace">
            <summary>
            获取或设置空白空间
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.CanResizeV">
            <summary>
            获取或设置是否可纵向改变大小
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.CanResizeH">
            <summary>
            获取或设置是可横向改变大小
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.CanMoveShape">
            <summary>
            获取或设置是否可以拖动线条
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.CrossLineMoveMode">
            <summary>
            获取或设置十字线的移动方式
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.CanScroll">
            <summary>
            获取或设置是否可以执行滚动操作
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.CanZoom">
            <summary>
            获取或设置是否可以执行缩放操作
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.CrossStopIndex">
            <summary>
            获取十字线当前停留的记录索引
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.DataSource">
            <summary>
            获取数据源
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.FirstVisibleIndex">
            <summary>
            获取首先可见记录号
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.HScaleFieldText">
            <summary>
            获取横轴字段的显示文字
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.HScalePixel">
            <summary>
            获取或设置每条数据在X轴上所占的空间
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.LastVisibleIndex">
            <summary>
            获取最后可见的记录号
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.LeftVScaleWidth">
            <summary>
            获取或设置左侧Y轴的宽度
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.MaxVisibleRecord">
            <summary>
            获取显示最大记录数
            </summary>
            <returns>最大记录数</returns>
        </member>
        <member name="P:FaceCat.FCChart.MovingShape">
            <summary>
            获取或设置正在被移动的图形
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.MovingPlot">
            <summary>
            获取或设置正在移动的画线工具
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.ReverseHScale">
            <summary>
            获取或设置是否反转横轴
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.RightVScaleWidth">
            <summary>
            获取或设置右侧Y轴的宽度
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.ScrollAddSpeed">
            <summary>
            获取或设置是否启用加速效果
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.SelectedShape">
            <summary>
            获取或设置当前选中的线条
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.SelectedPlot">
            <summary>
            获取或设置当前选中的画线工具
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.SelectedDiv">
            <summary>
            获取或设置当前选中的层
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.ShowCrossLine">
            <summary>
            获取或设置是否显示十字线
            </summary>
        </member>
        <member name="P:FaceCat.FCChart.WorkingAreaWidth">
            <summary>
            获取层去掉坐标轴宽度后的横向宽度
            </summary>
            <returns>宽度</returns>
        </member>
        <member name="T:FaceCat.FCChart.ScrollType">
            <summary>
            图像滚动类型
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.ScrollType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.ScrollType.Left">
            <summary>
            左滚
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.ScrollType.Right">
            <summary>
            右滚
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.ScrollType.ZoomIn">
            <summary>
            缩小
            </summary>
        </member>
        <member name="F:FaceCat.FCChart.ScrollType.ZoomOut">
            <summary>
            放大
            </summary>
        </member>
        <member name="T:FaceCat.TimeDiv">
            <summary>
            时间层
            </summary>
        </member>
        <member name="M:FaceCat.TimeDiv.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建时间层
            </summary>
        </member>
        <member name="F:FaceCat.TimeDiv.m_spinHour">
            <summary>
            小时输入框
            </summary>
        </member>
        <member name="F:FaceCat.TimeDiv.m_spinMinute">
            <summary>
            分钟输入框
            </summary>
        </member>
        <member name="F:FaceCat.TimeDiv.m_spinSecond">
            <summary>
            秒输入框
            </summary>
        </member>
        <member name="M:FaceCat.TimeDiv.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.TimeDiv.getPaintingBackColor">
            <summary>
            获取绘制的背景色
            </summary>
            <returns>背景色</returns>
        </member>
        <member name="M:FaceCat.TimeDiv.getPaintingBorderColor">
            <summary>
            获取绘制的边线颜色
            </summary>
            <returns>边线颜色</returns>
        </member>
        <member name="M:FaceCat.TimeDiv.getPaintingTextColor">
            <summary>
            获取要绘制的前景色
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.TimeDiv.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.TimeDiv.onPaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.TimeDiv.onSelectedTimeChanged">
            <summary>
            数值修改事件
            </summary>
        </member>
        <member name="M:FaceCat.TimeDiv.onTimer">
            <summary>
            秒表触发方法
            </summary>
        </member>
        <member name="M:FaceCat.TimeDiv.selectedTimeChanged(System.Object)">
            <summary>
            数值修改事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.TimeDiv.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.TimeDiv.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="P:FaceCat.TimeDiv.Height">
            <summary>
            获取或设置高度
            </summary>
        </member>
        <member name="P:FaceCat.TimeDiv.Hour">
            <summary>
            获取或设置小时
            </summary>
        </member>
        <member name="P:FaceCat.TimeDiv.Minute">
            <summary>
            获取或设置分钟
            </summary>
        </member>
        <member name="P:FaceCat.TimeDiv.Second">
            <summary>
            获取或设置秒
            </summary>
        </member>
        <member name="T:FaceCat.VScale">
            <summary>
            Y轴
            </summary>
        </member>
        <member name="M:FaceCat.VScale.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.VScale.m_scaleSteps">
            <summary>
            刻度点
            </summary>
        </member>
        <member name="M:FaceCat.VScale.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.VScale.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.VScale.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.VScale.getScaleSteps">
            <summary>
            获取刻度点
            </summary>
            <returns>刻度点</returns>
        </member>
        <member name="M:FaceCat.VScale.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.VScale.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.VScale.setScaleSteps(FaceCat.ArrayList{System.Double})">
            <summary>
            设置刻度点
            </summary>
            <param name="scaleSteps">刻度点</param>
        </member>
        <member name="P:FaceCat.VScale.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.VScale.AutoMaxMin">
            <summary>
            获取或设置最大值和最小值是否自动计算
            </summary>
        </member>
        <member name="P:FaceCat.VScale.BaseField">
            <summary>
            获取或设置基础字段
            </summary>
        </member>
        <member name="P:FaceCat.VScale.CrossLineTip">
            <summary>
            获取或设置十字线标签
            </summary>
        </member>
        <member name="P:FaceCat.VScale.Digit">
            <summary>
            获取或设置面板显示数值保留小数的位数
            </summary>
        </member>
        <member name="P:FaceCat.VScale.Font">
            <summary>
            获取或设置左侧Y轴文字的字体
            </summary>
        </member>
        <member name="P:FaceCat.VScale.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.VScale.Magnitude">
            <summary>
            获取或设置量级
            </summary>
        </member>
        <member name="P:FaceCat.VScale.MidValue">
            <summary>
            获取或设置区别涨贴的中间值
            </summary>
        </member>
        <member name="P:FaceCat.VScale.NumberStyle">
            <summary>
            获取或设置数字类型
            </summary>
        </member>
        <member name="P:FaceCat.VScale.PaddingBottom">
            <summary>
            获取或设置最小值上方的间隙比例
            </summary>
        </member>
        <member name="P:FaceCat.VScale.PaddingTop">
            <summary>
            获取或设置最大值上方的间隙比例
            </summary>
        </member>
        <member name="P:FaceCat.VScale.Reverse">
            <summary>
            获取或设置是否反转
            </summary>
        </member>
        <member name="P:FaceCat.VScale.ScaleColor">
            <summary>
            获取或设置坐标轴的画笔
            </summary>
        </member>
        <member name="P:FaceCat.VScale.TextColor">
            <summary>
            获取或设置Y轴文字的颜色
            </summary>
        </member>
        <member name="P:FaceCat.VScale.TextColor2">
            <summary>
            获取或设置Y轴文字的颜色2
            </summary>
        </member>
        <member name="P:FaceCat.VScale.System">
            <summary>
            获取或设置坐标系的类型
            </summary>
        </member>
        <member name="P:FaceCat.VScale.Type">
            <summary>
            获取或设置坐标轴的类型
            </summary>
        </member>
        <member name="P:FaceCat.VScale.VisibleMax">
            <summary>
            获取或设置坐标值可见部分的最大值
            </summary>
        </member>
        <member name="P:FaceCat.VScale.VisibleMin">
            <summary>
            获取或设置坐标值可见部分的最小值
            </summary>
        </member>
        <member name="T:FaceCat.FCWordLine">
            <summary>
            字符行
            </summary>
        </member>
        <member name="M:FaceCat.FCWordLine.#ctor(System.Int32,System.Int32)">
            <summary>
            创建行
            </summary>
            <param name="start">开始索引</param>
            <param name="end">结束索引</param>
        </member>
        <member name="F:FaceCat.FCWordLine.m_end">
            <summary>
            结束索引
            </summary>
        </member>
        <member name="F:FaceCat.FCWordLine.m_start">
            <summary>
            开始索引
            </summary>
        </member>
        <member name="T:FaceCat.FCTextBox">
            <summary>
            文本框控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.#ctor">
            <summary>
            创建控件
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_isKeyDown">
            <summary>
            键盘是否按下
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_isTouchDown">
            <summary>
            是否触摸按下
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_offsetX">
            <summary>
            横向偏移量
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_ranges">
            <summary>
            文字矩形范围
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_redoStack">
            <summary>
            重做栈
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_showCursor">
            <summary>
            是否显示光标
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_startMovingIndex">
            <summary>
            开始移动的坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_stopMovingIndex">
            <summary>
            结束移动的坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_textChanged">
            <summary>
            文字是否改变
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.TICK">
            <summary>
            光标闪烁频率
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_timerID">
            <summary>
            秒表ID
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_undoStack">
            <summary>
            撤销栈
            </summary>
        </member>
        <member name="F:FaceCat.FCTextBox.m_wordsSize">
            <summary>
            文字大小
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.canRedo">
            <summary>
            判断是否可以重复
            </summary>
            <returns>是否可以重复</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.canUndo">
            <summary>
            判断是否可以撤销
            </summary>
            <returns>是否可以撤销</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.clearRedoUndo">
            <summary>
            重置
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.cursorDown">
            <summary>
            光标向下移动
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.cursorEnd">
            <summary>
            光标移动到最右端
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.cursorHome">
            <summary>
            光标移动到最左端
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.cursorLeft">
            <summary>
            光标向左移动
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.cursorRight">
            <summary>
            光标向右移动
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.cursorUp">
            <summary>
            光标向上移动
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.deleteWord">
            <summary>
            删除字符
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.getContentHeight">
            <summary>
            获取内容的高度
            </summary>
            <returns>高度</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.getContentWidth">
            <summary>
            获取内容的宽度
            </summary>
            <returns>宽度</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCTextBox.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.isLineVisible(System.Int32,System.Double)">
            <summary>
            判断字符索引所在行是否可见
            </summary>
            <param name="index">字符索引</param>
            <param name="visiblePercent">可见百分比</param>
            <returns>是否可见</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.insertWord(System.String)">
            <summary>
            插入字符
            </summary>
            <param name="str">字符串</param>
        </member>
        <member name="M:FaceCat.FCTextBox.lineVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            判断行是否可见
            </summary>
            <param name="indexTop"></param>
            <param name="indexBottom"></param>
            <param name="cell"></param>
            <param name="floor"></param>
            <param name="lineHeight"></param>
            <param name="visiblePercent"></param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCTextBox.onChar(System.Char)">
            <summary>
            文本输入方法
            </summary>
            <param name="ch">文字</param>
        </member>
        <member name="M:FaceCat.FCTextBox.onCopy">
            <summary>
            复制文字
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onCut">
            <summary>
            剪切
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onGotFocus">
            <summary>
            获取焦点方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onKeyDown(System.Char)">
            <summary>
            键盘方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCTextBox.onKeyUp(System.Char)">
            <summary>
            键盘抬起方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCTextBox.onLostFocus">
            <summary>
            丢失焦点方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCTextBox.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCTextBox.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCTextBox.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCTextBox.onPaste">
            <summary>
            粘贴方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onTabStop">
            <summary>
            被使用TAB切换方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onSizeChanged">
            <summary>
            文字尺寸改变事件
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onTextChanged">
            <summary>
            文字改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.onTimer(System.Int32)">
            <summary>
            秒表回调方法
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCTextBox.redo">
            <summary>
            重复
            </summary>
            <returns>重复命令</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.selectAll">
            <summary>
            全选
            </summary>
        </member>
        <member name="M:FaceCat.FCTextBox.setMovingIndex(System.Int32,System.Int32)">
            <summary>
            设置移动索引
            </summary>
            <param name="sIndex">开始索引</param>
            <param name="eIndex">结束索引</param>
        </member>
        <member name="M:FaceCat.FCTextBox.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCTextBox.undo">
            <summary>
            撤销
            </summary>
            <returns>撤销命令</returns>
        </member>
        <member name="M:FaceCat.FCTextBox.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.LinesCount">
            <summary>
            获取行数
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.LineHeight">
            <summary>
            获取或设置行高
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.Lines">
            <summary>
            获取行数
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.Multiline">
            <summary>
            获取或设置是否多行显示
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.PasswordChar">
            <summary>
            获取或设置密码字符
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.ReadOnly">
            <summary>
            获取或设置是否只读
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.RightToLeft">
            <summary>
            获取或设置是否从右向左绘制
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.SelectionText">
            <summary>
            获取选中的文字
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.SelectionBackColor">
            <summary>
            获取或设置选中的背景色
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.SelectionTextColor">
            <summary>
            获取或设置选中的前景色
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.SelectionLength">
            <summary>
            获取或设置选中长度
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.SelectionStart">
            <summary>
            获取或设置选中开始位置
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.TempText">
            <summary>
            获取或设置临时文字
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.TempTextColor">
            <summary>
            获取或设置临时文字的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.TextAlign">
            <summary>
            获取或设置内容的横向排列样式
            </summary>
        </member>
        <member name="P:FaceCat.FCTextBox.WordWrap">
            <summary>
            获取或设置多行编辑控件是否启动换行
            </summary>
        </member>
        <member name="T:FaceCat.CFunctionBase">
            <summary>
            界面相关的库
            </summary>
        </member>
        <member name="T:FaceCat.CFunction">
            <summary>
            指标方法
            </summary>
        </member>
        <member name="M:FaceCat.CFunction.#ctor">
            <summary>
            创建方法
            </summary>
        </member>
        <member name="M:FaceCat.CFunction.#ctor(System.Int32,System.String)">
            <summary>
            创建方法
            </summary>
            <param name="id">ID</param>
            <param name="name">名称</param>
        </member>
        <member name="F:FaceCat.CFunction.m_ID">
            <summary>
            方法ID
            </summary>
        </member>
        <member name="F:FaceCat.CFunction.m_name">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="F:FaceCat.CFunction.m_type">
            <summary>
            置是否带有参数
            </summary>
        </member>
        <member name="M:FaceCat.CFunction.onCalculate(FaceCat.CVariable)">
            <summary>
            计算方法
            </summary>
            <param name="var">变量</param>
            <returns>方法值</returns>
        </member>
        <member name="F:FaceCat.CFunctionBase.STARTINDEX">
            <summary>
            开始索引
            </summary>
        </member>
        <member name="M:FaceCat.CFunctionBase.#ctor(FaceCat.FCScript,System.Int32,System.String)">
            <summary>
            创建方法
            </summary>
            <param name="indicator">指标</param>
            <param name="id">ID</param>
            <param name="name">名称</param>
        </member>
        <member name="F:FaceCat.CFunctionBase.m_indicator">
            <summary>
            指标
            </summary>
        </member>
        <member name="F:FaceCat.CFunctionBase.FUNCTIONS">
            <summary>
            方法
            </summary>
        </member>
        <member name="F:FaceCat.CFunctionBase.PREFIX">
            <summary>
            前缀
            </summary>
        </member>
        <member name="M:FaceCat.CFunctionBase.onCalculate(FaceCat.CVariable)">
            <summary>
            计算
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.CFunctionBase.addFunctions(FaceCat.FCScript)">
            <summary>
            添加方法
            </summary>
            <param name="indicator">方法库</param>
            <returns>指标</returns>
        </member>
        <member name="M:FaceCat.CFunctionBase.IN(FaceCat.CVariable)">
            <summary>
            输入函数
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.CFunctionBase.OUT(FaceCat.CVariable)">
            <summary>
            输出函数
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.CFunctionBase.SLEEP(FaceCat.CVariable)">
            <summary>
            睡眠
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="T:FaceCat.FCClientService">
            <summary>
            基础服务类
            </summary>
        </member>
        <member name="M:FaceCat.FCClientService.#ctor">
            <summary>
            创建服务
            </summary>
        </member>
        <member name="M:FaceCat.FCClientService.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCClientService.COMPRESSTYPE_NONE">
            <summary>
            无压缩
            </summary>
        </member>
        <member name="F:FaceCat.FCClientService.COMPRESSTYPE_GZIP">
            <summary>
            GZIP压缩
            </summary>
        </member>
        <member name="F:FaceCat.FCClientService.m_listeners">
            <summary>
            监听者集合
            </summary>
        </member>
        <member name="F:FaceCat.FCClientService.m_requestID">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="F:FaceCat.FCClientService.m_services">
            <summary>
            所有的服务
            </summary>
        </member>
        <member name="F:FaceCat.FCClientService.m_waitMessages">
            <summary>
            等待消息队列
            </summary>
        </member>
        <member name="M:FaceCat.FCClientService.connectToServer(System.Int32,System.String,System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            连接到服务器
            </summary>
            <param name="proxyType">代理类型</param>
            <param name="ip">IP</param>
            <param name="port">端口</param>
            <param name="proxyIp">代理IP</param>
            <param name="proxyPort">代理端口</param>
            <param name="proxyUserName">用户名</param>
            <param name="proxyUserPwd">密码</param>
            <param name="proxyDomain">域</param>
            <param name="timeout">超时</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCClientService.sendByClient(System.Int32,System.Byte[],System.Int32)">
            <summary>
            发送消息
            </summary>
            <param name="socketID">套接字ID</param>
            <param name="str">数据</param>
            <param name="len">长度</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCClientService.addService(FaceCat.FCClientService)">
            <summary>
            添加服务
            </summary>
            <param name="service">服务</param>
        </member>
        <member name="M:FaceCat.FCClientService.connect(System.String,System.Int32)">
            <summary>
            连接服务器
            </summary>
            <param name="ip">地址</param>
            <param name="port">端口</param>
        </member>
        <member name="M:FaceCat.FCClientService.callBack(System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            回调函数
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
            <param name="str">数据</param>
            <param name="len">长度</param>
        </member>
        <member name="M:FaceCat.FCClientService.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.FCClientService.getRequestID">
            <summary>
            获取请求ID
            </summary>
            <returns>请求ID</returns>
        </member>
        <member name="M:FaceCat.FCClientService.getServices(FaceCat.ArrayList{FaceCat.FCClientService})">
            <summary>
            获取所有的服务
            </summary>
            <param name="services">服务列表</param>
        </member>
        <member name="M:FaceCat.FCClientService.keepAlive(System.Int32)">
            <summary>
            保持活跃
            </summary>
            <param name="socketID">套接字ID</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCClientService.onCallBack(FaceCat.FCBinary,System.Int32,System.Int32,System.Int32)">
            <summary>
            收到消息
            </summary>
            <param name="br">流</param>
            <param name="socketID">套接字ID</param>
            <param name="localSID">本地套接字ID</param>
            <param name="len">长度</param>
        </member>
        <member name="M:FaceCat.FCClientService.onClientClose(System.Int32,System.Int32)">
            <summary>
            客户端关闭方法
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
        </member>
        <member name="M:FaceCat.FCClientService.onClientConnect(System.Int32,System.Int32)">
            <summary>
            客户端连接方法
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
        </member>
        <member name="M:FaceCat.FCClientService.onReceive(FaceCat.FCMessage)">
            <summary>
            接收数据
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCClientService.onWaitMessageHandle(FaceCat.FCMessage)">
            <summary>
            等待消息的处理
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCClientService.registerListener(System.Int32,FaceCat.ListenerMessageCallBack)">
            <summary>
            注册数据监听
            </summary>
            <param name="requestID">请求ID</param>
            <param name="callBack">回调函数</param>
        </member>
        <member name="M:FaceCat.FCClientService.registerWait(System.Int32,FaceCat.FCMessage)">
            <summary>
            注册等待
            </summary>
            <param name="requestID">请求ID</param>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCClientService.send(FaceCat.FCMessage)">
            <summary>
            发送消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCClientService.sendToListener(FaceCat.FCMessage)">
            <summary>
            发送到监听者
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCClientService.unRegisterListener(System.Int32)">
            <summary>
            取消注册数据监听
            </summary>
            <param name="requestID">请求ID</param>
        </member>
        <member name="M:FaceCat.FCClientService.unRegisterListener(System.Int32,FaceCat.ListenerMessageCallBack)">
            <summary>
            取消注册监听
            </summary>
            <param name="requestID">请求ID</param>
            <param name="callBack">回调函数</param>
        </member>
        <member name="M:FaceCat.FCClientService.unRegisterWait(System.Int32)">
            <summary>
            取消注册等待
            </summary>
            <param name="requestID">请求ID</param>
        </member>
        <member name="M:FaceCat.FCClientService.waitMessage(System.Int32,System.Int32)">
            <summary>
            等待消息
            </summary>
            <param name="requestID">请求ID</param>
            <param name="timeout">超时</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCClientService.writeClientLog(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            写日志
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
            <param name="state">状态</param>
            <param name="log">日志</param>
        </member>
        <member name="P:FaceCat.FCClientService.CompressType">
            <summary>
            获取或设置压缩类型
            </summary>
        </member>
        <member name="P:FaceCat.FCClientService.DownFlow">
            <summary>
            获取或设置下载流量
            </summary>
        </member>
        <member name="P:FaceCat.FCClientService.GroupID">
            <summary>
            获取或设置组ID
            </summary>
        </member>
        <member name="P:FaceCat.FCClientService.IsDeleted">
            <summary>
            获取对象是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCClientService.ServiceID">
            <summary>
            获取或设置服务的ID
            </summary>
        </member>
        <member name="P:FaceCat.FCClientService.SessionID">
            <summary>
            获取或设置登录ID
            </summary>
        </member>
        <member name="P:FaceCat.FCClientService.UpFlow">
            <summary>
            获取或设置上传流量
            </summary>
        </member>
        <member name="T:FaceCat.FCClientSocketListener">
            <summary>
            客户端数据监听
            </summary>
        </member>
        <member name="M:FaceCat.FCClientSocketListener.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FaceCat.FCClientSocketListener.callBack(System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            数据回调
            </summary>
            <param name="socketID"></param>
            <param name="localSID"></param>
            <param name="str"></param>
            <param name="len"></param>
        </member>
        <member name="M:FaceCat.FCClientSocketListener.writeLog(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            写日志
            </summary>
            <param name="socketID"></param>
            <param name="localSID"></param>
            <param name="state"></param>
            <param name="log"></param>
        </member>
        <member name="T:FaceCat.AttachVScale">
            <summary>
            纵轴的类型
            </summary>
        </member>
        <member name="F:FaceCat.AttachVScale.Left">
            <summary>
            左轴
            </summary>
        </member>
        <member name="F:FaceCat.AttachVScale.Right">
            <summary>
            右轴
            </summary>
        </member>
        <member name="T:FaceCat.BarStyle">
            <summary>
            柱状图样式
            </summary>
        </member>
        <member name="F:FaceCat.BarStyle.Line">
            <summary>
            线条
            </summary>
        </member>
        <member name="F:FaceCat.BarStyle.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="T:FaceCat.CandleStyle">
            <summary>
            K线的样式
            </summary>
        </member>
        <member name="F:FaceCat.CandleStyle.American">
            <summary>
            美国线
            </summary>
        </member>
        <member name="F:FaceCat.CandleStyle.CloseLine">
            <summary>
            收盘线
            </summary>
        </member>
        <member name="F:FaceCat.CandleStyle.Rect">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:FaceCat.CandleStyle.Tower">
            <summary>
            宝塔线
            </summary>
        </member>
        <member name="T:FaceCat.CrossLineMoveMode">
            <summary>
            十字线的移动方式
            </summary>
        </member>
        <member name="F:FaceCat.CrossLineMoveMode.AfterClick">
            <summary>
            触摸点击后移动
            </summary>
        </member>
        <member name="F:FaceCat.CrossLineMoveMode.FollowTouch">
            <summary>
            跟随触摸
            </summary>
        </member>
        <member name="T:FaceCat.DateType">
            <summary>
            日期的类型
            </summary>
        </member>
        <member name="F:FaceCat.DateType.Day">
            <summary>
            日
            </summary>
        </member>
        <member name="F:FaceCat.DateType.Hour">
            <summary>
            小时
            </summary>
        </member>
        <member name="F:FaceCat.DateType.Millisecond">
            <summary>
            毫秒
            </summary>
        </member>
        <member name="F:FaceCat.DateType.Minute">
            <summary>
            分钟
            </summary>
        </member>
        <member name="F:FaceCat.DateType.Month">
            <summary>
            月
            </summary>
        </member>
        <member name="F:FaceCat.DateType.Second">
            <summary>
            秒
            </summary>
        </member>
        <member name="F:FaceCat.DateType.Year">
            <summary>
            年
            </summary>
        </member>
        <member name="T:FaceCat.HScaleType">
            <summary>
            X轴的类型
            </summary>
        </member>
        <member name="F:FaceCat.HScaleType.Date">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:FaceCat.HScaleType.Number">
            <summary>
            数字
            </summary>
        </member>
        <member name="T:FaceCat.NumberStyle">
            <summary>
            数字的样式
            </summary>
        </member>
        <member name="F:FaceCat.NumberStyle.Standard">
            <summary>
            标准
            </summary>
        </member>
        <member name="F:FaceCat.NumberStyle.UnderLine">
            <summary>
            加下划线数字
            </summary>
        </member>
        <member name="T:FaceCat.PolylineStyle">
            <summary>
            折线的样式
            </summary>
        </member>
        <member name="F:FaceCat.PolylineStyle.Cycle">
            <summary>
            圆圈
            </summary>
        </member>
        <member name="F:FaceCat.PolylineStyle.DashLine">
            <summary>
            虚线
            </summary>
        </member>
        <member name="F:FaceCat.PolylineStyle.DotLine">
            <summary>
            细点图
            </summary>
        </member>
        <member name="F:FaceCat.PolylineStyle.SolidLine">
            <summary>
            实线
            </summary>
        </member>
        <member name="T:FaceCat.SelectedPoint">
            <summary>
            选中点
            </summary>
        </member>
        <member name="F:FaceCat.SelectedPoint.Ellipse">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:FaceCat.SelectedPoint.Rectangle">
            <summary>
            矩形
            </summary>
        </member>
        <member name="T:FaceCat.SortType">
            <summary>
            数据排序方式
            </summary>
        </member>
        <member name="F:FaceCat.SortType.ASC">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:FaceCat.SortType.DESC">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:FaceCat.SortType.NONE">
            <summary>
            无排序
            </summary>
        </member>
        <member name="T:FaceCat.TextMode">
            <summary>
            图形标题的模式
            </summary>
        </member>
        <member name="F:FaceCat.TextMode.Field">
            <summary>
            显示字段
            </summary>
        </member>
        <member name="F:FaceCat.TextMode.Full">
            <summary>
            显示完整
            </summary>
        </member>
        <member name="F:FaceCat.TextMode.None">
            <summary>
            不显示
            </summary>
        </member>
        <member name="F:FaceCat.TextMode.Value">
            <summary>
            显示值
            </summary>
        </member>
        <member name="T:FaceCat.VScaleSystem">
            <summary>
            纵轴坐标系
            </summary>
        </member>
        <member name="F:FaceCat.VScaleSystem.Logarithmic">
            <summary>
            对数坐标
            </summary>
        </member>
        <member name="F:FaceCat.VScaleSystem.Standard">
            <summary>
            标准
            </summary>
        </member>
        <member name="T:FaceCat.VScaleType">
            <summary>
            纵坐标轴类型
            </summary>
        </member>
        <member name="F:FaceCat.VScaleType.Divide">
            <summary>
            等分
            </summary>
        </member>
        <member name="F:FaceCat.VScaleType.EqualDiff">
            <summary>
            等差
            </summary>
        </member>
        <member name="F:FaceCat.VScaleType.EqualRatio">
            <summary>
            等比
            </summary>
        </member>
        <member name="F:FaceCat.VScaleType.GoldenRatio">
            <summary>
            黄金分割
            </summary>
        </member>
        <member name="F:FaceCat.VScaleType.Percent">
            <summary>
            百分比
            </summary>
        </member>
        <member name="T:FaceCat.FCHost">
            <summary>
            控件管理
            </summary>
        </member>
        <member name="M:FaceCat.FCHost.activeMirror">
            <summary>
            激活镜像
            </summary>
        </member>
        <member name="M:FaceCat.FCHost.beginInvoke(FaceCat.FCView,System.Object)">
            <summary>
            在控件的线程中调用方法
            </summary>
            <param name="control">控件</param>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.FCHost.copy(System.String)">
            <summary>
            复制文本
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:FaceCat.FCHost.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.FCHost.createInternalControl(FaceCat.FCView,System.String)">
            <summary>
            创建内部控件
            </summary>
            <param name="parent">父控件</param>
            <param name="clsid">类型ID</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCHost.getCursor">
            <summary>
            获取光标
            </summary>
            <returns>光标</returns>
        </member>
        <member name="M:FaceCat.FCHost.getIntersectRect(FaceCat.FCRect@,FaceCat.FCRect@,FaceCat.FCRect@)">
            <summary>
            获取矩形相交区
            </summary>
            <param name="lpDestRect">相交矩形</param>
            <param name="lpSrc1Rect">矩形1</param>
            <param name="lpSrc2Rect">矩形2</param>
            <returns>是否相交</returns>
        </member>
        <member name="M:FaceCat.FCHost.getSize">
            <summary>
            获取尺寸
            </summary>
            <returns>大小</returns>
        </member>
        <member name="M:FaceCat.FCHost.getTouchPoint">
            <summary>
            获取触摸位置
            </summary>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.FCHost.getUnionRect(FaceCat.FCRect@,FaceCat.FCRect@,FaceCat.FCRect@)">
            <summary>
            获取矩形并集区
            </summary>
            <param name="lpDestRect">并集矩形</param>
            <param name="lpSrc1Rect">矩形1</param>
            <param name="lpSrc2Rect">矩形2</param>
            <returns>是否相交</returns>
        </member>
        <member name="M:FaceCat.FCHost.invalidate(FaceCat.FCRect)">
            <summary>
            刷新绘图
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.FCHost.invalidate">
            <summary>
            刷新绘图
            </summary>
        </member>
        <member name="M:FaceCat.FCHost.invoke(FaceCat.FCView,System.Object)">
            <summary>
            在控件的线程中调用方法
            </summary>
            <param name="control">控件</param>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.FCHost.isKeyPress(System.Int32)">
            <summary>
            获取按键的状态
            </summary>
            <param name="key">按键</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCHost.paste">
            <summary>
            获取粘贴文本
            </summary>
            <returns>文本</returns>
        </member>
        <member name="M:FaceCat.FCHost.setCursor(FaceCat.FCCursors)">
            <summary>
            设置光标
            </summary>
            <param name="cursor">光标</param>
        </member>
        <member name="M:FaceCat.FCHost.showToolTip(System.String,FaceCat.FCPoint)">
            <summary>
            显示提示框
            </summary>
            <param name="text">文字</param>
            <param name="mp">位置</param>
        </member>
        <member name="M:FaceCat.FCHost.startTimer(System.Int32,System.Int32)">
            <summary>
            开启秒表
            </summary>
            <param name="timerID">秒表ID</param>
            <param name="interval">间隔</param>
        </member>
        <member name="M:FaceCat.FCHost.stopTimer(System.Int32)">
            <summary>
            停止秒表
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="P:FaceCat.FCHost.AllowOperate">
            <summary>
            获取或设置是否允许操作
            </summary>
        </member>
        <member name="P:FaceCat.FCHost.AllowPartialPaint">
            <summary>
            获取或设置是否允许局部绘图
            </summary>
        </member>
        <member name="P:FaceCat.FCHost.Native">
            <summary>
            获取或设置方法库
            </summary>
        </member>
        <member name="T:FaceCat.FCWindowFrame">
            <summary>
            窗体控件边界
            </summary>
        </member>
        <member name="M:FaceCat.FCWindowFrame.#ctor">
            <summary>
            创建窗体控件
            </summary>
        </member>
        <member name="M:FaceCat.FCWindowFrame.containsPoint(FaceCat.FCPoint)">
            <summary>
            是否包含坐标
            </summary>
            <param name="point">坐标</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:FaceCat.FCWindowFrame.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCWindowFrame.invalidate">
            <summary>
            重绘方法
            </summary>
        </member>
        <member name="M:FaceCat.FCWindowFrame.onPaintBackground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            绘制背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="T:FaceCat.FCScrollBar">
            <summary>
            滚动条控件
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.#ctor">
            <summary>
            创建滚动条
            </summary>
        </member>
        <member name="F:FaceCat.FCScrollBar.m_addButtonTouchDownEvent">
            <summary>
            增量按钮的按下事件
            </summary>
        </member>
        <member name="F:FaceCat.FCScrollBar.m_addButtonTouchUpEvent">
            <summary>
            增量按钮的抬起事件
            </summary>
        </member>
        <member name="F:FaceCat.FCScrollBar.m_reduceButtonTouchDownEvent">
            <summary>
            减量按钮的按下事件
            </summary>
        </member>
        <member name="F:FaceCat.FCScrollBar.m_reduceButtonTouchUpEvent">
            <summary>
            减量按钮的抬起事件
            </summary>
        </member>
        <member name="F:FaceCat.FCScrollBar.m_scrollButtonDraggingEvent">
            <summary>
            滚动按钮拖拽事件
            </summary>
        </member>
        <member name="F:FaceCat.FCScrollBar.m_tick">
            <summary>
            秒表计数
            </summary>
        </member>
        <member name="F:FaceCat.FCScrollBar.m_timerID">
            <summary>
            秒表ID
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.addButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            增量滚动按钮按下事件回调事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.addButtonTouchUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            增量滚动按钮抬起事件回调事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCScrollBar.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCScrollBar.lineAdd">
            <summary>
            行变大方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.lineReduce">
            <summary>
            行变小方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.onAddButtonTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            增量滚动按钮按下事件方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.onAddButtonTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            增量滚动按钮抬起事件方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.onAddSpeedScrollEnd">
            <summary>
            加速滚动结束
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.onAddSpeedScrollStart(System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>
            自动加速滚动开始
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.onAddSpeedScrolling">
            <summary>
            自动加速滚动中
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.onDragScroll">
            <summary>
            拖动滚动方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.onLoad">
            <summary>
            控件添加方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.onReduceButtonTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            减量滚动按钮按下事件方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.onReduceButtonTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            减量滚动按钮抬起事件回调方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.onScrolled">
            <summary>
            滚动方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.onTimer(System.Int32)">
            <summary>
            秒表回调方法
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.onVisibleChanged">
            <summary>
            可见状态改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.pageAdd">
            <summary>
            页变大方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.pageReduce">
            <summary>
            页变小方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.reduceButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            减量滚动按钮按下事件回调方法
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.reduceButtonTouchUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            减量滚动按钮抬起事件回调方法
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.scrollButtonDragging(System.Object)">
            <summary>
            滚动按钮的拖动事件回调方法
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCScrollBar.scrollToBegin">
            <summary>
            滚动到开始
            </summary>
        </member>
        <member name="M:FaceCat.FCScrollBar.scrollToEnd">
            <summary>
            滚动到结束
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.AddSpeed">
            <summary>
            获取或设置当前的加速度
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.IsAdding">
            <summary>
            获取或设置是否正在增量
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.IsReducing">
            <summary>
            获取或设置是否正在减量
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.AddButton">
            <summary>
            增量按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.BackButton">
            <summary>
            获取滚动背景按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.ContentSize">
            <summary>
            获取或设置内容尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.LineSize">
            <summary>
            每次滚动的行尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.PageSize">
            <summary>
            获取或设置页的尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.Pos">
            <summary>
            获取或设置滚动距离
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.ReduceButton">
            <summary>
            减量按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCScrollBar.ScrollButton">
            <summary>
            获取滚动按钮
            </summary>
        </member>
        <member name="T:FaceCat.DayButton">
            <summary>
            日期按钮
            </summary>
        </member>
        <member name="M:FaceCat.DayButton.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建日的按钮
            </summary>
            <param name="calendar">日历控件</param>
        </member>
        <member name="M:FaceCat.DayButton.getPaintingBackColor">
            <summary>
            获取绘制的背景色
            </summary>
            <returns>背景色</returns>
        </member>
        <member name="M:FaceCat.DayButton.getPaintingBorderColor">
            <summary>
            获取绘制的边线颜色
            </summary>
            <returns>边线颜色</returns>
        </member>
        <member name="M:FaceCat.DayButton.getPaintingTextColor">
            <summary>
            获取要绘制的前景色
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.DayButton.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击事件
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.DayButton.onPaintBackGround(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.DayButton.onPaintBorder(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘边线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.DayButton.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="P:FaceCat.DayButton.Bounds">
            <summary>
            获取或设置显示区域
            </summary>
        </member>
        <member name="P:FaceCat.DayButton.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="P:FaceCat.DayButton.Day">
            <summary>
            获取或设置保存的日期
            </summary>
        </member>
        <member name="P:FaceCat.DayButton.InThisMonth">
            <summary>
            获取或设置是否在本月
            </summary>
        </member>
        <member name="P:FaceCat.DayButton.Selected">
            <summary>
            获取或设置是否被选中
            </summary>
        </member>
        <member name="P:FaceCat.DayButton.Visible">
            <summary>
            获取或设置是否可见
            </summary>
        </member>
        <member name="T:FaceCat.FCStr">
            <summary>
            字符串处理类
            </summary>
        </member>
        <member name="M:FaceCat.FCStr.convertAnchorToStr(FaceCat.FCAnchor)">
            <summary>
            锚定信息转化为字符
            </summary>
            <param name="anchor"> 锚定信息</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertBoolToStr(System.Boolean)">
            <summary>
            布尔型数值转换为字符
            </summary>
            <param name="value">数值</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertColorToStr(System.Int64)">
            <summary>
            颜色转换为字符
            </summary>
            <param name="color">颜色</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertContentAlignmentToStr(FaceCat.FCContentAlignment)">
            <summary>
            内容布局转字符串
            </summary>
            <param name="contentAlignment">内容布局</param>
            <returns>字符串</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertCursorToStr(FaceCat.FCCursors)">
            <summary>
            光标转换为字符
            </summary>
            <param name="cursor">光标</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertDateToNum(System.DateTime)">
            <summary>
            将日期格式转换为数字格式
            </summary>
            <param name="date">日期</param>
            <returns>数字格式</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertDockToStr(FaceCat.FCDockStyle)">
            <summary>
            绑定信息转换为字符
            </summary>
            <param name="dock">绑定信息</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertDoubleToStr(System.Double)">
            <summary>
            双精度浮点型数值转换为字符
            </summary>
            <param name="value">数值</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertFloatToStr(System.Single)">
            <summary>
            单精度浮动点型数值转换为字符
            </summary>
            <param name="value">数值</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertFontToStr(FaceCat.FCFont)">
            <summary>
            字体转换为字符
            </summary>
            <param name="font">字体</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertHorizontalAlignToStr(FaceCat.FCHorizontalAlign)">
            <summary>
            横向排列方式转换为字符
            </summary>
            <param name="horizontalAlign">横向排列方式</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertIntToStr(System.Int32)">
            <summary>
            整型数值转换为字符
            </summary>
            <param name="value">数值</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertLayoutStyleToStr(FaceCat.FCLayoutStyle)">
            <summary>
            布局样式转换为字符
            </summary>
            <param name="layoutStyle">布局样式转</param>
            <returns>布局样式</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertLongToStr(System.Int64)">
            <summary>
            长整型数值转换为字符
            </summary>
            <param name="value">数值</param>
            <returns>字符串</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertNumToDate(System.Double)">
            <summary>
            将数字格式转换为日期格式
            </summary>
            <param name="num">数字</param>
            <returns>日期格式</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertPaddingToStr(FaceCat.FCPadding)">
            <summary>
            边距转换为字符
            </summary>
            <param name="padding">边距</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertPointToStr(FaceCat.FCPoint)">
            <summary>
            坐标转换为字符
            </summary>
            <param name="point">坐标</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertRectToStr(FaceCat.FCRect)">
            <summary>
            矩形转换为字符
            </summary>
            <param name="rect">矩形</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertSizeToStr(FaceCat.FCSize)">
            <summary>
            大小转换为字符
            </summary>
            <param name="size">大小</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToAnchor(System.String)">
            <summary>
            字符转换为锚定信息
            </summary>
            <param name="str">字符</param>
            <returns>锚定信息</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToBool(System.String)">
            <summary>
            字符转换为布尔型
            </summary>
            <param name="str">字符</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToColor(System.String)">
            <summary>
            字符转换为颜色
            </summary>
            <param name="str">字符</param>
            <returns>颜色</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToContentAlignment(System.String)">
            <summary>
            字符串转内容布局
            </summary>
            <param name="str">字符</param>
            <returns>字符串</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToCursor(System.String)">
            <summary>
            字符转换为光标
            </summary>
            <param name="str">字符</param>
            <returns>光标</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToDock(System.String)">
            <summary>
            字符转换为绑定信息
            </summary>
            <param name="str">字符</param>
            <returns>绑定信息</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToDouble(System.String)">
            <summary>
            字符转换为双精度浮点型数值
            </summary>
            <param name="str">字符</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToFloat(System.String)">
            <summary>
            字符转换为单精度浮点型数值
            </summary>
            <param name="str">字符</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToFont(System.String)">
            <summary>
            字符转换为字体
            </summary>
            <param name="str">字符</param>
            <returns>字体</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToHorizontalAlign(System.String)">
            <summary>
            字符转换为横向排列方式
            </summary>
            <param name="str">字符</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToInt(System.String)">
            <summary>
            字符转换为整型数值
            </summary>
            <param name="str">字符</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToLayoutStyle(System.String)">
            <summary>
            布局样式转换为字符
            </summary>
            <param name="str">字符</param>
            <returns>布局样式</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToLong(System.String)">
            <summary>
            字符转换位长整型数值
            </summary>
            <param name="str">字符串</param>
            <returns>长整型</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToPadding(System.String)">
            <summary>
            字符转换为边距
            </summary>
            <param name="str">字符</param>
            <returns>边距</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToPoint(System.String)">
            <summary>
            字符转换为坐标
            </summary>
            <param name="str">字符</param>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToRect(System.String)">
            <summary>
            字符转换为矩形
            </summary>
            <param name="str">字符</param>
            <returns>矩形</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToSize(System.String)">
            <summary>
            字符转换为大小
            </summary>
            <param name="str">字符</param>
            <returns>大小</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertStrToVerticalAlign(System.String)">
            <summary>
            字符转换为纵向排列方式
            </summary>
            <param name="str">字符</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.convertVerticalAlignToStr(FaceCat.FCVerticalAlign)">
            <summary>
            纵向排列方式转换为字符
            </summary>
            <param name="verticalAlign">横向排列方式</param>
            <returns>字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.getGuid">
            <summary>
            获取Guid
            </summary>
            <returns>Guid</returns>
        </member>
        <member name="M:FaceCat.FCStr.getValueByDigit(System.Double,System.Int32)">
            <summary>
            根据保留小数的位置将double型转化为String型
            </summary>
            <param name="value">值</param>
            <param name="digit">保留小数点</param>
            <returns>数值字符</returns>
        </member>
        <member name="M:FaceCat.FCStr.safeDoubleToFloat(System.Double,System.Int32)">
            <summary>
            安全的Double转Float
            </summary>
            <param name="value">数值</param>
            <param name="digit">保留小数位数</param>
            <returns>Float</returns>
        </member>
        <member name="T:FaceCat.FCUIXml">
            <summary>
            XML界面生成类
            </summary>
        </member>
        <member name="M:FaceCat.FCUIXml.#ctor">
            <summary>
            创建生成类
            </summary>
        </member>
        <member name="M:FaceCat.FCUIXml.Finalize">
            <summary>
            析构方法
            </summary>
        </member>
        <member name="F:FaceCat.FCUIXml.m_controls">
            <summary>
            控件列表
            </summary>
        </member>
        <member name="F:FaceCat.FCUIXml.m_styles">
            <summary>
            CSS样式
            </summary>
        </member>
        <member name="M:FaceCat.FCUIXml.createMenuItem(System.Xml.XmlNode,FaceCat.FCMenu,FaceCat.FCMenuItem)">
            <summary>
            创建菜单项
            </summary>
            <param name="node">节点</param>
            <param name="menu">菜单</param>
            <param name="parentItem">父项</param>
        </member>
        <member name="M:FaceCat.FCUIXml.containsControl(FaceCat.FCView)">
            <summary>
            是否包含控件
            </summary>
            <param name="control">控件</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.createBandedGridBands(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建FCGridBand
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createBandedGridColumns(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建表格列
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createControl(System.Xml.XmlNode,System.String)">
            <summary>
            创建控件
            </summary>
            <param name="node">节点</param>
            <param name="type">类型</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.createChartSubProperty(System.Xml.XmlNode,FaceCat.FCChart)">
            <summary>
            创建图形控件属性
            </summary>
            <param name="node">节点</param>
            <param name="chart">图形控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createGridColumns(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建表格列
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createGridRow(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建表格行
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createGridRows(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建表格行
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createNative">
            <summary>
            创建控件框架
            </summary>
            <param name="hWnd">句柄</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createSplitLayoutSubProperty(System.Xml.XmlNode,FaceCat.FCSplitLayoutDiv)">
            <summary>
            创建分割布局控件
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createTableLayoutSubProperty(System.Xml.XmlNode,FaceCat.FCTableLayoutDiv)">
            <summary>
            创建控件
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createTabPage(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建多页夹的页
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createTreeNode(System.Xml.XmlNode,FaceCat.FCView,FaceCat.FCTreeNode)">
            <summary>
            创建树的节点
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
            <param name="treeNode">树节点</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createTreeNodes(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建树的节点
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createSubProperty(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            创建子属性
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.createUserControl(System.Xml.XmlNode)">
            <summary>
            创建用户控件
            </summary>
            <param name="node">节点</param>
            <param name="cid">标识</param>
        </member>
        <member name="M:FaceCat.FCUIXml.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCUIXml.findControl(System.String)">
            <summary>
            查找控件
            </summary>
            <param name="name">控件名称</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getAttributes(System.Xml.XmlNode)">
            <summary>
            获取属性
            </summary>
            <param name="node">节点</param>
            <returns>属性键值结合</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getControls">
            <summary>
            获取所有的控件
            </summary>
            <returns>控件集合</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getButton(System.String)">
            <summary>
            获取按钮
            </summary>
            <param name="name">控件名称</param>
            <returns>按钮</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getChart(System.String)">
            <summary>
            获取图形控件
            </summary>
            <param name="name">控件名称</param>
            <returns>复选框</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getCheckBox(System.String)">
            <summary>
            获取复选框
            </summary>
            <param name="name">控件名称</param>
            <returns>复选框</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getComboBox(System.String)">
            <summary>
            获取下拉控件
            </summary>
            <param name="name">控件名称</param>
            <returns>下拉控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getDatePicker(System.String)">
            <summary>
            获取日期控件
            </summary>
            <param name="name">控件名称</param>
            <returns>日期控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getDiv(System.String)">
            <summary>
            获取图层
            </summary>
            <param name="name">控件名称</param>
            <returns>按钮</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getGrid(System.String)">
            <summary>
            获取表格
            </summary>
            <param name="name">控件名称</param>
            <returns>表格</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getGroupBox(System.String)">
            <summary>
            获取组控件
            </summary>
            <param name="name">控件名称</param>
            <returns>组控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getLabel(System.String)">
            <summary>
            获取标签
            </summary>
            <param name="name">控件名称</param>
            <returns>按钮</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getLayoutDiv(System.String)">
            <summary>
            获取布局层
            </summary>
            <param name="name">控件名称</param>
            <returns>布局层</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getLikeControls(System.String)">
            <summary>
            获取名称相似控件
            </summary>
            <param name="name">控件名称</param>
            <returns>名称相似控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getMenu(System.String)">
            <summary>
            获取菜单控件
            </summary>
            <param name="name">控件名称</param>
            <returns>菜单控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getMenuItem(System.String)">
            <summary>
            获取菜单项控件
            </summary>
            <param name="name">控件名称</param>
            <returns>菜单项控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getRadioButton(System.String)">
            <summary>
            获取单选按钮
            </summary>
            <param name="name">控件名称</param>
            <returns>单选按钮</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getSpin(System.String)">
            <summary>
            获取数值控件
            </summary>
            <param name="name">控件名称</param>
            <returns>数值控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getSplitLayoutDiv(System.String)">
            <summary>
            获取分割层
            </summary>
            <param name="name">控件名称</param>
            <returns>分割层</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getTabControl(System.String)">
            <summary>
            获取多页夹控件
            </summary>
            <param name="name">控件名称</param>
            <returns>多页夹控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getTabPage(System.String)">
            <summary>
            获取夹控件
            </summary>
            <param name="name">控件名称</param>
            <returns>多页夹控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getTableLayoutDiv(System.String)">
            <summary>
            获取表格层
            </summary>
            <param name="name">控件名称</param>
            <returns>表格层</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getTextBox(System.String)">
            <summary>
            获取文本框
            </summary>
            <param name="name">控件名称</param>
            <returns>多页夹控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getTree(System.String)">
            <summary>
            获取树控件
            </summary>
            <param name="name">控件名称</param>
            <returns>树控件</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.getWindow(System.String)">
            <summary>
            获取窗体
            </summary>
            <param name="name">控件名称</param>
            <returns>窗体</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.isAfterSetingAttribute(System.String)">
            <summary>
            判断是否后设置属性
            </summary>
            <param name="name">属性名称</param>
            <returns>是否后设置属性</returns>
        </member>
        <member name="M:FaceCat.FCUIXml.loadFile(System.String,FaceCat.FCView)">
            <summary>
            读取文件，加载到控件中
            </summary>
            <param name="fileName">文件的路径</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.loadXml(System.String,FaceCat.FCView)">
            <summary>
            读取字符串，加载到控件中
            </summary>
            <param name="xml">字符串</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.onAddControl(FaceCat.FCView,System.Xml.XmlNode)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
            <param name="node">节点</param>
        </member>
        <member name="M:FaceCat.FCUIXml.readBody(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            读取文件体
            </summary>
            <param name="node">XML节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.readChildNodes(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            读取子节点
            </summary>
            <param name="node">节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.readHead(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            读取头部
            </summary>
            <param name="node">XML节点</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.readNode(System.Xml.XmlNode,FaceCat.FCView)">
            <summary>
            读取XML
            </summary>
            <param name="node">XML节点</param>
            <param name="parent">父控件</param>
        </member>
        <member name="M:FaceCat.FCUIXml.setAttributesAfter(System.Xml.XmlNode,FaceCat.FCProperty)">
            <summary>
            后设置属性
            </summary>
            <param name="node">XML节点</param>
            <param name="control">属性对象</param>
        </member>
        <member name="M:FaceCat.FCUIXml.readStyle(System.Xml.XmlNode,FaceCat.FCProperty)">
            <summary>
            读取样式
            </summary>
            <param name="node">XML节点</param>
            <param name="control">属性对象</param>
        </member>
        <member name="M:FaceCat.FCUIXml.setAttributesBefore(System.Xml.XmlNode,FaceCat.FCProperty)">
            <summary>
            前设置属性
            </summary>
            <param name="node">XML节点</param>
            <param name="control">属性对象</param>
        </member>
        <member name="M:FaceCat.FCUIXml.setEvents(System.Xml.XmlNode,FaceCat.FCProperty)">
            <summary>
            设置事件
            </summary>
            <param name="node">XML节点</param>
            <param name="control">属性对象</param>
        </member>
        <member name="M:FaceCat.FCUIXml.setStyle(System.String,FaceCat.FCProperty)">
            <summary>
            设置CSS样式
            </summary>
            <param name="style">样式</param>
            <param name="control">控件</param>
        </member>
        <member name="P:FaceCat.FCUIXml.XmlDoc">
            <summary>
            获取或设置XML文档
            </summary>
        </member>
        <member name="P:FaceCat.FCUIXml.Event">
            <summary>
            获取或设置事件
            </summary>
        </member>
        <member name="P:FaceCat.FCUIXml.Script">
            <summary>
            获取或设置脚本
            </summary>
        </member>
        <member name="P:FaceCat.FCUIXml.IsDeleted">
            <summary>
            获取是否被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCUIXml.Native">
            <summary>
            获取获取设置方法库
            </summary>
        </member>
        <member name="T:FaceCat.BaseShape">
            <summary>
            所有线条的父类
            </summary>
        </member>
        <member name="M:FaceCat.BaseShape.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.BaseShape.delete">
            <summary>
            销毁资源的方法
            </summary>
        </member>
        <member name="M:FaceCat.BaseShape.getBaseField">
            <summary>
            获取基础字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.BaseShape.getFieldText(System.Int32)">
            <summary>
            由字段名称获取字段标题
            </summary>
            <param name="fieldName">字段名称</param>
            <returns>字段标题</returns>
        </member>
        <member name="M:FaceCat.BaseShape.getFields">
            <summary>
            获取所有字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.BaseShape.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.BaseShape.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.BaseShape.getSelectedColor">
            <summary>
            获取选中点的颜色
            </summary>
            <returns>颜色</returns>
        </member>
        <member name="M:FaceCat.BaseShape.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.BaseShape.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.BaseShape.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.BaseShape.AttachVScale">
            <summary>
            获取或设置依附于左轴还是右轴
            </summary>
        </member>
        <member name="P:FaceCat.BaseShape.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.BaseShape.Selected">
            <summary>
            获取或设置是否被选中
            </summary>
        </member>
        <member name="P:FaceCat.BaseShape.Visible">
            <summary>
            获取或设置图形是否可见
            </summary>
        </member>
        <member name="P:FaceCat.BaseShape.ZOrder">
            <summary>
            获取或设置绘图顺序
            </summary>
        </member>
        <member name="T:FaceCat.FCHttpData">
            <summary>
            Http数据
            </summary>
        </member>
        <member name="T:FaceCat.HttpFileData">
            <summary>
            文件Http服务
            </summary>
        </member>
        <member name="F:FaceCat.HttpFileData.m_buffer">
            <summary>
            流
            </summary>
        </member>
        <member name="F:FaceCat.HttpFileData.m_recvLength">
            <summary>
            已收到长度
            </summary>
        </member>
        <member name="F:FaceCat.HttpFileData.m_totalLength">
            <summary>
            总长度
            </summary>
        </member>
        <member name="T:FaceCat.FCHttpMonitor">
            <summary>
            Node服务
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpMonitor.#ctor(System.String)">
            <summary>
            创建Node服务
            </summary>
            <param name="fileName">文件名</param>
        </member>
        <member name="F:FaceCat.FCHttpMonitor.m_easyServices">
            <summary>
            简单服务
            </summary>
        </member>
        <member name="F:FaceCat.FCHttpMonitor.m_fileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="F:FaceCat.FCHttpMonitor.m_indicators">
            <summary>
            脚本集合
            </summary>
        </member>
        <member name="F:FaceCat.FCHttpMonitor.m_httpDatas">
            <summary>
            数据集合
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpMonitor.checkScript">
            <summary>
            检查脚本
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpMonitor.readData(System.Object)">
            <summary>
            接受请求
            </summary>
            <param name="param">参数</param>
        </member>
        <member name="M:FaceCat.FCHttpMonitor.start">
            <summary>
            启动监听
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpMonitor.Indicator">
            <summary>
            获取主脚本
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpMonitor.Listener">
            <summary>
            获取监听对象
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpMonitor.MainMonitor">
            <summary>
            获取主监视器
            </summary>
            <returns></returns>
        </member>
        <member name="P:FaceCat.FCHttpMonitor.Port">
            <summary>
            获取或设置端口
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpMonitor.Script">
            <summary>
            获取脚本
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpMonitor.Native">
            <summary>
            获取XML对象
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpMonitor.UseScript">
            <summary>
            是否使用脚本
            </summary>
        </member>
        <member name="T:FaceCat.FCNative">
            <summary>
            公共类库
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.#ctor">
            <summary>
            创建公共类库
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_controls">
            <summary>
            控件
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_dragBeginPoint">
            <summary>
            拖动开始时的触摸位置
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_dragBeginRect">
            <summary>
            拖动开始时的区域
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_dragStartOffset">
            <summary>
            可以开始拖动的偏移坐标量
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_draggingControl">
            <summary>
            正被拖动的控件
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_exportingControl">
            <summary>
            即将导出的控件
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_timers">
            <summary>
            秒表集合
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_touchDownControl">
            <summary>
            正被触摸按下的控件
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_touchDownPoint">
            <summary>
            触摸按下时的坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCNative.m_touchMoveControl">
            <summary>
            触摸正在其上方移动的控件
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.addControl(FaceCat.FCView)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.addMirror(FaceCat.FCNative,FaceCat.FCView)">
            <summary>
            添加镜像
            </summary>
            <param name="mirrorHost">宿主</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.bringToFront(FaceCat.FCView)">
            <summary>
            将控件放到最前显示
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.cancelDragging">
            <summary>
            退出拖动
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.clearControls">
            <summary>
            清除所有的控件
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.clientX(FaceCat.FCView)">
            <summary>
            获取控件的绝对横坐标
            </summary>
            <param name="control">控件</param>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.FCNative.clientY(FaceCat.FCView)">
            <summary>
            获取控件的绝对纵坐标
            </summary>
            <param name="control">控件</param>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.FCNative.containsControl(FaceCat.FCView)">
            <summary>
            是否包含控件
            </summary>
            <param name="control">控件</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:FaceCat.FCNative.container_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            键盘抬起事件
            </summary>
            <param name="sender">调用者</param>
            <param name="e">参数</param>
        </member>
        <member name="M:FaceCat.FCNative.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.exportToImage(System.String)">
            <summary>
            导出到图片
            </summary>
            <param name="exportPath">导出路径</param>
        </member>
        <member name="M:FaceCat.FCNative.exportToImage(System.String,FaceCat.FCView)">
            <summary>
            导出控件到图片
            </summary>
            <param name="exportPath">导出路径</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.findControl(FaceCat.FCPoint,FaceCat.ArrayList{FaceCat.FCView})">
            <summary>
            根据触摸位置获取控件
            </summary>
            <param name="mp">坐标</param>
            <param name="controls">控件集合</param>
            <returns>控件对象</returns>
        </member>
        <member name="M:FaceCat.FCNative.findControl(System.String,FaceCat.ArrayList{FaceCat.FCView})">
            <summary>
            根据名称查找控件
            </summary>
            <param name="name">名称</param>
            <param name="controls">控件集合</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCNative.findControl(FaceCat.FCPoint)">
            <summary>
            根据坐标查找控件
            </summary>
            <param name="mp">坐标</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCNative.findControl(FaceCat.FCPoint,FaceCat.FCView)">
            <summary>
            根据坐标在控件中查找控件
            </summary>
            <param name="mp">坐标</param>
            <param name="parent">父控件</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCNative.findControl(System.String)">
            <summary>
            根据名称查找控件
            </summary>
            <param name="name">名称</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCNative.findPreviewsControl(FaceCat.FCView)">
            <summary>
            根据控件查找预处理事件的控件
            </summary>
            <param name="control">控件</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.FCNative.findWindow(FaceCat.FCView)">
            <summary>
            根据控件查找窗体
            </summary>
            <param name="control">控件</param>
            <returns>窗体</returns>
        </member>
        <member name="M:FaceCat.FCNative.getControls">
            <summary>
            获取控件集合的拷贝
            </summary>
            <returns>控件集合</returns>
        </member>
        <member name="M:FaceCat.FCNative.getFocusedControl(FaceCat.ArrayList{FaceCat.FCView})">
            <summary>
            获取焦点控件
            </summary>
            <param name="controls">控件集合</param>
            <returns>焦点控件</returns>
        </member>
        <member name="M:FaceCat.FCNative.GetPaintingOpacity(FaceCat.FCView)">
            <summary>
            获取绘制的透明度
            </summary>
            <param name="control">控件</param>
            <returns>透明度</returns>
        </member>
        <member name="M:FaceCat.FCNative.getPaintingResourcePath(FaceCat.FCView)">
            <summary>
            获取绘制的资源路径
            </summary>
            <param name="control">控件</param>
            <returns>路径</returns>
        </member>
        <member name="M:FaceCat.FCNative.getSortedControls(FaceCat.FCView,FaceCat.ArrayList{FaceCat.FCView})">
            <summary>
            获取排序后的控件集合
            </summary>
            <param name="parent">父控件</param>
            <param name="sortedControls">排序后的控件</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCNative.getTabStopControls(FaceCat.FCView,FaceCat.ArrayList{FaceCat.FCView})">
            <summary>
            获取TabStop属性为TRUE的控件
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:FaceCat.FCNative.isPaintEnabled(FaceCat.FCView)">
            <summary>
            判断是否绘制可用状态
            </summary>
            <param name="control">控件</param>
            <returns>是否绘制可用状态</returns>
        </member>
        <member name="M:FaceCat.FCNative.insertControl(System.Int32,FaceCat.FCView)">
            <summary>
            插入控件
            </summary>
            <param name="index">索引</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.invalidate">
            <summary>
            使用缓存绘制图象，不重新计算绘图结构
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.invalidate(FaceCat.FCView)">
            <summary>
            局部绘图
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.invalidate(FaceCat.FCRect)">
            <summary>
            局部绘图
            </summary>
            <param name="rect"> 区域</param>
        </member>
        <member name="M:FaceCat.FCNative.onChar(System.Char)">
            <summary>
            文字输入方法
            </summary>
            <param name="key">按键</param>
            <returns>是否处理</returns>
        </member>
        <member name="M:FaceCat.FCNative.onDoubleClick(FaceCat.FCTouchInfo)">
            <summary>
            处理双击
            </summary>
            <param name="button">按钮</param>
            <param name="clicks">点击次数</param>
            <param name="delta">滚轮值</param>
        </member>
        <member name="M:FaceCat.FCNative.onKeyDown(System.Char)">
            <summary>
            处理键盘按下
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCNative.onKeyUp(System.Char)">
            <summary>
            处理键盘抬起
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCNative.onMouseDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸单击事件
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCNative.onMouseLeave(FaceCat.FCTouchInfo)">
            <summary>
            触摸离开事件
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCNative.onMouseMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动事件
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCNative.onMouseUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸弹起事件
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCNative.onMouseWheel(FaceCat.FCTouchInfo)">
            <summary>
            触摸滚动事件
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCNative.onPaint(FaceCat.FCRect)">
            <summary>
            绘图方法
            </summary>
            <param name="clipRect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCNative.onPreviewKeyEvent(System.Int32,System.Char)">
            <summary>
            预处理键盘事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="key">按键</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCNative.onPreviewTouchEvent(System.Int32,FaceCat.FCView,FaceCat.FCTouchInfo)">
            <summary>
            预处理触摸事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="control">控件</param>
            <param name="touchInfo">触摸信息</param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCNative.onResize">
            <summary>
            处理尺寸改变
            </summary>
        </member>
        <member name="M:FaceCat.FCNative.onTimer(System.Int32)">
            <summary>
            处理秒表
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCNative.renderControls(FaceCat.FCRect,FaceCat.ArrayList{FaceCat.FCView},System.String,System.Single)">
            <summary>
            绘制控件
            </summary>
            <param name="rect">矩形</param>
            <param name="controls">控件集合</param>
            <param name="resourcePath">资源路径</param>
            <param name="opacity">透明度</param>
        </member>
        <member name="M:FaceCat.FCNative.removeControl(FaceCat.FCView)">
            <summary>
            移除控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.removeMirror(FaceCat.FCView)">
            <summary>
            移除镜像
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.sendToBack(FaceCat.FCView)">
            <summary>
            将控件放到最下面显示
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.setAlign(FaceCat.ArrayList{FaceCat.FCView})">
            <summary>
            设置排列
            </summary>
            <param name="controls">控件集合</param>
        </member>
        <member name="M:FaceCat.FCNative.setAnchor(FaceCat.ArrayList{FaceCat.FCView},FaceCat.FCSize)">
            <summary>
            设置锚定信息
            </summary>
            <param name="controls">控件集合</param>
            <param name="oldSize">原尺寸</param>
        </member>
        <member name="M:FaceCat.FCNative.setCursor(FaceCat.FCView)">
            <summary>
            设置光标
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.setDock(FaceCat.ArrayList{FaceCat.FCView})">
            <summary>
            设置绑定边缘
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCNative.setPaint(System.Int32,System.Int32,FaceCat.FCRect,System.String,System.Single)">
            <summary>
            设置绘图属性
            </summary>
            <param name="offsetX">横向偏移</param>
            <param name="offsetY">纵向偏移</param>
            <param name="clipRect">裁剪区域</param>
            <param name="resourcePath">资源路径</param>
            <param name="opacity">透明度</param>
        </member>
        <member name="M:FaceCat.FCNative.startTimer(FaceCat.FCView,System.Int32,System.Int32)">
            <summary>
            启动秒表
            </summary>
            <param name="control">控件</param>
            <param name="timerID">秒表编号</param>
            <param name="interval">间隔</param>
        </member>
        <member name="M:FaceCat.FCNative.stopTimer(System.Int32)">
            <summary>
            停止秒表
            </summary>
            <param name="timerID">秒表编号</param>
        </member>
        <member name="M:FaceCat.FCNative.update">
            <summary>
            更新布局
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.AllowScaleSize">
            <summary>
            获取或设置是否允许使用缩放尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.Cursor">
            <summary>
            获取或设置触摸形状
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.DisplaySize">
            <summary>
            获取或设置显示区域
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.FocusedControl">
            <summary>
            获取或设置选中的控件
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.Host">
            <summary>
            获取或设置控件管理器
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.HoveredControl">
            <summary>
            获取触摸悬停的控件
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.MirrorMode">
            <summary>
            获取或设置镜像模式
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.Mirrors">
            <summary>
            获取或设置镜像集合
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.MirrorHost">
            <summary>
            获取宿主库
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.Opacity">
            <summary>
            获取或设置透明度
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.Paint">
            <summary>
            获取绘图类
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.PushedControl">
            <summary>
            获取触摸按住的控件
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.ResourcePath">
            <summary>
            获取或设置资源文件的路径
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.RotateAngle">
            <summary>
            获取或设置旋转角度
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.ScaleSize">
            <summary>
            获取或设置使用缩放尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCNative.TouchPoint">
            <summary>
            获取触摸的实际位置
            </summary>
        </member>
        <member name="T:FaceCat.FCGridCellEvent">
            <summary>
            单元格事件
            </summary>
            <param name="sender">调用者</param>
            <param name="cell">单元格</param>
        </member>
        <member name="T:FaceCat.FCGridCellTouchEvent">
            <summary>
            单元格触摸事件委托
            </summary>
            <param name="sender">调用者</param>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="T:FaceCat.FCGridSort">
            <summary>
            表格排序类
            </summary>
        </member>
        <member name="M:FaceCat.FCGridSort.sortColumn(FaceCat.FCGrid,FaceCat.FCGridColumn,FaceCat.FCGridColumnSortMode)">
            <summary>
            排序
            </summary>
            <param name="grid">表格</param>
            <param name="column">列</param>
            <param name="sortMode">排序方式</param>
        </member>
        <member name="T:FaceCat.FCGridSort.FCGridRowCompare">
            <summary>
            表格排序类
            </summary>
        </member>
        <member name="F:FaceCat.FCGridSort.FCGridRowCompare.m_columnIndex">
            <summary>
            列索引
            </summary>
        </member>
        <member name="F:FaceCat.FCGridSort.FCGridRowCompare.m_type">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:FaceCat.FCGridSort.FCGridRowCompare.Compare(FaceCat.FCGridRow,FaceCat.FCGridRow)">
            <summary>
            比较方法
            </summary>
            <param name="x">行X</param>
            <param name="y">行Y</param>
            <returns>结果</returns>
        </member>
        <member name="T:FaceCat.FCGrid">
            <summary>
            表格控件
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.#ctor">
            <summary>
            创建表格
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_animateAddRows">
            <summary>
            动画添加的行
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_animateRemoveRows">
            <summary>
            动画移除的行
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_columns">
            <summary>
            列的集合
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_editingCell">
            <summary>
            正在编辑的单元格
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_editingRow">
            <summary>
            正在编辑的行
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_editTextBoxLostFocusEvent">
            <summary>
            编辑文本框丢失焦点事件
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_editTextBoxKeyDownEvent">
            <summary>
            编辑文本框键盘事件
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_hasUnVisibleRow">
            <summary>
            是否包含不可见行
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_lockUpdate">
            <summary>
            是否锁定界面更新
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_rows">
            <summary>
            行的集合
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_timerID">
            <summary>
            秒表ID
            </summary>
        </member>
        <member name="F:FaceCat.FCGrid.m_touchDownPoint">
            <summary>
            触摸按下时的位置
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.addColumn(FaceCat.FCGridColumn)">
            <summary>
            添加列
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:FaceCat.FCGrid.addRow(FaceCat.FCGridRow)">
            <summary>
            添加行
            </summary>
            <param name="row">行</param>
        </member>
        <member name="M:FaceCat.FCGrid.animateAddRow(FaceCat.FCGridRow)">
            <summary>
            动画添加行
            </summary>
            <param name="row">行</param>
        </member>
        <member name="M:FaceCat.FCGrid.animateRemoveRow(FaceCat.FCGridRow)">
            <summary>
            动画移除行
            </summary>
            <param name="row">行</param>
        </member>
        <member name="M:FaceCat.FCGrid.beginUpdate">
            <summary>
            开始更新
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.callCellEvents(System.Int32,FaceCat.FCGridCell)">
            <summary>
            调用单元格事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="cell">单元格</param>
        </member>
        <member name="M:FaceCat.FCGrid.callCellTouchEvents(System.Int32,FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            调用单元格触摸事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.clear">
            <summary>
            请除数据
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.clearColumns">
            <summary>
            清除所有列
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.clearRows">
            <summary>
            清除所有行
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.delete">
            <summary>
            销毁控件的方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.editTextBoxLostFocus(System.Object)">
            <summary>
            编辑文本框丢失焦点事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCGrid.editTextBoxKeyDown(System.Object,System.Char)">
            <summary>
            编辑文本框键盘事件
            </summary>
            <param name="sender">调用者</param>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCGrid.endUpdate">
            <summary>
            结束更新
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.getColumn(System.Int32)">
            <summary>
            获取表格列
            </summary>
            <param name="columnIndex">列的索引</param>
            <returns>表格列</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getColumn(System.String)">
            <summary>
            获取表格列
            </summary>
            <param name="columnName">列名</param>
            <returns>表格列</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getColumns">
            <summary>
            获取所有的列
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCGrid.getContentHeight">
            <summary>
            获取内容的高度
            </summary>
            <returns>高度</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getContentWidth">
            <summary>
            获取内容的宽度
            </summary>
            <returns>宽度</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getDisplayOffset">
            <summary>
            获取显示偏移坐标
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCGrid.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCGrid.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getRow(FaceCat.FCPoint)">
            <summary>
            根据坐标获取行
            </summary>
            <param name="mp">坐标</param>
            <returns>表格行</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getRow(System.Int32)">
            <summary>
            获取表格行
            </summary>
            <param name="rowIndex">行的索引</param>
            <returns>表格行</returns>
        </member>
        <member name="M:FaceCat.FCGrid.getRows">
            <summary>
            获取所有的行
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCGrid.getVisibleRowsIndex(System.Double,System.Int32@,System.Int32@)">
            <summary>
            获取可见的行索引
            </summary>
            <param name="visiblePercent">可见百分比</param>
            <param name="firstVisibleRowIndex">首先可见的行索引</param>
            <param name="lastVisibleRowIndex">最后可见的行索引</param>
        </member>
        <member name="M:FaceCat.FCGrid.insertRow(System.Int32,FaceCat.FCGridRow)">
            <summary>
            插入行
            </summary>
            <param name="index">索引</param>
            <param name="row">行</param>
        </member>
        <member name="M:FaceCat.FCGrid.isRowVisible(FaceCat.FCGridRow,System.Double)">
            <summary>
            判断行是否可见
            </summary>
            <param name="row">行</param>
            <param name="visiblePercent">可见百分比</param>
            <returns>是否可见</returns>
        </member>
        <member name="M:FaceCat.FCGrid.moveRow(System.Int32,System.Int32)">
            <summary>
            移动行
            </summary>
            <param name="oldIndex">旧行</param>
            <param name="newIndex">新行</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellClick(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸点击方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellEditBegin(FaceCat.FCGridCell)">
            <summary>
            单元格编辑开始
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellEditEnd(FaceCat.FCGridCell)">
            <summary>
            单元格编辑结束
            </summary>
            <param name="cell">单元格</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellTouchDown(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸按下方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellTouchEnter(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸进入方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellTouchLeave(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸移出方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellTouchMove(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸移动方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onCellTouchUp(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸抬起方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onKeyDown(System.Char)">
            <summary>
            键盘方法
            </summary>
            <param name="key">键盘参数</param>
        </member>
        <member name="M:FaceCat.FCGrid.onLoad">
            <summary>
            控件添加方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.onLostFocus">
            <summary>
            丢失焦点方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onTouchLeave(FaceCat.FCTouchInfo)">
            <summary>
            触摸离开方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGrid.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCGrid.onPaintEditTextBox(FaceCat.FCGridCell,FaceCat.FCPaint,FaceCat.FCRect,FaceCat.FCRect)">
            <summary>
            绘制编辑文本框
            </summary>
            <param name="cell">单元格</param>
            <param name="paint">绘图对象</param>
            <param name="rect">区域</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCGrid.onRowEditBegin(FaceCat.FCGridRow)">
            <summary>
            行编辑开始
            </summary>
            <param name="row">行</param>
        </member>
        <member name="M:FaceCat.FCGrid.onRowEditEnd">
            <summary>
            行编辑结束
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.onSelectedCellsChanged">
            <summary>
            选中单元格改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.onSelectedColumnsChanged">
            <summary>
            选中列改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.onSelectedRowsChanged">
            <summary>
            选中行改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.onSetEmptyClipRegion">
            <summary>
            设置控件不可见方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.onTimer(System.Int32)">
            <summary>
            秒表方法
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCGrid.onVisibleChanged">
            <summary>
            可见状态改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.removeColumn(FaceCat.FCGridColumn)">
            <summary>
            移除列
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:FaceCat.FCGrid.removeRow(FaceCat.FCGridRow)">
            <summary>
            移除行
            </summary>
            <param name="row">行</param>
        </member>
        <member name="M:FaceCat.FCGrid.resetHeaderLayout">
            <summary>
            调整列的布局
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.rowVisible(FaceCat.FCRect@,System.Int32,System.Int32,System.Double,System.Int32,System.Int32)">
            <summary>
            行是否可见
            </summary>
            <param name="bounds"></param>
            <param name="rowHeight"></param>
            <param name="scrollV"></param>
            <param name="visiblePercent"></param>
            <param name="cell"></param>
            <param name="floor"></param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCGrid.selectFrontRow">
            <summary>
            选中上一行
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.selectNextRow">
            <summary>
            选中下一行
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCGrid.sortColumn(FaceCat.FCGrid,FaceCat.FCGridColumn,FaceCat.FCGridColumnSortMode)">
            <summary>
            排序
            </summary>
            <param name="grid">表格</param>
            <param name="column">列</param>
            <param name="sortMode">排序方式</param>
        </member>
        <member name="M:FaceCat.FCGrid.touchEvent(FaceCat.FCTouchInfo,System.Int32)">
            <summary>
            触摸事件
            </summary>
            <param name="touchInfo">触摸信息</param>
            <param name="state">0:移动 1:按下 2:抬起</param>
        </member>
        <member name="M:FaceCat.FCGrid.update">
            <summary>
            重新布局
            </summary>
        </member>
        <member name="M:FaceCat.FCGrid.updateSortColumn">
            <summary>
            更新列排序
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.AllowDragRow">
            <summary>
            获取或设置是否允许拖动行
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.AllVisibleColumnsWidth">
            <summary>
            获取所有可见列的宽度
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.AllowHoveredRow">
            <summary>
            获取或设置是否允许悬停行
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.AllVisibleRowsHeight">
            <summary>
            获取所有可见行的高度
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.AlternateRowStyle">
            <summary>
            获取或设置交替行的样式
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.CellEditMode">
            <summary>
            获取或设置单元格编辑模式
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.EditTextBox">
            <summary>
            获取编辑文本框
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.GridLineColor">
            <summary>
            获取或设置网格线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.HeaderVisible">
            <summary>
            获取或设置标题头是否可见
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.HeaderHeight">
            <summary>
            获取或设置标题头的高度
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.HorizontalOffset">
            <summary>
            获取或设置横向滚动距离
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.HoveredCell">
            <summary>
            获取或设置触摸悬停的单元格
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.HoveredRow">
            <summary>
            获取触摸悬停的行
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.MultiSelect">
            <summary>
            获取或设置是否多选
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.RowStyle">
            <summary>
            获取或设置行的样式
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.SelectedCells">
            <summary>
            获取选中的单元格
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.SelectedColumns">
            <summary>
            获取选中的列
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.SelectedRows">
            <summary>
            获取选中行
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.SelectionMode">
            <summary>
            选中模式
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.Sort">
            <summary>
            获取或设置排序处理类
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.UseAnimation">
            <summary>
            获取或设置是否使用动画
            </summary>
        </member>
        <member name="P:FaceCat.FCGrid.VerticalOffset">
            <summary>
            获取或设置纵向滚动距离
            </summary>
        </member>
        <member name="T:FaceCat.CYears">
            <summary>
            日历
            </summary>
        </member>
        <member name="F:FaceCat.CYears.m_years">
            <summary>
            年的集合
            </summary>
        </member>
        <member name="M:FaceCat.CYears.getYear(System.Int32)">
            <summary>
            获取年
            </summary>
            <param name="year">年份</param>
            <returns>年</returns>
        </member>
        <member name="M:FaceCat.CYears.delete">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="T:FaceCat.FCUIScript">
            <summary>
            脚本接口类
            </summary>
        </member>
        <member name="M:FaceCat.FCUIScript.callFunction(System.String)">
            <summary>
            调用方法
            </summary>
            <param name="function">方法文本</param>
            <returns>返回值</returns>
        </member>
        <member name="M:FaceCat.FCUIScript.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.FCUIScript.setText(System.String)">
            <summary>
            设置脚本
            </summary>
            <param name="text">脚本</param>
        </member>
        <member name="P:FaceCat.FCUIScript.IsDeleted">
            <summary>
            获取是否被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCUIScript.Xml">
            <summary>
            获取或设置XML对象
            </summary>
        </member>
        <member name="T:FaceCat.ScaleGrid">
            <summary>
            网格线
            </summary>
        </member>
        <member name="M:FaceCat.ScaleGrid.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.ScaleGrid.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.ScaleGrid.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.ScaleGrid.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.ScaleGrid.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.ScaleGrid.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.ScaleGrid.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.ScaleGrid.Distance">
            <summary>
            获取或设置距离
            </summary>
        </member>
        <member name="P:FaceCat.ScaleGrid.GridColor">
            <summary>
            获取或设置网格线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.ScaleGrid.LineStyle">
            <summary>
            获取或设置获取或设置横向网格线的样式
            </summary>
        </member>
        <member name="P:FaceCat.ScaleGrid.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.ScaleGrid.Visible">
            <summary>
            获取或设置是否可见
            </summary>
        </member>
        <member name="T:FaceCat.FCComboBoxMenu">
            <summary>
            下拉列表控件的列表
            </summary>
        </member>
        <member name="T:FaceCat.FCMenu">
            <summary>
            菜单控件
            </summary>
        </member>
        <member name="M:FaceCat.FCMenu.#ctor">
            <summary>
            创建控件
            </summary>
        </member>
        <member name="F:FaceCat.FCMenu.m_items">
            <summary>
            菜单项
            </summary>
        </member>
        <member name="F:FaceCat.FCMenu.m_timerID">
            <summary>
            秒表编号
            </summary>
        </member>
        <member name="M:FaceCat.FCMenu.addItem(FaceCat.FCMenuItem)">
            <summary>
            添加项
            </summary>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCMenu.adjust(FaceCat.FCMenu)">
            <summary>
            自动适应位置和大小
            </summary>
            <param name="menu">菜单</param>
        </member>
        <member name="M:FaceCat.FCMenu.callMenuItemTouchEvent(System.Int32,FaceCat.FCMenuItem,FaceCat.FCTouchInfo)">
            <summary>
            调用菜单的触摸事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="item">菜单项</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCMenu.checkDivFocused(FaceCat.ArrayList{FaceCat.FCMenuItem})">
            <summary>
            检查图层是否具有焦点
            </summary>
            <param name="items">控件集合</param>
            <returns>是否有焦点</returns>
        </member>
        <member name="M:FaceCat.FCMenu.checkFocused(FaceCat.FCView)">
            <summary>
            检查焦点
            </summary>
            <param name="control">控件</param>
            <returns>是否有焦点</returns>
        </member>
        <member name="M:FaceCat.FCMenu.clearItems">
            <summary>
            清除所有的项
            </summary>
        </member>
        <member name="M:FaceCat.FCMenu.closeMenus(FaceCat.ArrayList{FaceCat.FCMenuItem})">
            <summary>
            关闭网格控件
            </summary>
            <param name="items">菜单集合</param>
            <returns>是否关闭成功</returns>
        </member>
        <member name="M:FaceCat.FCMenu.createDropDownMenu">
            <summary>
            创建菜单
            </summary>
            <returns>布局控件</returns>
        </member>
        <member name="M:FaceCat.FCMenu.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCMenu.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCMenu.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCMenu.getItems">
            <summary>
            获取所有的菜单项
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCMenu.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCMenu.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCMenu.insertItem(System.Int32,FaceCat.FCMenuItem)">
            <summary>
            插入项
            </summary>
            <param name="index">索引</param>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCMenu.onAutoHide">
            <summary>
            是否不处理自动隐藏
            </summary>
            <returns>是否不处理</returns>
        </member>
        <member name="M:FaceCat.FCMenu.onMenuItemClick(FaceCat.FCMenuItem,FaceCat.FCTouchInfo)">
            <summary>
            菜单点击方法
            </summary>
            <param name="item">菜单项</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCMenu.onMenuItemTouchMove(FaceCat.FCMenuItem,FaceCat.FCTouchInfo)">
            <summary>
            菜单触摸移动方法
            </summary>
            <param name="item">菜单项</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCMenu.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCMenu.onTimer(System.Int32)">
            <summary>
            秒表方法
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCMenu.onVisibleChanged">
            <summary>
            可见状态改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCMenu.removeItem(FaceCat.FCMenuItem)">
            <summary>
            移除菜单项
            </summary>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCMenu.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCMenu.AutoHide">
            <summary>
            获取或设置是否自动隐藏
            </summary>
        </member>
        <member name="P:FaceCat.FCMenu.ParentItem">
            <summary>
            获取或设置父菜单项
            </summary>
        </member>
        <member name="P:FaceCat.FCMenu.Popup">
            <summary>
            获取或设置是否弹出
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBoxMenu.#ctor">
            <summary>
            创建列表
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBoxMenu.onAutoHide">
            <summary>
            是否自动隐藏
            </summary>
            <returns>是否隐藏</returns>
        </member>
        <member name="P:FaceCat.FCComboBoxMenu.ComboBox">
            <summary>
            获取或设置列表控件
            </summary>
        </member>
        <member name="T:FaceCat.FCComboBox">
            <summary>
            下拉列表控件
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBox.#ctor">
            <summary>
            创建下拉列表
            </summary>
        </member>
        <member name="F:FaceCat.FCComboBox.m_dropDownButtonTouchDownEvent">
            <summary>
            下拉按钮的点击函数
            </summary>
        </member>
        <member name="F:FaceCat.FCComboBox.m_menuItemClickEvent">
            <summary>
            下拉菜单的点击函数
            </summary>
        </member>
        <member name="F:FaceCat.FCComboBox.m_menuKeyDownEvent">
            <summary>
            下拉菜单的按键函数
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBox.addItem(FaceCat.FCMenuItem)">
            <summary>
            添加菜单项
            </summary>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCComboBox.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBox.dropDownButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            下拉按钮的点击方法
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCComboBox.clearItems">
            <summary>
            清除所有菜单项
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBox.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCComboBox.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCComboBox.getItems">
            <summary>
            获取菜单项
            </summary>
            <returns>菜单项集合</returns>
        </member>
        <member name="M:FaceCat.FCComboBox.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCComboBox.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCComboBox.insertItem(System.Int32,FaceCat.FCMenuItem)">
            <summary>
            插入菜单项
            </summary>
            <param name="index">索引</param>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCComboBox.menuItemClick(System.Object,FaceCat.FCMenuItem,FaceCat.FCTouchInfo)">
            <summary>
            菜单项的点击方法
            </summary>
            <param name="sender">调用者</param>
            <param name="item">菜单项</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCComboBox.MenuKeyDown(System.Object,System.Char)">
            <summary>
            下拉菜单的按键方法
            </summary>
            <param name="sender">调用者</param>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCComboBox.onDropDownOpening">
            <summary>
            菜单下拉方法
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBox.onKeyDown(System.Char)">
            <summary>
            键盘按下方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCComboBox.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBox.onSelectedIndexChanged">
            <summary>
            选中索引改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCComboBox.onTouchWheel(FaceCat.FCTouchInfo)">
            <summary>
            触摸滚轮方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCComboBox.removeItem(FaceCat.FCMenuItem)">
            <summary>
            移除菜单项
            </summary>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCComboBox.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCComboBox.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.FCComboBox.DropDownButton">
            <summary>
            获取下拉按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCComboBox.DropDownMenu">
            <summary>
            获取下拉菜单
            </summary>
        </member>
        <member name="P:FaceCat.FCComboBox.SelectedIndex">
            <summary>
            获取或设置选中的索引
            </summary>
        </member>
        <member name="P:FaceCat.FCComboBox.SelectedText">
            <summary>
            获取或设置选中的文字
            </summary>
        </member>
        <member name="P:FaceCat.FCComboBox.SelectedValue">
            <summary>
            获取或设置选中的值
            </summary>
        </member>
        <member name="T:FaceCat.FCEventInfo">
            <summary>
            事件信息
            </summary>
        </member>
        <member name="F:FaceCat.FCEventInfo.m_functions">
            <summary>
            方法
            </summary>
        </member>
        <member name="M:FaceCat.FCEventInfo.addEvent(System.Int32,System.String)">
            <summary>
            添加事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="function">方法</param>
        </member>
        <member name="M:FaceCat.FCEventInfo.getFunction(System.Int32)">
            <summary>
            获取方法
            </summary>
            <param name="eventID">事件ID</param>
            <returns>方法</returns>
        </member>
        <member name="M:FaceCat.FCEventInfo.removeEvent(System.Int32)">
            <summary>
            移除事件
            </summary>
            <param name="eventID">事件ID</param>
        </member>
        <member name="T:FaceCat.FCUIEvent">
            <summary>
            事件
            </summary>
        </member>
        <member name="M:FaceCat.FCUIEvent.#ctor(FaceCat.FCUIXml)">
            <summary>
            创建事件
            </summary>
            <param name="xml">XML对象</param>
        </member>
        <member name="F:FaceCat.FCUIEvent.m_events">
            <summary>
            事件集合
            </summary>
        </member>
        <member name="M:FaceCat.FCUIEvent.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCUIEvent.callAdd(System.Object)">
            <summary>
            添加控件事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callBackColorChanged(System.Object)">
            <summary>
            添加背景颜色改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.CallBackImageChanged(System.Object)">
            <summary>
            添加背景图片改变时间
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callChar(System.Object,System.Char)">
            <summary>
            字符输入事件
            </summary>
            <param name="ch">字符</param>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callCheckedChanged(System.Object)">
            <summary>
            选中改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callClick(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            触摸点击事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callCopy(System.Object)">
            <summary>
            复制事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callCut(System.Object)">
            <summary>
            剪切事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callDockChanged(System.Object)">
            <summary>
            Dock改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callDoubleClick(System.Object)">
            <summary>
            双击事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callDragBegin(System.Object)">
            <summary>
            拖动开始事件
            </summary>
            <param name="sender">调用者</param>
            <returns>是否拖动</returns>
        </member>
        <member name="M:FaceCat.FCUIEvent.CallDragEnd(System.Object)">
            <summary>
            拖动结束事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callDragging(System.Object)">
            <summary>
            正在拖动事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callEnableChanged(System.Object)">
            <summary>
            可用改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFontChanged(System.Object)">
            <summary>
            字体改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFunction(System.Object,System.Int32)">
            <summary>
            调用方法
            </summary>
            <param name="sender">调用者</param>
            <param name="eventID">事件ID</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callGotFocus(System.Object)">
            <summary>
            获得焦点事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFCGridCellClick(System.Object)">
            <summary>
            单元格点击事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFCGridCellEditBegin(System.Object)">
            <summary>
            单元格编辑开始事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFCGridCellEditEnd(System.Object)">
            <summary>
            单元格编辑结束事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFCGridCellTouchDown(System.Object)">
            <summary>
            单元格触摸按下事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFCGridCellTouchMove(System.Object)">
            <summary>
            单元格触摸移动事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callFCGridCellTouchUp(System.Object)">
            <summary>
            单元格触摸抬起事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callInvoke(System.Object,System.Object)">
            <summary>
            在控件线程中调用事件
            </summary>
            <param name="sender">调用者</param>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callLoad(System.Object)">
            <summary>
            控件加载事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callLocationChanged(System.Object)">
            <summary>
            位置改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callLostFocus(System.Object)">
            <summary>
            丢失焦点事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callKeyDown(System.Object,System.Char)">
            <summary>
            键盘按下事件
            </summary>
            <param name="sender">调用者</param>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.CallKeyUp(System.Object,System.Char)">
            <summary>
            键盘弹起事件
            </summary>
            <param name="sender">调用者</param>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callMarginChanged(System.Object)">
            <summary>
            外边界改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callMenuItemClick(System.Object,FaceCat.FCMenuItem,FaceCat.FCTouchInfo)">
            <summary>
            菜单项点击事件
            </summary>
            <param name="sender">调用者</param>
            <param name="item">菜单项</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            触摸按下事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTouchEnter(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            触摸进入事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTouchLeave(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            触摸离开事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTouchMove(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            触摸移动事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTouchUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTouchWheel(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            触摸滚动事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callPaddingChanged(System.Object,FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            内边界改变事件
            </summary>
            <param name="sender">调用者</param>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callPaint(System.Object,FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘事件
            </summary>
            <param name="sender">调用者</param>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callPaintBorder(System.Object,FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘边线事件
            </summary>
            <param name="sender">调用者</param>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callParentChanged(System.Object)">
            <summary>
            父控件发生变化
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callPaste(System.Object)">
            <summary>
            复制事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.CallRegionChanged(System.Object)">
            <summary>
            区域发生变化事件
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callRemove(System.Object)">
            <summary>
            移除控件事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callSelectedTimeChanged(System.Object)">
            <summary>
            选中日期改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callSelectedIndexChanged(System.Object)">
            <summary>
            选中索引改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.CallSelectedTabPageChanged(System.Object)">
            <summary>
            选中页改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callScrolled(System.Object)">
            <summary>
            滚动事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callSizeChanged(System.Object)">
            <summary>
            尺寸改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTabIndexChanged(System.Object)">
            <summary>
            Tab改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.CallTabStop(System.Object)">
            <summary>
            Tab停留事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTextChanged(System.Object)">
            <summary>
            文本改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTextColorChanged(System.Object)">
            <summary>
            前景色改变事件
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callTimer(System.Object,System.Int32)">
            <summary>
            秒表回调事件
            </summary>
            <param name="sender">调用者</param>
            <param name="timerID">编号</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callValueChanged(System.Object)">
            <summary>
            数值改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callVisibleChanged(System.Object)">
            <summary>
            可见状态改变事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCUIEvent.callWindowClosed(System.Object)">
            <summary>
            窗体已关闭事件
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:FaceCat.FCUIEvent.getEventID(System.String)">
            <summary>
            获取事件的ID
            </summary>
            <param name="eventName">事件名称</param>
            <returns>事件的ID</returns>
        </member>
        <member name="M:FaceCat.FCUIEvent.registerEvent(FaceCat.FCView,System.String,System.String)">
            <summary>
            注册事件
            </summary>
            <param name="control">控件</param>
            <param name="eventName">事件名称</param>
            <param name="function">方法</param>
        </member>
        <member name="P:FaceCat.FCUIEvent.Clicks">
            <summary>
            获取或设置点击次数
            </summary>
        </member>
        <member name="P:FaceCat.FCUIEvent.IsDeleted">
            <summary>
            获取是否被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCUIEvent.Key">
            <summary>
            获取或设置按键
            </summary>
        </member>
        <member name="P:FaceCat.FCUIEvent.Script">
            <summary>
            获取或设置脚本
            </summary>
        </member>
        <member name="P:FaceCat.FCUIEvent.Sender">
            <summary>
            获取或设置调用者
            </summary>
        </member>
        <member name="P:FaceCat.FCUIEvent.TouchInfo">
            <summary>
            获取或设置触摸点击的按键
            </summary>
        </member>
        <member name="P:FaceCat.FCUIEvent.Xml">
            <summary>
            获取或设置XML对象
            </summary>
        </member>
        <member name="T:FaceCat.FCHttpGetService">
            <summary>
            HTTP的GET服务
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpGetService.#ctor">
            <summary>
            创建HTTP服务
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpGetService.get(System.String)">
            <summary>
            获取网页数据
            </summary>
            <param name="url">地址</param>
            <returns>页面源码</returns>
        </member>
        <member name="T:FaceCat.FCVScrollBar">
            <summary>
            纵向滚动条控件
            </summary>
        </member>
        <member name="M:FaceCat.FCVScrollBar.#ctor">
            <summary>
            创建控件
            </summary>
        </member>
        <member name="F:FaceCat.FCVScrollBar.m_backButtonTouchDownEvent">
            <summary>
            背景按钮的触摸按下事件
            </summary>
        </member>
        <member name="F:FaceCat.FCVScrollBar.m_backButtonTouchUpEvent">
            <summary>
            背景按钮的触摸抬起事件
            </summary>
        </member>
        <member name="M:FaceCat.FCVScrollBar.backButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸按下回调事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCVScrollBar.backButtonTouchUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸抬起回调事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCVScrollBar.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCVScrollBar.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCVScrollBar.onDragScroll">
            <summary>
            拖动滚动方法
            </summary>
        </member>
        <member name="M:FaceCat.FCVScrollBar.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCVScrollBar.onBackButtonTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸按下回调方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCVScrollBar.onBackButtonTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCVScrollBar.update">
            <summary>
            重新布局方法
            </summary>
        </member>
        <member name="T:FaceCat.FCSizeType">
            <summary>
            调整大小的类型
            </summary>
        </member>
        <member name="F:FaceCat.FCSizeType.AbsoluteSize">
            <summary>
            绝对大小
            </summary>
        </member>
        <member name="F:FaceCat.FCSizeType.AutoFill">
            <summary>
            自动填充
            </summary>
        </member>
        <member name="F:FaceCat.FCSizeType.PercentSize">
            <summary>
            百分比大小
            </summary>
        </member>
        <member name="T:FaceCat.FCColumnStyle">
            <summary>
            列的样式
            </summary>
        </member>
        <member name="M:FaceCat.FCColumnStyle.#ctor(FaceCat.FCSizeType,System.Single)">
            <summary>
            创建列的样式
            </summary>
            <param name="sizeType">调整大小的类型</param>
            <param name="width">宽度</param>
        </member>
        <member name="M:FaceCat.FCColumnStyle.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCColumnStyle.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCColumnStyle.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCColumnStyle.SizeType">
            <summary>
            获取或设置调整大小的类型
            </summary>
        </member>
        <member name="P:FaceCat.FCColumnStyle.Width">
            <summary>
            获取或设置宽度
            </summary>
        </member>
        <member name="T:FaceCat.FCRowStyle">
            <summary>
            行的样式
            </summary>
        </member>
        <member name="M:FaceCat.FCRowStyle.#ctor(FaceCat.FCSizeType,System.Single)">
            <summary>
            创建行的样式
            </summary>
            <param name="sizeType">调整大小的类型</param>
            <param name="height">高度</param>
        </member>
        <member name="M:FaceCat.FCRowStyle.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCRowStyle.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCRowStyle.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCRowStyle.Height">
            <summary>
            获取或设置宽度
            </summary>
        </member>
        <member name="P:FaceCat.FCRowStyle.SizeType">
            <summary>
            获取或设置调整大小的类型
            </summary>
        </member>
        <member name="T:FaceCat.FCTableLayoutDiv">
            <summary>
            表格布局控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.#ctor">
            <summary>
            创建布局控件
            </summary>
        </member>
        <member name="F:FaceCat.FCTableLayoutDiv.m_columns">
            <summary>
            列的集合
            </summary>
        </member>
        <member name="F:FaceCat.FCTableLayoutDiv.m_rows">
            <summary>
            行的集合
            </summary>
        </member>
        <member name="F:FaceCat.FCTableLayoutDiv.m_tableControls">
            <summary>
            表格控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.addControl(FaceCat.FCView)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.addControl(FaceCat.FCView,System.Int32,System.Int32)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
            <param name="column">列</param>
            <param name="row">行</param>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.delete">
            <summary>
            销毁资源方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.OnResetLayout">
            <summary>
            重置布局
            </summary>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.removeControl(FaceCat.FCView)">
            <summary>
            移除控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCTableLayoutDiv.update">
            <summary>
            布局更新方法
            </summary>
        </member>
        <member name="P:FaceCat.FCTableLayoutDiv.ColumnsCount">
            <summary>
            获取或设置列的数量
            </summary>
        </member>
        <member name="P:FaceCat.FCTableLayoutDiv.ColumnStyles">
            <summary>
            获取或设置列的样式
            </summary>
        </member>
        <member name="P:FaceCat.FCTableLayoutDiv.RowsCount">
            <summary>
            获取或设置行的数量
            </summary>
        </member>
        <member name="P:FaceCat.FCTableLayoutDiv.RowStyles">
            <summary>
            获取或设置行的样式
            </summary>
        </member>
        <member name="T:FaceCat.FCGroupBox">
            <summary>
            组控件
            </summary>
        </member>
        <member name="M:FaceCat.FCGroupBox.#ctor">
            <summary>
            创建层控件
            </summary>
        </member>
        <member name="M:FaceCat.FCGroupBox.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCGroupBox.onPaintBorder(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘边线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCGroupBox.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="T:FaceCat.CList`1">
            <summary>
            自定义泛型集合
            </summary>
            <typeparam name="T">泛型</typeparam>
        </member>
        <member name="M:FaceCat.CList`1.#ctor">
            <summary>
            创建泛型集合
            </summary>
        </member>
        <member name="M:FaceCat.CList`1.#ctor(System.Int32)">
            <summary>
            创建泛型集合
            </summary>
            <param name="capacity">容量</param>
        </member>
        <member name="M:FaceCat.CList`1.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.CList`1.addranges(`0[],System.Int32)">
            <summary>
            创建泛型集合
            </summary>
            <param name="ary">数组</param>
            <param name="size">大小</param>
        </member>
        <member name="M:FaceCat.CList`1.capacity">
            <summary>
            获取容量
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.CList`1.clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:FaceCat.CList`1.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.CList`1.get(System.Int32)">
            <summary>
            根据索引获取数据
            </summary>
            <param name="index">索引</param>
            <returns>数据</returns>
        </member>
        <member name="M:FaceCat.CList`1.insert(System.Int32,`0)">
            <summary>
            插入数据
            </summary>
            <param name="index">索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.CList`1.push_back(`0)">
            <summary>
            向后插入值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.CList`1.remove_at(System.Int32)">
            <summary>
            移除数据
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:FaceCat.CList`1.set(System.Int32,`0)">
            <summary>
            设置值
            </summary>
            <param name="index">索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.CList`1.set_capacity(System.Int32)">
            <summary>
            设置容量
            </summary>
            <param name="capacity">容量</param>
        </member>
        <member name="M:FaceCat.CList`1.set_step(System.Int32)">
            <summary>
            设置容量增长步长
            </summary>
            <param name="step">步长</param>
        </member>
        <member name="M:FaceCat.CList`1.size">
            <summary>
            获取大小
            </summary>
            <returns>大小</returns>
        </member>
        <member name="T:FaceCat.MonthButton">
            <summary>
            月的按钮
            </summary>
        </member>
        <member name="M:FaceCat.MonthButton.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建月的按钮
            </summary>
            <param name="calendar">创建月的按钮</param>
        </member>
        <member name="M:FaceCat.MonthButton.GetMonthStr">
            <summary>
            获取月的文字
            </summary>
            <returns>月的文字</returns>
        </member>
        <member name="M:FaceCat.MonthButton.getPaintingBackColor">
            <summary>
            获取绘制的背景色
            </summary>
            <returns>背景色</returns>
        </member>
        <member name="M:FaceCat.MonthButton.getPaintingBorderColor">
            <summary>
            获取绘制的边线颜色
            </summary>
            <returns>边线颜色</returns>
        </member>
        <member name="M:FaceCat.MonthButton.getPaintingTextColor">
            <summary>
            获取要绘制的前景色
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.MonthButton.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.MonthButton.onPaintBackGround(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.MonthButton.onPaintBorder(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘边线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.MonthButton.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="P:FaceCat.MonthButton.Bounds">
            <summary>
            获取或设置显示区域
            </summary>
        </member>
        <member name="P:FaceCat.MonthButton.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="P:FaceCat.MonthButton.Month">
            <summary>
            获取或设置月
            </summary>
        </member>
        <member name="P:FaceCat.MonthButton.Visible">
            <summary>
            获取或设置是否可见
            </summary>
        </member>
        <member name="P:FaceCat.MonthButton.Year">
            <summary>
            获取或设置年
            </summary>
        </member>
        <member name="T:FaceCat.FCCalendarMode">
            <summary>
            日历模式
            </summary>
        </member>
        <member name="F:FaceCat.FCCalendarMode.Day">
            <summary>
            选择日
            </summary>
        </member>
        <member name="F:FaceCat.FCCalendarMode.Month">
            <summary>
            选择月
            </summary>
        </member>
        <member name="F:FaceCat.FCCalendarMode.Year">
            <summary>
            选择年
            </summary>
        </member>
        <member name="T:FaceCat.FCCalendar">
            <summary>
            日历控件
            </summary>
        </member>
        <member name="M:FaceCat.FCCalendar.#ctor">
            <summary>
            创建日历控件
            </summary>
        </member>
        <member name="F:FaceCat.FCCalendar.m_month">
            <summary>
            当前的月份
            </summary>
        </member>
        <member name="F:FaceCat.FCCalendar.m_timerID">
            <summary>
            秒表ID
            </summary>
        </member>
        <member name="F:FaceCat.FCCalendar.m_year">
            <summary>
            当前的年份
            </summary>
        </member>
        <member name="F:FaceCat.FCCalendar.m_monthDiv">
            <summary>
            月份层
            </summary>
        </member>
        <member name="M:FaceCat.FCCalendar.delete">
            <summary>
            销毁事件
            </summary>
        </member>
        <member name="M:FaceCat.FCCalendar.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCCalendar.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCCalendar.getLastMonth(System.Int32,System.Int32)">
            <summary>
            根据年月获取上个月
            </summary>
            <param name="year">年</param>
            <param name="month">月</param>
            <returns>上个月</returns>
        </member>
        <member name="M:FaceCat.FCCalendar.getNextMonth(System.Int32,System.Int32)">
            <summary>
            获取下个月
            </summary>
            <param name="year">年</param>
            <param name="month">月</param>
            <returns>下个月</returns>
        </member>
        <member name="M:FaceCat.FCCalendar.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
            <param name="type">类型</param>
        </member>
        <member name="M:FaceCat.FCCalendar.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCCalendar.goLastMonth">
            <summary>
            回到上个月
            </summary>
        </member>
        <member name="M:FaceCat.FCCalendar.goNextMonth">
            <summary>
            前往下个月
            </summary>
        </member>
        <member name="M:FaceCat.FCCalendar.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCCalendar.onLoad">
            <summary>
            控件被添加事件
            </summary>
        </member>
        <member name="M:FaceCat.FCCalendar.onKeyDown(System.Char)">
            <summary>
            键盘方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCCalendar.onPaintBackground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCCalendar.onSelectedTimeChanged">
            <summary>
            选中日期更改方法
            </summary>
        </member>
        <member name="M:FaceCat.FCCalendar.onTimer(System.Int32)">
            <summary>
            秒表事件
            </summary>
            <param name="timerID">秒表编号</param>
        </member>
        <member name="M:FaceCat.FCCalendar.setProperty(System.String,System.String)">
            <summary>
            设置属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCCalendar.update">
            <summary>
            重新布局
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.DayDiv">
            <summary>
            获取或设置日期层
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.HeadDiv">
            <summary>
            获取或设置头部层
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.Mode">
            <summary>
            获取或设置日历的模式
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.Month">
            <summary>
            获取或设置月份
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.MonthDiv">
            <summary>
            获取或设置月份层
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.SelectedDay">
            <summary>
            获取选中日期
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.TimeDiv">
            <summary>
            获取或设置时间层
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.UseAnimation">
            <summary>
            获取或设置是否使用动画
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.YearDiv">
            <summary>
            获取或设置年份层
            </summary>
        </member>
        <member name="P:FaceCat.FCCalendar.Years">
            <summary>
            获取或设置日历
            </summary>
        </member>
        <member name="T:FaceCat.CMonth">
            <summary>
            月
            </summary>
        </member>
        <member name="M:FaceCat.CMonth.#ctor(System.Int32,System.Int32)">
            <summary>
            创建月
            </summary>
            <param name="year">年</param>
            <param name="month">月</param>
        </member>
        <member name="M:FaceCat.CMonth.createDays">
            <summary>
            创建日的集合
            </summary>
        </member>
        <member name="M:FaceCat.CMonth.delete">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="P:FaceCat.CMonth.Days">
            <summary>
            获取或设置日的集合
            </summary>
        </member>
        <member name="P:FaceCat.CMonth.DaysInMonth">
            <summary>
            获取月的日数
            </summary>
        </member>
        <member name="P:FaceCat.CMonth.FirstDay">
            <summary>
            获取该月的第一日
            </summary>
        </member>
        <member name="P:FaceCat.CMonth.LastDay">
            <summary>
            获取该月的最后一日
            </summary>
        </member>
        <member name="P:FaceCat.CMonth.Month">
            <summary>
            获取月
            </summary>
        </member>
        <member name="P:FaceCat.CMonth.Year">
            <summary>
            获取年
            </summary>
        </member>
        <member name="T:FaceCat.FCCheckBox">
            <summary>
            复选框控件
            </summary>
        </member>
        <member name="T:FaceCat.FCButton">
            <summary>
            按钮控件
            </summary>
        </member>
        <member name="M:FaceCat.FCButton.#ctor">
            <summary>
            创建按钮
            </summary>
        </member>
        <member name="M:FaceCat.FCButton.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCButton.getPaintingBackColor">
            <summary>
            获取要绘制的背景色
            </summary>
            <returns>背景色</returns>
        </member>
        <member name="M:FaceCat.FCButton.getPaintingBackImage">
            <summary>
            获取用于绘制的背景图片
            </summary>
        </member>
        <member name="M:FaceCat.FCButton.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCButton.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCButton.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCButton.onTouchEnter(FaceCat.FCTouchInfo)">
            <summary>
            触摸进入方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCButton.onTouchLeave(FaceCat.FCTouchInfo)">
            <summary>
            触摸离开方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCButton.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCButton.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCButton.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCButton.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCButton.DisabledBackImage">
            <summary>
            获取或设置不可用时的背景图片
            </summary>
        </member>
        <member name="P:FaceCat.FCButton.HoveredBackImage">
            <summary>
            获取或设置触摸悬停时的背景图片
            </summary>
        </member>
        <member name="P:FaceCat.FCButton.PushedBackImage">
            <summary>
            获取或设置触摸按下时的背景图片
            </summary>
        </member>
        <member name="P:FaceCat.FCButton.TextAlign">
            <summary>
            获取或设置文字的布局方式
            </summary>
        </member>
        <member name="M:FaceCat.FCCheckBox.#ctor">
            <summary>
            创建复选框
            </summary>
        </member>
        <member name="M:FaceCat.FCCheckBox.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCCheckBox.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCCheckBox.getPaintingBackColor">
            <summary>
            获取或设置的背景色
            </summary>
            <returns>背景色</returns>
        </member>
        <member name="M:FaceCat.FCCheckBox.getPaintingButtonBackColor">
            <summary>
            获取要绘制的按钮的背景色
            </summary>
            <returns>按钮的背景色</returns>
        </member>
        <member name="M:FaceCat.FCCheckBox.getPaintingButtonBorderColor">
            <summary>
            获取要绘制的按钮边线颜色
            </summary>
            <returns>边线的颜色</returns>
        </member>
        <member name="M:FaceCat.FCCheckBox.getPaintingBackImage">
            <summary>
            获取用于绘制的背景图片
            </summary>
        </member>
        <member name="M:FaceCat.FCCheckBox.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCCheckBox.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCCheckBox.onCheckedChanged">
            <summary>
            选中改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCCheckBox.onClick(FaceCat.FCTouchInfo)">
            <summary>
            点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCCheckBox.onPaintBackground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCCheckBox.onPaintCheckButton(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘选中按钮方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCCheckBox.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCCheckBox.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCCheckBox.ButtonAlign">
            <summary>
            获取或设置内容的横向排列样式
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.ButtonBackColor">
            <summary>
            获取或设置按钮的背景色
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.ButtonBorderColor">
            <summary>
            获取或设置按钮的边线颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.ButtonSize">
            <summary>
            获取或设置按钮的尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.Checked">
            <summary>
            获取或设置是否被选中
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.CheckedBackImage">
            <summary>
            获取或设置选中时的背景图
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.CheckHoveredBackImage">
            <summary>
            获取或设置触摸悬停且选中时的背景图片
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.CheckPushedBackImage">
            <summary>
            获取或设置触摸按下且选中时的背景图片
            </summary>
        </member>
        <member name="P:FaceCat.FCCheckBox.DisableCheckedBackImage">
            <summary>
            获取或设置不可用时的选中背景图片
            </summary>
        </member>
        <member name="T:FaceCat.FCBinary">
            <summary>
            流解析
            </summary>
        </member>
        <member name="M:FaceCat.FCBinary.#ctor">
            <summary>
            创建流
            </summary>
        </member>
        <member name="F:FaceCat.FCBinary.m_inputStream">
            <summary>
            输入流
            </summary>
        </member>
        <member name="F:FaceCat.FCBinary.m_outputStream">
            <summary>
            输出流
            </summary>
        </member>
        <member name="F:FaceCat.FCBinary.m_reader">
            <summary>
            读取器
            </summary>
        </member>
        <member name="F:FaceCat.FCBinary.m_writer">
            <summary>
            写入器
            </summary>
        </member>
        <member name="M:FaceCat.FCBinary.close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:FaceCat.FCBinary.getBytes">
            <summary>
            获取Bytes型数据
            </summary>
            <returns>Bytes型数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readBool">
            <summary>
            获取布尔型数据
            </summary>
            <returns>布尔型数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readByte">
            <summary>
            获取Byte型数据
            </summary>
            <returns>Byte型数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readBytes(System.Byte[])">
            <summary>
            读取流数据
            </summary>
            <param name="bytes">流数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.readChar">
            <summary>
            读取Char数据
            </summary>
            <returns>Char数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readDouble">
            <summary>
            读取Double数据
            </summary>
            <returns>Double数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readFloat">
            <summary>
            读取Float数据
            </summary>
            <returns>Float数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readInt">
            <summary>
            读取Int数据
            </summary>
            <returns>Int数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readShort">
            <summary>
            读取Short数据
            </summary>
            <returns>Short数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.readString">
            <summary>
            读取字符串数据
            </summary>
            <returns>字符串数据</returns>
        </member>
        <member name="M:FaceCat.FCBinary.write(System.Byte[],System.Int32)">
            <summary>
            写入流
            </summary>
            <param name="bytes">流</param>
            <param name="len">长度</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeBool(System.Boolean)">
            <summary>
            写入Bool型数据
            </summary>
            <param name="val">Bool型数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeByte(System.Byte)">
            <summary>
            写入Byte型数据
            </summary>
            <param name="val">Byte型数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeBytes(System.Byte[])">
            <summary>
            写入Bytes数据
            </summary>
            <param name="val">Bytes数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeChar(System.Char)">
            <summary>
            写入Char型数据
            </summary>
            <param name="val">Char型数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeDouble(System.Double)">
            <summary>
            写入Double型数据
            </summary>
            <param name="val">Double型数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeFloat(System.Single)">
            <summary>
            写入Float型数据
            </summary>
            <param name="val">Float型数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeInt(System.Int32)">
            <summary>
            写入Int型数据
            </summary>
            <param name="val">Int型数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeShort(System.Int16)">
            <summary>
            写入Short型数据
            </summary>
            <param name="val">Short型数据</param>
        </member>
        <member name="M:FaceCat.FCBinary.writeString(System.String)">
            <summary>
            写入字符串数据
            </summary>
            <param name="val">字符串数据</param>
        </member>
        <member name="T:FaceCat.SelectArea">
            <summary>
            选中区域
            </summary>
        </member>
        <member name="M:FaceCat.SelectArea.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.SelectArea.close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:FaceCat.SelectArea.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.SelectArea.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.SelectArea.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.SelectArea.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.SelectArea.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.SelectArea.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.SelectArea.BackColor">
            <summary>
            获取或设置背景色
            </summary>
        </member>
        <member name="P:FaceCat.SelectArea.Bounds">
            <summary>
            获取或设置选中框的区域
            </summary>
        </member>
        <member name="P:FaceCat.SelectArea.CanResize">
            <summary>
            获取或设置是否可以改变选中框的大小
            </summary>
        </member>
        <member name="P:FaceCat.SelectArea.Enabled">
            <summary>
            获取或设置是否可以出现选中框
            </summary>
        </member>
        <member name="P:FaceCat.SelectArea.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.SelectArea.LineColor">
            <summary>
            获取或设置选中框的颜色
            </summary>
        </member>
        <member name="P:FaceCat.SelectArea.Visible">
            <summary>
            获取或设置是否显示选中框
            </summary>
        </member>
        <member name="T:FaceCat.FCDateTimePicker">
            <summary>
            日期控件
            </summary>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.#ctor">
            <summary>
            创建日期控件
            </summary>
        </member>
        <member name="F:FaceCat.FCDateTimePicker.m_dropDownButtonTouchDownEvent">
            <summary>
            下拉按钮点击函数指针
            </summary>
        </member>
        <member name="F:FaceCat.FCDateTimePicker.m_selectedTimeChangedEvent">
            <summary>
            选中日期改变函数指针
            </summary>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.CreateCalendar">
            <summary>
            创建日历
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.DropDownButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            下拉按钮的点击方法
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
            <param name="type">类型</param>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.onDropDownOpening">
            <summary>
            下拉菜单显示方法
            </summary>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.onSelectedTimeChanged">
            <summary>
            数值改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.selectedTimeChanged(System.Object)">
            <summary>
            选中日期改变事件回调方法
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.setProperty(System.String,System.String)">
            <summary>
            设置属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCDateTimePicker.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.FCDateTimePicker.Calendar">
            <summary>
            获取日历
            </summary>
        </member>
        <member name="P:FaceCat.FCDateTimePicker.CustomFormat">
            <summary>
            获取或设置日期格式
            </summary>
        </member>
        <member name="P:FaceCat.FCDateTimePicker.DropDownButton">
            <summary>
            获取下拉按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCDateTimePicker.DropDownMenu">
            <summary>
            获取下拉菜单
            </summary>
        </member>
        <member name="P:FaceCat.FCDateTimePicker.ShowTime">
            <summary>
            获取或设置是否显示时间
            </summary>
        </member>
        <member name="M:FaceCat.FCClientSocket.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="T:FaceCat.DayDiv">
            <summary>
            日期层
            </summary>
        </member>
        <member name="M:FaceCat.DayDiv.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建日期层
            </summary>
        </member>
        <member name="F:FaceCat.DayDiv.m_am_ClickRowFrom">
            <summary>
            点击时的上月的行
            </summary>
        </member>
        <member name="F:FaceCat.DayDiv.m_am_ClickRowTo">
            <summary>
            点击时的当月的行
            </summary>
        </member>
        <member name="F:FaceCat.DayDiv.m_am_Direction">
            <summary>
            动画的方向
            </summary>
        </member>
        <member name="F:FaceCat.DayDiv.m_am_Tick">
            <summary>
            动画当前帧数
            </summary>
        </member>
        <member name="F:FaceCat.DayDiv.m_am_TotalTick">
            <summary>
            动画总帧数
            </summary>
        </member>
        <member name="F:FaceCat.DayDiv.m_dayButtons">
            <summary>
            日期层的集合
            </summary>
        </member>
        <member name="F:FaceCat.DayDiv.m_dayButtons_am">
            <summary>
            动画日期层的集合
            </summary>
        </member>
        <member name="M:FaceCat.DayDiv.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.DayDiv.hide">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="M:FaceCat.DayDiv.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.DayDiv.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.DayDiv.onPaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.DayDiv.onResetDiv(System.Int32)">
            <summary>
            重置日期图层
            </summary>
            <param name="state">状态</param>
        </member>
        <member name="M:FaceCat.DayDiv.onTimer">
            <summary>
            秒表触发方法
            </summary>
        </member>
        <member name="M:FaceCat.DayDiv.selectedDay(FaceCat.CDay)">
            <summary>
            选中日期
            </summary>
            <param name="selectedDay">日期</param>
        </member>
        <member name="M:FaceCat.DayDiv.show">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:FaceCat.DayDiv.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.DayDiv.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="T:FaceCat.GdiPaint">
            <summary>
            Gdi绘图类
            </summary>
        </member>
        <member name="T:FaceCat.FCPaint">
            <summary>
            绘图类
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.addArc(FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            添加曲线
            </summary>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.FCPaint.addBezier(FaceCat.FCPoint[])">
            <summary>
            添加贝赛尔曲线
            </summary>
            <param name="point1">坐标1</param>
            <param name="point2">坐标2</param>
            <param name="point3">坐标3</param>
            <param name="point4">坐标4</param>
        </member>
        <member name="M:FaceCat.FCPaint.addCurve(FaceCat.FCPoint[])">
            <summary>
            添加曲线
            </summary>
            <param name="points">点阵</param>
        </member>
        <member name="M:FaceCat.FCPaint.addEllipse(FaceCat.FCRect)">
            <summary>
            添加椭圆
            </summary>
            <param name="rect">矩形</param>
        </member>
        <member name="M:FaceCat.FCPaint.addLine(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加直线
            </summary>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.addRect(FaceCat.FCRect)">
            <summary>
            添加矩形
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.addPie(FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            添加扇形
            </summary>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.FCPaint.addText(System.String,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            添加文字
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.beginExport(System.String,FaceCat.FCRect)">
            <summary>
            开始导出
            </summary>
            <param name="exportPath">路径</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.beginPaint(System.IntPtr,FaceCat.FCRect,FaceCat.FCRect)">
            <summary>
            开始绘图
            </summary>
            <param name="hdc">HDC</param>
            <param name="wRect">窗体区域</param>
            <param name="pRect">刷新区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.beginPath">
            <summary>
            开始一段路径
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.clearCaches">
            <summary>
            清除缓存
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.clipPath">
            <summary>
            裁剪路径
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.closeFigure">
            <summary>
            闭合路径
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.closePath">
            <summary>
            结束一段路径
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.delete">
            <summary>
            删除对象
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.drawArc(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制弧线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawBezier(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            设置贝赛尔曲线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">坐标阵</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawCurve(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制曲线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">坐标阵</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawEllipse(System.Int64,System.Single,System.Int32,FaceCat.FCRect)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawEllipse(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawImage(System.String,FaceCat.FCRect)">
            <summary>
            绘制图片
            </summary>
            <param name="imagePath">图片路径</param>
            <param name="rect">绘制区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawLine(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawLine(System.Int64,System.Single,System.Int32,FaceCat.FCPoint,FaceCat.FCPoint)">
            <summary>
            绘制直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x">第一个点的坐标</param>
            <param name="y">第二个点的坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawPath(System.Int64,System.Single,System.Int32)">
            <summary>
            绘制路径
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawPie(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制扇形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawPolygon(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制多边形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">点的数组</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawPolyline(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制大量直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">点集</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawRect(System.Int64,System.Single,System.Int32,FaceCat.FCRect)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawRect(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawRoundRect(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Int32)">
            <summary>
            绘制圆角矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="cornerRadius">边角半径</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawText(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            绘制文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawText(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRectF)">
            <summary>
            绘制文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.drawTextAutoEllipsis(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            绘制自动省略结尾的文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.endExport">
            <summary>
            结束导出
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.endPaint">
            <summary>
            结束绘图
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.excludeClipPath">
            <summary>
            反裁剪路径
            </summary>
        </member>
        <member name="M:FaceCat.FCPaint.fillEllipse(System.Int64,FaceCat.FCRect)">
            <summary>
            填充椭圆
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillEllipse(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            填充椭圆
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillGradientEllipse(System.Int64,System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            绘制渐变椭圆
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">矩形</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillGradientPath(System.Int64,System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            填充渐变路径
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="points">点的集合</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillGradientPolygon(System.Int64,System.Int64,FaceCat.FCPoint[],System.Int32)">
            <summary>
            绘制渐变的多边形
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="points">点的集合</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillGradientRect(System.Int64,System.Int64,FaceCat.FCRect,System.Int32,System.Int32)">
            <summary>
            绘制渐变矩形
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">矩形</param>
            <param name="cornerRadius">圆角半径</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillPath(System.Int64)">
            <summary>
            填充路径
            </summary>
            <param name="dwPenColor">颜色</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillPie(System.Int64,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制扇形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillPolygon(System.Int64,FaceCat.FCPoint[])">
            <summary>
            填充多边形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="points">点的数组</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillRect(System.Int64,FaceCat.FCRect)">
            <summary>
            填充矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillRect(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            填充矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.fillRoundRect(System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            填充圆角矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
            <param name="cornerRadius">边角半径</param>
        </member>
        <member name="M:FaceCat.FCPaint.getColor(System.Int64)">
            <summary>
            获取颜色
            </summary>
            <param name="dwPenColor">输入颜色</param>
            <returns>输出颜色</returns>
        </member>
        <member name="M:FaceCat.FCPaint.getPaintColor(System.Int64)">
            <summary>
            获取要绘制的颜色
            </summary>
            <param name="dwPenColor">输入颜色</param>
            <returns>输出颜色</returns>
        </member>
        <member name="M:FaceCat.FCPaint.getOffset">
            <summary>
            获取偏移
            </summary>
            <returns>偏移坐标</returns>
        </member>
        <member name="M:FaceCat.FCPaint.rotate(FaceCat.FCPoint,FaceCat.FCPoint,System.Int32)">
            <summary>
            旋转角度
            </summary>
            <param name="op">圆心坐标</param>
            <param name="mp">点的坐标</param>
            <param name="angle">角度</param>
            <returns>结果坐标</returns>
        </member>
        <member name="M:FaceCat.FCPaint.setClip(FaceCat.FCRect)">
            <summary>
            设置裁剪区域
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.FCPaint.setLineCap(System.Int32,System.Int32)">
            <summary>
            设置直线两端的样式
            </summary>
            <param name="startLineCap">开始的样式</param>
            <param name="endLineCap">结束的样式</param>
        </member>
        <member name="M:FaceCat.FCPaint.setOffset(FaceCat.FCPoint)">
            <summary>
            设置偏移
            </summary>
            <param name="mp">偏移坐标</param>
        </member>
        <member name="M:FaceCat.FCPaint.setOpacity(System.Single)">
            <summary>
            设置透明度
            </summary>
            <param name="opacity">透明度</param>
        </member>
        <member name="M:FaceCat.FCPaint.setResourcePath(System.String)">
            <summary>
            设置资源的路径
            </summary>
            <param name="resourcePath">资源的路径</param>
        </member>
        <member name="M:FaceCat.FCPaint.setRotateAngle(System.Int32)">
            <summary>
            设置旋转角度
            </summary>
            <param name="rotateAngle">旋转角度</param>
        </member>
        <member name="M:FaceCat.FCPaint.setScaleFactor(System.Double,System.Double)">
            <summary>
            设置缩放因子
            </summary>
            <param name="scaleFactorX">横向因子</param>
            <param name="scaleFactorY">纵向因子</param>
        </member>
        <member name="M:FaceCat.FCPaint.setSmoothMode(System.Int32)">
            <summary>
            设置平滑模式
            </summary>
            <param name="smoothMode">平滑模式</param>
        </member>
        <member name="M:FaceCat.FCPaint.setTextQuality(System.Int32)">
            <summary>
            设置文字的质量
            </summary>
            <param name="textQuality">文字质量</param>
        </member>
        <member name="M:FaceCat.FCPaint.supportTransparent">
            <summary>
            设置是否支持透明色
            </summary>
            <returns>是否支持</returns>
        </member>
        <member name="M:FaceCat.FCPaint.textSize(System.String,FaceCat.FCFont)">
            <summary>
            获取文字大小
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <returns>字体大小</returns>
        </member>
        <member name="M:FaceCat.FCPaint.textSizeF(System.String,FaceCat.FCFont)">
            <summary>
            获取文字大小
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <returns>字体大小</returns>
        </member>
        <member name="M:FaceCat.GdiPaint.#ctor">
            <summary>
            创建绘图类
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_bitmap">
            <summary>
            位图
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_g">
            <summary>
            绘图对象
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_hDC">
            <summary>
            绘图句柄
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_hrgn">
            <summary>
            裁剪
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_images">
            <summary>
            图像缓存
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_offsetX">
            <summary>
            横向偏移
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_offsetY">
            <summary>
            纵向偏移
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_pRect">
            <summary>
            刷新的矩形
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_resourcePath">
            <summary>
            资源路径
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_rotateAngle">
            <summary>
            旋转角度
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_scaleFactorX">
            <summary>
            横向缩放因子
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_scaleFactorY">
            <summary>
            纵向缩放因子
            </summary>
        </member>
        <member name="F:FaceCat.GdiPaint.m_wndHdc">
            <summary>
            控件的HDC
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.addArc(FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            添加曲线
            </summary>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPaint.addBezier(FaceCat.FCPoint[])">
            <summary>
            添加贝赛尔曲线
            </summary>
            <param name="points">点阵</param>
        </member>
        <member name="M:FaceCat.GdiPaint.addCurve(FaceCat.FCPoint[])">
            <summary>
            添加曲线
            </summary>
            <param name="points">点阵</param>
        </member>
        <member name="M:FaceCat.GdiPaint.addEllipse(FaceCat.FCRect)">
            <summary>
            添加椭圆
            </summary>
            <param name="rect">矩形</param>
        </member>
        <member name="M:FaceCat.GdiPaint.addLine(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加直线
            </summary>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.addRect(FaceCat.FCRect)">
            <summary>
            添加矩形
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.addPie(FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            添加扇形
            </summary>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPaint.addText(System.String,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            添加文字
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.affectScaleFactor(System.Drawing.Rectangle@)">
            <summary>
            缩放因子生效
            </summary>
            <param name="gdiplusRect">矩形</param>
        </member>
        <member name="M:FaceCat.GdiPaint.affectScaleFactor(FaceCat.FCRect@)">
            <summary>
            缩放因子生效
            </summary>
            <param name="rect">矩形</param>
        </member>
        <member name="M:FaceCat.GdiPaint.beginExport(System.String,FaceCat.FCRect)">
            <summary>
            开始导出
            </summary>
            <param name="exportPath">路径</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.beginPaint(System.IntPtr,FaceCat.FCRect,FaceCat.FCRect)">
            <summary>
            开始绘图
            </summary>
            <param name="hdc">HDC</param>
            <param name="wRect">窗体区域</param>
            <param name="pRect">刷新区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.beginPath">
            <summary>
            开始一段路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.clearCaches">
            <summary>
            清除缓存
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.clipPath">
            <summary>
            裁剪路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.closeFigure">
            <summary>
            闭合路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.closePath">
            <summary>
            结束一段路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.drawArc(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制弧线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawBezier(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            设置贝赛尔曲线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="point1">坐标1</param>
            <param name="point2">坐标2</param>
            <param name="point3">坐标3</param>
            <param name="point4">坐标4</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawCurve(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制曲线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">坐标阵</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawEllipse(System.Int64,System.Single,System.Int32,FaceCat.FCRect)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawEllipse(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawImage(System.String,FaceCat.FCRect)">
            <summary>
            绘制图片
            </summary>
            <param name="imagePath">图片路径</param>
            <param name="rect">绘制区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawLine(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawLine(System.Int64,System.Single,System.Int32,FaceCat.FCPoint,FaceCat.FCPoint)">
            <summary>
            绘制直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x">第一个点的坐标</param>
            <param name="y">第二个点的坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawPath(System.Int64,System.Single,System.Int32)">
            <summary>
            绘制路径
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawPie(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制扇形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawPolygon(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制多边形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">点的数组</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawPolyline(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制大量直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">点集</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawRect(System.Int64,System.Single,System.Int32,FaceCat.FCRect)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawRect(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawRoundRect(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Int32)">
            <summary>
            绘制圆角矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="cornerRadius">边角半径</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawText(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            绘制文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawText(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRectF)">
            <summary>
            绘制文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.drawTextAutoEllipsis(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            绘制自动省略结尾的文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.endExport">
            <summary>
            结束导出
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.endPaint">
            <summary>
            结束绘图
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.excludeClipPath">
            <summary>
            反裁剪路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPaint.fillEllipse(System.Int64,FaceCat.FCRect)">
            <summary>
            填充椭圆
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillEllipse(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            填充椭圆
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillGradientEllipse(System.Int64,System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            绘制渐变椭圆
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">矩形</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillGradientPath(System.Int64,System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            填充渐变路径
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="points">点的集合</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillGradientPolygon(System.Int64,System.Int64,FaceCat.FCPoint[],System.Int32)">
            <summary>
            绘制渐变的多边形
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">点的集合</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillGradientRect(System.Int64,System.Int64,FaceCat.FCRect,System.Int32,System.Int32)">
            <summary>
            绘制渐变矩形
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">矩形</param>
            <param name="cornerRadius">圆角半径</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillPath(System.Int64)">
            <summary>
            填充路径
            </summary>
            <param name="dwPenColor">颜色</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillPie(System.Int64,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制扇形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillPolygon(System.Int64,FaceCat.FCPoint[])">
            <summary>
            填充多边形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="points">点的数组</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillRect(System.Int64,FaceCat.FCRect)">
            <summary>
            填充矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillRect(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            填充矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.fillRoundRect(System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            填充圆角矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
            <param name="cornerRadius">边角半径</param>
        </member>
        <member name="M:FaceCat.GdiPaint.getColor(System.Int64)">
            <summary>
            获取颜色
            </summary>
            <param name="dwPenColor">输入颜色</param>
            <returns>输出颜色</returns>
        </member>
        <member name="M:FaceCat.GdiPaint.getPaintColor(System.Int64)">
            <summary>
            获取要绘制的颜色
            </summary>
            <param name="dwPenColor">输入颜色</param>
            <returns>输出颜色</returns>
        </member>
        <member name="M:FaceCat.GdiPaint.getOffset">
            <summary>
            获取偏移
            </summary>
            <returns>偏移坐标</returns>
        </member>
        <member name="M:FaceCat.GdiPaint.rotate(FaceCat.FCPoint,FaceCat.FCPoint,System.Int32)">
            <summary>
            旋转角度
            </summary>
            <param name="op">圆心坐标</param>
            <param name="mp">点的坐标</param>
            <param name="angle">角度</param>
            <returns>结果坐标</returns>
        </member>
        <member name="M:FaceCat.GdiPaint.setClip(FaceCat.FCRect)">
            <summary>
            设置裁剪区域
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setLineCap(System.Int32,System.Int32)">
            <summary>
            设置直线两端的样式
            </summary>
            <param name="startLineCap">开始的样式</param>
            <param name="endLineCap">结束的样式</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setOffset(FaceCat.FCPoint)">
            <summary>
            设置偏移
            </summary>
            <param name="mp">偏移坐标</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setOpacity(System.Single)">
            <summary>
            设置透明度
            </summary>
            <param name="opacity">透明度</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setScaleFactor(System.Double,System.Double)">
            <summary>
            设置缩放因子
            </summary>
            <param name="scaleFactorX">横向因子</param>
            <param name="scaleFactorY">纵向因子</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setResourcePath(System.String)">
            <summary>
            设置资源的路径
            </summary>
            <param name="resourcePath">资源的路径</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setRotateAngle(System.Int32)">
            <summary>
            设置旋转角度
            </summary>
            <param name="rotateAngle">旋转角度</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setSmoothMode(System.Int32)">
            <summary>
            设置平滑模式
            </summary>
            <param name="smoothMode">平滑模式</param>
        </member>
        <member name="M:FaceCat.GdiPaint.setTextQuality(System.Int32)">
            <summary>
            设置文字的质量
            </summary>
            <param name="textQuality">文字质量</param>
        </member>
        <member name="M:FaceCat.GdiPaint.supportTransparent">
            <summary>
            设置是否支持透明色
            </summary>
            <returns>是否支持</returns>
        </member>
        <member name="M:FaceCat.GdiPaint.textSize(System.String,FaceCat.FCFont)">
            <summary>
            获取文字大小
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <returns>字体大小</returns>
        </member>
        <member name="M:FaceCat.GdiPaint.textSizeF(System.String,FaceCat.FCFont)">
            <summary>
            获取文字大小
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <returns>字体大小</returns>
        </member>
        <member name="T:FaceCat.FCTreeNode">
            <summary>
            树节点
            </summary>
        </member>
        <member name="T:FaceCat.FCGridControlCell">
            <summary>
            控件单元格
            </summary>
        </member>
        <member name="T:FaceCat.FCGridCell">
            <summary>
            单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCell.#ctor">
            <summary>
            创建单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCell.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCell.compareTo(FaceCat.FCGridCell)">
            <summary>
            单元格大小比较，用于排序
            </summary>
            <param name="cell">比较单元格</param>
            <returns>1:较大 0:相等 -1:较小</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.getPaintText">
            <summary>
            获取要绘制的文字
            </summary>
            <returns>要绘制的文字</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCGridCell.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCGridCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridCell.onAdd">
            <summary>
            添加单元格方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCell.onPaint(FaceCat.FCPaint,FaceCat.FCRect,FaceCat.FCRect,System.Boolean)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="rect">矩形</param>
            <param name="clipRect">裁剪矩形</param>
            <param name="isAlternate">是否交替行</param>
        </member>
        <member name="M:FaceCat.FCGridCell.onRemove">
            <summary>
            移除单元格方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCell.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCGridCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="P:FaceCat.FCGridCell.AllowEdit">
            <summary>
            获取或设置是否可编辑
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.ColSpan">
            <summary>
            获取或设置跨越的列数
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.Column">
            <summary>
            获取或设置所在列
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.Grid">
            <summary>
            获取或设置表格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.Name">
            <summary>
            获取或设置名称
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.Row">
            <summary>
            获取或设置所在行
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.RowSpan">
            <summary>
            获取或设置跨越的行数
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.Style">
            <summary>
            获取或设置样式
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.Tag">
            <summary>
            获取或设置TAG值
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCell.Text">
            <summary>
            获取或设置文字
            </summary>
        </member>
        <member name="M:FaceCat.FCGridControlCell.#ctor">
            <summary>
            创建单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridControlCell.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCGridControlCell.m_touchDownEvent">
            <summary>
            触摸按下事件
            </summary>
        </member>
        <member name="F:FaceCat.FCGridControlCell.m_touchMoveEvent">
            <summary>
            触摸移动事件
            </summary>
        </member>
        <member name="F:FaceCat.FCGridControlCell.m_touchUpEvent">
            <summary>
            触摸抬起事件
            </summary>
        </member>
        <member name="F:FaceCat.FCGridControlCell.m_touchWheelEvent">
            <summary>
            触摸滚轮事件
            </summary>
        </member>
        <member name="M:FaceCat.FCGridControlCell.getPaintText">
            <summary>
            获取要绘制的文字
            </summary>
            <returns>要绘制的文字</returns>
        </member>
        <member name="M:FaceCat.FCGridControlCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridControlCell.controlTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            控件触摸按下事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.controlTouchMove(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            控件触摸移动事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.controlToucheUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            控件触摸抬起事件
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.controlTouchWheel(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            控件触摸滚轮滚动事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onAdd">
            <summary>
            添加单元格方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onControlTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            控件触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onControlTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            控件触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onControlTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            控件触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onControlTouchWheel(FaceCat.FCTouchInfo)">
            <summary>
            控件触摸滚轮滚动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onPaint(FaceCat.FCPaint,FaceCat.FCRect,FaceCat.FCRect,System.Boolean)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="rect">矩形</param>
            <param name="clipRect">裁剪矩形</param>
            <param name="isAlternate">是否交替行</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onPaintControl(FaceCat.FCPaint,FaceCat.FCRect,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="rect">矩形</param>
            <param name="clipRect">裁剪矩形</param>
        </member>
        <member name="M:FaceCat.FCGridControlCell.onRemove">
            <summary>
            移除单元格方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGridControlCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="P:FaceCat.FCGridControlCell.Control">
            <summary>
            获取或设置控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.#ctor">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCTreeNode.m_nodes">
            <summary>
            子节点
            </summary>
        </member>
        <member name="F:FaceCat.FCTreeNode.m_text">
            <summary>
            文字
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.appendNode(FaceCat.FCTreeNode)">
            <summary>
            添加节点
            </summary>
            <param name="node">节点</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.checkChildNodes(FaceCat.ArrayList{FaceCat.FCTreeNode},System.Boolean)">
            <summary>
            选中所有子节点
            </summary>
            <param name="nodes">节点集合</param>
            <param name="isChecked">是否选中</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.clearNodes">
            <summary>
            清除所有节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.collapse">
            <summary>
            折叠节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.collapseAll">
            <summary>
            折叠所有节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.collapseChildNodes(FaceCat.ArrayList{FaceCat.FCTreeNode},System.Boolean)">
            <summary>
            折叠子节点
            </summary>
            <param name="nodes">节点集合</param>
            <param name="expendAll">是否折叠儿子节点</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.expend">
            <summary>
            展开节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.expendAll">
            <summary>
            展开所有节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.expendChildNodes(FaceCat.ArrayList{FaceCat.FCTreeNode},System.Boolean,System.Boolean)">
            <summary>
            展开所有的节点
            </summary>
            <param name="nodes">节点集合</param>
            <param name="parentExpened">父节点是否展开</param>
            <param name="expendAll">儿子节点是否展开</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.getChildNodes">
            <summary>
            获取子节点
            </summary>
            <returns>子节点</returns>
        </member>
        <member name="M:FaceCat.FCTreeNode.getLastNode(FaceCat.ArrayList{FaceCat.FCTreeNode})">
            <summary>
            获取最后节点的索引
            </summary>
            <param name="nodes">节点</param>
            <returns>索引</returns>
        </member>
        <member name="M:FaceCat.FCTreeNode.getNodeIndex(FaceCat.FCTreeNode)">
            <summary>
            获取节点的索引
            </summary>
            <param name="node">节点</param>
            <returns>索引</returns>
        </member>
        <member name="M:FaceCat.FCTreeNode.getPaintText">
            <summary>
            获取要绘制的文本
            </summary>
            <returns>要绘制的文本</returns>
        </member>
        <member name="M:FaceCat.FCTreeNode.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCTreeNode.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCTreeNode.insertNode(System.Int32,FaceCat.FCTreeNode)">
            <summary>
            插入节点
            </summary>
            <param name="index">索引</param>
            <param name="node">节点</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.isNodeVisible(FaceCat.FCTreeNode)">
            <summary>
            父节点是否可见
            </summary>
            <param name="node">节点</param>
            <returns>是否可见</returns>
        </member>
        <member name="M:FaceCat.FCTreeNode.onAddingNode(System.Int32)">
            <summary>
            添加节点
            </summary>
            <param name="index">行索引</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.onPaintCheckBox(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            绘制复选框
            </summary>
            <param name="paint">绘图对象</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.onPaintNode(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            绘制节点
            </summary>
            <param name="paint">绘图对象</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.onPaint(FaceCat.FCPaint,FaceCat.FCRect,FaceCat.FCRect,System.Boolean)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="rect">矩形</param>
            <param name="clipRect">裁剪矩形</param>
            <param name="isAlternate">是否交替行</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.onRemovingNode">
            <summary>
            移除节点方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTreeNode.removeNode(FaceCat.FCTreeNode)">
            <summary>
            移除节点
            </summary>
            <param name="node">节点</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCTreeNode.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="P:FaceCat.FCTreeNode.AllowDragIn">
            <summary>
            获取或设置是否可以拖入节点
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.AllowDragOut">
            <summary>
            获取或设置是否可以拖出节点
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.Checked">
            <summary>
            获取或设置复选框是否选中
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.Expended">
            <summary>
            获取或设置是否展开节点
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.Parent">
            <summary>
            获取或设置父节点
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.TargetColumn">
            <summary>
            获取或设置目标列
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.Indent">
            <summary>
            获取文字缩进距离
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.Tree">
            <summary>
            获取或设置树控件
            </summary>
        </member>
        <member name="P:FaceCat.FCTreeNode.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="T:FaceCat.FCTree">
            <summary>
            树控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.#ctor">
            <summary>
            创建树
            </summary>
        </member>
        <member name="F:FaceCat.FCTree.m_movingNode">
            <summary>
            正在移动的节点
            </summary>
        </member>
        <member name="F:FaceCat.FCTree.m_nodes">
            <summary>
            子节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.appendNode(FaceCat.FCTreeNode)">
            <summary>
            添加节点
            </summary>
            <param name="node">节点</param>
        </member>
        <member name="M:FaceCat.FCTree.clearNodes">
            <summary>
            清除所有节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.collapse">
            <summary>
            折叠节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.CollapseAll">
            <summary>
            折叠节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.expend">
            <summary>
            展开节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.expendAll">
            <summary>
            展开节点
            </summary>
        </member>
        <member name="M:FaceCat.FCTree.getChildNodes">
            <summary>
            获取子节点
            </summary>
            <returns>子节点</returns>
        </member>
        <member name="M:FaceCat.FCTree.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCTree.getNodeIndex(FaceCat.FCTreeNode)">
            <summary>
            获取节点的索引
            </summary>
            <param name="node">节点</param>
            <returns>索引</returns>
        </member>
        <member name="M:FaceCat.FCTree.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCTree.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCTree.insertNode(System.Int32,FaceCat.FCTreeNode)">
            <summary>
            插入节点
            </summary>
            <param name="index">索引</param>
            <param name="node">节点</param>
        </member>
        <member name="M:FaceCat.FCTree.onCellTouchDown(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸按下方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCTree.onCellTouchMove(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸移动方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCTree.onCellTouchUp(FaceCat.FCGridCell,FaceCat.FCTouchInfo)">
            <summary>
            单元格触摸抬起方法
            </summary>
            <param name="cell">单元格</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCTree.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCTree.onPaintEditTextBox(FaceCat.FCGridCell,FaceCat.FCPaint,FaceCat.FCRect,FaceCat.FCRect)">
            <summary>
            绘制编辑文本框
            </summary>
            <param name="cell">单元格</param>
            <param name="paint">绘图对象</param>
            <param name="rect">区域</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCTree.removeNode(FaceCat.FCTreeNode)">
            <summary>
            移除节点
            </summary>
            <param name="node">节点</param>
        </member>
        <member name="M:FaceCat.FCTree.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCTree.CheckBoxes">
            <summary>
            获取或设置是否在节点旁显示复选框
            </summary>
        </member>
        <member name="P:FaceCat.FCTree.CheckBoxSize">
            <summary>
            获取或设置复选框的大小
            </summary>
        </member>
        <member name="P:FaceCat.FCTree.CheckedImage">
            <summary>
            获取或设置复选框选中时的图片
            </summary>
        </member>
        <member name="P:FaceCat.FCTree.CollapsedNodeImage">
            <summary>
            获取或设置折叠节点的图片
            </summary>
        </member>
        <member name="P:FaceCat.FCTree.ExpendedNodeImage">
            <summary>
            获取或设置展开节点的图片
            </summary>
        </member>
        <member name="P:FaceCat.FCTree.NodeSize">
            <summary>
            获取或设置节点的大小
            </summary>
        </member>
        <member name="P:FaceCat.FCTree.SelectedNodes">
            <summary>
            获取或设置选中的节点
            </summary>
        </member>
        <member name="P:FaceCat.FCTree.UnCheckedImage">
            <summary>
            获取或设置复选框未选中时的图片
            </summary>
        </member>
        <member name="T:FaceCat.FCTabPageLayout">
            <summary>
            页的布局位置
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPageLayout.Bottom">
            <summary>
            下方
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPageLayout.Left">
            <summary>
            左侧
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPageLayout.Right">
            <summary>
            右侧
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPageLayout.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="T:FaceCat.FCTabControl">
            <summary>
            多页夹控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTabControl.#ctor">
            <summary>
            创建多页夹
            </summary>
        </member>
        <member name="F:FaceCat.FCTabControl.m_animationState">
            <summary>
            动画状态
            </summary>
        </member>
        <member name="F:FaceCat.FCTabControl.m_tabPages">
            <summary>
            所有页
            </summary>
        </member>
        <member name="F:FaceCat.FCTabControl.m_timerID">
            <summary>
            秒表ID
            </summary>
        </member>
        <member name="M:FaceCat.FCTabControl.addControl(FaceCat.FCView)">
            <summary>
            添加控件方法
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCTabControl.clearControls">
            <summary>
            清除控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTabControl.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTabControl.drawMoving">
            <summary>
            绘制移动
            </summary>
        </member>
        <member name="M:FaceCat.FCTabControl.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCTabControl.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCTabControl.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCTabControl.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCTabControl.getTabPages">
            <summary>
            获取多页夹列表
            </summary>
            <returns>多页夹列表</returns>
        </member>
        <member name="M:FaceCat.FCTabControl.insertControl(System.Int32,FaceCat.FCView)">
            <summary>
            插入控件
            </summary>
            <param name="index">索引</param>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCTabControl.onDragTabHeaderBegin(FaceCat.FCTabPage)">
            <summary>
            开始拖动页头
            </summary>
            <param name="tabPage">页</param>
        </member>
        <member name="M:FaceCat.FCTabControl.onDragTabHeaderEnd(FaceCat.FCTabPage)">
            <summary>
            结束拖动页头
            </summary>
            <param name="tabPage">页</param>
        </member>
        <member name="M:FaceCat.FCTabControl.onDraggingTabHeader(FaceCat.FCTabPage)">
            <summary>
            页头拖动中
            </summary>
            <param name="tabPage">页</param>
        </member>
        <member name="M:FaceCat.FCTabControl.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTabControl.onSelectedTabPageChanged">
            <summary>
            页改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTabControl.onTimer(System.Int32)">
            <summary>
            秒表方法
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCTabControl.removeControl(FaceCat.FCView)">
            <summary>
            移除控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:FaceCat.FCTabControl.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCTabControl.tabStyle(System.Int32,FaceCat.FCRect@,FaceCat.FCPadding@,FaceCat.FCPadding@,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,FaceCat.FCPoint@)">
            <summary>
            多页夹的样式
            </summary>
            <param name="layoutStyle"></param>
            <param name="bounds"></param>
            <param name="padding"></param>
            <param name="margin"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="tw"></param>
            <param name="th"></param>
            <param name="headerLocation"></param>
        </member>
        <member name="M:FaceCat.FCTabControl.update">
            <summary>
            重新布局
            </summary>
        </member>
        <member name="P:FaceCat.FCTabControl.Layout">
            <summary>
            获取或设置页的布局位置
            </summary>
        </member>
        <member name="P:FaceCat.FCTabControl.SelectedIndex">
            <summary>
            获取或设置选中的索引
            </summary>
        </member>
        <member name="P:FaceCat.FCTabControl.SelectedTabPage">
            <summary>
            获取选中的页
            </summary>
        </member>
        <member name="P:FaceCat.FCTabControl.UseAnimation">
            <summary>
            获取或设置是否使用动画
            </summary>
        </member>
        <member name="T:FaceCat.FCMenuItem">
            <summary>
            菜单项
            </summary>
        </member>
        <member name="M:FaceCat.FCMenuItem.#ctor">
            <summary>
            创建菜单项
            </summary>
        </member>
        <member name="M:FaceCat.FCMenuItem.#ctor(System.String)">
            <summary>
            创建菜单项
            </summary>
            <param name="text">文字</param>
        </member>
        <member name="F:FaceCat.FCMenuItem.m_items">
            <summary>
            所有菜单项
            </summary>
        </member>
        <member name="M:FaceCat.FCMenuItem.addItem(FaceCat.FCMenuItem)">
            <summary>
            添加子菜单项
            </summary>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.clearItems">
            <summary>
            清除所有的项
            </summary>
        </member>
        <member name="M:FaceCat.FCMenuItem.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCMenuItem.getItems">
            <summary>
            获取所有的项
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCMenuItem.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCMenuItem.insertItem(System.Int32,FaceCat.FCMenuItem)">
            <summary>
            插入项
            </summary>
            <param name="index">索引</param>
            <param name="item">菜单项</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.onAddingItem(System.Int32)">
            <summary>
            添加项
            </summary>
            <param name="index">行索引</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.onClick(FaceCat.FCTouchInfo)">
            <summary>
            点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法 
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪矩形</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.onRemovingItem">
            <summary>
            移除项方法
            </summary>
        </member>
        <member name="M:FaceCat.FCMenuItem.RemoveItem(FaceCat.FCMenuItem)">
            <summary>
            移除子菜单项
            </summary>
            <param name="item">子菜单项</param>
        </member>
        <member name="M:FaceCat.FCMenuItem.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCMenuItem.Checked">
            <summary>
            获取或设置是否选中
            </summary>
        </member>
        <member name="P:FaceCat.FCMenuItem.DropDownMenu">
            <summary>
            获取或设置下拉表格
            </summary>
        </member>
        <member name="P:FaceCat.FCMenuItem.ParentItem">
            <summary>
            获取或设置父菜单项
            </summary>
        </member>
        <member name="P:FaceCat.FCMenuItem.ParentMenu">
            <summary>
            获取或设置所在菜单
            </summary>
        </member>
        <member name="P:FaceCat.FCMenuItem.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="T:FaceCat.FCGridColumnSortMode">
            <summary>
            表格列排序方式
            </summary>
        </member>
        <member name="F:FaceCat.FCGridColumnSortMode.Asc">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:FaceCat.FCGridColumnSortMode.Desc">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:FaceCat.FCGridColumnSortMode.None">
            <summary>
            不排序
            </summary>
        </member>
        <member name="T:FaceCat.FCGridSelectionMode">
            <summary>
            表格选中模式
            </summary>
        </member>
        <member name="F:FaceCat.FCGridSelectionMode.SelectCell">
            <summary>
            选中单元格
            </summary>
        </member>
        <member name="F:FaceCat.FCGridSelectionMode.SelectFullColumn">
            <summary>
            选中整列
            </summary>
        </member>
        <member name="F:FaceCat.FCGridSelectionMode.SelectFullRow">
            <summary>
            选中整行
            </summary>
        </member>
        <member name="F:FaceCat.FCGridSelectionMode.SelectNone">
            <summary>
            不选中
            </summary>
        </member>
        <member name="T:FaceCat.FCGridCellEditMode">
            <summary>
            单元格编辑模式
            </summary>
        </member>
        <member name="F:FaceCat.FCGridCellEditMode.DoubleClick">
            <summary>
            双击
            </summary>
        </member>
        <member name="F:FaceCat.FCGridCellEditMode.None">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:FaceCat.FCGridCellEditMode.SingleClick">
            <summary>
            单击
            </summary>
        </member>
        <member name="T:FaceCat.FCGridBand">
            <summary>
            表格带
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBand.#ctor">
            <summary>
            创建表格带
            </summary>
        </member>
        <member name="F:FaceCat.FCGridBand.m_bands">
            <summary>
            子表格带
            </summary>
        </member>
        <member name="F:FaceCat.FCGridBand.m_columns">
            <summary>
            子表格列
            </summary>
        </member>
        <member name="F:FaceCat.FCGridBand.m_beginWidth">
            <summary>
            起始宽度
            </summary>
        </member>
        <member name="F:FaceCat.FCGridBand.m_resizeState">
            <summary>
            调整大小状态，1:左侧 2:右侧
            </summary>
        </member>
        <member name="F:FaceCat.FCGridBand.m_touchDownPoint">
            <summary>
            触摸按下时的坐标
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBand.AddBand(FaceCat.FCGridBand)">
            <summary>
            添加表格带
            </summary>
            <param name="band">表格带</param>
        </member>
        <member name="M:FaceCat.FCGridBand.AddColumn(FaceCat.FCBandedFCGridColumn)">
            <summary>
            添加表格列
            </summary>
            <param name="column">表格列</param>
        </member>
        <member name="M:FaceCat.FCGridBand.ClearBands">
            <summary>
            清除表格带
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBand.clearColumns">
            <summary>
            清除列
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBand.getAllChildColumns">
            <summary>
            获取所有的子表格列
            </summary>
            <returns>列头集合</returns>
        </member>
        <member name="M:FaceCat.FCGridBand.getBands">
            <summary>
            获取表格带列表
            </summary>
            <returns>表格带集合</returns>
        </member>
        <member name="M:FaceCat.FCGridBand.getColumns">
            <summary>
            获取列头
            </summary>
            <returns>列头集合</returns>
        </member>
        <member name="M:FaceCat.FCGridBand.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCGridBand.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCGridBand.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCGridBand.delete">
            <summary>
            销毁控件
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBand.insertBand(System.Int32,FaceCat.FCGridBand)">
            <summary>
            插入表格带
            </summary>
            <param name="index">索引</param>
            <param name="band">表格带</param>
        </member>
        <member name="M:FaceCat.FCGridBand.insertColumn(System.Int32,FaceCat.FCBandedFCGridColumn)">
            <summary>
            插入表格列
            </summary>
            <param name="index">索引</param>
            <param name="column">表格列</param>
        </member>
        <member name="M:FaceCat.FCGridBand.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridBand.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridBand.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridBand.removeBand(FaceCat.FCGridBand)">
            <summary>
            移除表格带
            </summary>
            <param name="band">表格带</param>
        </member>
        <member name="M:FaceCat.FCGridBand.removeColumn(FaceCat.FCBandedFCGridColumn)">
            <summary>
            移除表格列
            </summary>
            <param name="column">表格列</param>
        </member>
        <member name="M:FaceCat.FCGridBand.resetHeaderLayout">
            <summary>
            重置列头布局
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBand.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCGridBand.AllowResize">
            <summary>
            获取或设置是否可以调整大小
            </summary>
        </member>
        <member name="P:FaceCat.FCGridBand.Grid">
            <summary>
            获取或设置表格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridBand.Index">
            <summary>
            获取或设置索引
            </summary>
        </member>
        <member name="P:FaceCat.FCGridBand.ParentBand">
            <summary>
            获取或设置父表格带
            </summary>
        </member>
        <member name="T:FaceCat.CVariable">
            <summary>
            变量
            </summary>
        </member>
        <member name="M:FaceCat.CVariable.#ctor(FaceCat.FCScript)">
            <summary>
            创建变量
            </summary>
            <param name="indicator">指标</param>
        </member>
        <member name="F:FaceCat.CVariable.m_barShape">
            <summary>
            柱状图
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_candleShape">
            <summary>
            K线
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_expression">
            <summary>
            表达式
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_field">
            <summary>
            字段
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_fieldIndex">
            <summary>
            字段的索引
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_fieldText">
            <summary>
            显示字段
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_funcName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_functionID">
            <summary>
            方法的编号
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_line">
            <summary>
            行数
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_indicator">
            <summary>
            指标
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_polylineShape">
            <summary>
            折线图
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_name">
            <summary>
            键值
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_parameters">
            <summary>
            变量
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_splitExpression">
            <summary>
            分割后的表达式
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_tempFields">
            <summary>
            临时字段
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_tempFieldsIndex">
            <summary>
            置临时字段的索引
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_textShape">
            <summary>
            文字
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_type">
            <summary>
            类型
            语句中 0:使用别的变量字段 1:使用自己的字段
            变量中 0:方法 1:直接计算 2:直接取值 3:固定值 4:临时变量
            </summary>
        </member>
        <member name="F:FaceCat.CVariable.m_value">
            <summary>
            常量数值
            </summary>
        </member>
        <member name="M:FaceCat.CVariable.createTempFields(System.Int32)">
            <summary>
            创建空的字段
            </summary>
            <param name="count">数量</param>
        </member>
        <member name="T:FaceCat.CMathElement">
            <summary>
            算术单元
            </summary>
        </member>
        <member name="F:FaceCat.CMathElement.m_type">
            <summary>
            类型
            0:操作符号 1:常量数值 2:变量 3:#
            </summary>
        </member>
        <member name="F:FaceCat.CMathElement.m_value">
            <summary>
            常量数值
            </summary>
        </member>
        <member name="F:FaceCat.CMathElement.m_var">
            <summary>
            变量
            </summary>
        </member>
        <member name="T:FaceCat.CVar">
            <summary>
            临时变量
            </summary>
        </member>
        <member name="M:FaceCat.CVar.#ctor">
            <summary>
            创建变量
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:FaceCat.CVar.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.CVar.m_list">
            <summary>
            列表
            </summary>
        </member>
        <member name="F:FaceCat.CVar.m_map">
            <summary>
            哈希表
            </summary>
        </member>
        <member name="F:FaceCat.CVar.m_num">
            <summary>
            数值
            </summary>
        </member>
        <member name="F:FaceCat.CVar.m_str">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:FaceCat.CVar.m_type">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:FaceCat.CVar.m_parent">
            <summary>
            上级变量
            </summary>
        </member>
        <member name="M:FaceCat.CVar.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.CVar.getText(FaceCat.FCScript,FaceCat.CVariable)">
            <summary>
            获取文字
            </summary>
            <param name="indicator">指标</param>
            <param name="name">名称</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.CVar.getValue(FaceCat.FCScript,FaceCat.CVariable)">
            <summary>
            获取值
            </summary>
            <param name="indicator">指标</param>
            <param name="name">名称</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.CVar.onCreate(FaceCat.FCScript,FaceCat.CVariable,FaceCat.CVariable)">
            <summary>
            创建变量
            </summary>
            <param name="indicator">指标</param>
            <param name="name">名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.CVar.setValue(FaceCat.FCScript,FaceCat.CVariable,FaceCat.CVariable)">
            <summary>
            设置值
            </summary>
            <param name="indicator">指标</param>
            <param name="name">名称</param>
            <param name="value">值</param>
        </member>
        <member name="T:FaceCat.CVarFactory">
            <summary>
            临时变量工厂
            </summary>
        </member>
        <member name="M:FaceCat.CVarFactory.createVar">
            <summary>
            创建变量
            </summary>
            <returns>变量</returns>
        </member>
        <member name="T:FaceCat.FCScript">
            <summary>
            指标公式扩展
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_ADD">
            <summary>
            加号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_AND">
            <summary>
            与号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_DIVIDE">
            <summary>
            除号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_E">
            <summary>
            等号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_GT">
            <summary>
            大于号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_GTE">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_LB">
            <summary>
            左括号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_LT">
            <summary>
            小于号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_LTE">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_MULTIPLY">
            <summary>
            乘号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_NE">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_NULL">
            <summary>
            无效
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_OR">
            <summary>
            或号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_RB">
            <summary>
            右括号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_SUB">
            <summary>
            减号
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.OP_MOD">
            <summary>
            取模
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.VARIABLE">
            <summary>
            方法标识字符串
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.VARIABLE2">
            <summary>
            标识字符串2
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.VARIABLE3">
            <summary>
            标识字符串3
            </summary>
        </member>
        <member name="M:FaceCat.FCScript.#ctor">
            <summary>
            创建指标
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_break">
            <summary>
            跳出标识
            </summary>
        </member>
        <member name="M:FaceCat.FCScript.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_defineParams">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.FUNCTIONS">
            <summary>
            所有方法
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.FUNCTIONS_FIELD">
            <summary>
            带字段方法
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.FUNCTIONID_FUNCVAR">
            <summary>
            定义同步变量的ID
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.FUNCTIONID_FUNCTION">
            <summary>
            定义方法的ID
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.FUNCTIONID_VAR">
            <summary>
            定义变量的ID
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_functions">
            <summary>
            方法列表
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_functionsMap">
            <summary>
            方法的哈希表
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_lines">
            <summary>
            语句集合
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_lock">
            <summary>
            锁
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_random">
            <summary>
            随机数
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_result">
            <summary>
            结果
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_resultVar">
            <summary>
            复合结果
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_tempFunctions">
            <summary>
            方法变量表
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_tempVariables">
            <summary>
            变量表
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_tempVars">
            <summary>
            临时变量
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_variables">
            <summary>
            方法缓存
            </summary>
        </member>
        <member name="F:FaceCat.FCScript.m_index">
            <summary>
            当前的数据索引
            </summary>
        </member>
        <member name="M:FaceCat.FCScript.addFunction(FaceCat.CFunction)">
            <summary>
            添加方法
            </summary>
            <param name="function">方法</param>
        </member>
        <member name="M:FaceCat.FCScript.analysisVariables(System.String@,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            分析语句中包含的方法和变量
            </summary>
        </member>
        <member name="M:FaceCat.FCScript.analysisScriptLine(System.String)">
            <summary>
            加载脚本行
            </summary>
            <param name="line">脚本行</param>
        </member>
        <member name="M:FaceCat.FCScript.calculate(FaceCat.CMathElement[])">
            <summary>
            对表达式进行求值，求值之前会先进行语法校验
            </summary>
            <param name="expr">要求值的表达式</param>
            <returns>求值结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.callFunction(System.String)">
            <summary>
            调用方法
            </summary>
            <param name="funcName">方法名称</param>
            <returns>返回值</returns>
        </member>
        <member name="M:FaceCat.FCScript.callFunction(FaceCat.CVariable)">
            <summary>
            调用方法
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.clear">
            <summary>
            清除元素
            </summary>
        </member>
        <member name="M:FaceCat.FCScript.copyTempVar(FaceCat.CVar)">
            <summary>
            拷贝临时变量
            </summary>
            <param name="var">变量</param>
            <returns>新的变量</returns>
        </member>
        <member name="M:FaceCat.FCScript.createIndicator">
            <summary>
            创建指标
            </summary>
            <returns>指标</returns>
        </member>
        <member name="M:FaceCat.FCScript.deleteTempVars">
            <summary>
            删除临时变量
            </summary>
            <param name="var">变量</param>
        </member>
        <member name="M:FaceCat.FCScript.deleteTempVars(FaceCat.CVariable)">
            <summary>
            删除临时变量
            </summary>
            <param name="var">变量</param>
        </member>
        <member name="M:FaceCat.FCScript.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCScript.getColor(System.String)">
            <summary>
            根据字符串获取颜色
            </summary>
            <param name="strColor">字符串</param>
            <returns>颜色</returns>
        </member>
        <member name="M:FaceCat.FCScript.getDatas(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            从数据源中获取计算指标需要的MATH_STRUCT结构
            </summary>
            <param name="fieldIndex">字段</param>
            <param name="mafieldIndex">保存MA值字段</param>
            <param name="index">数据索引</param>
            <param name="n">周期</param>
            <returns>MATH_STRUCT结构</returns>
        </member>
        <member name="M:FaceCat.FCScript.getFunctions">
            <summary>
            获取所有的方法
            </summary>
            <returns>方法列表</returns>
        </member>
        <member name="M:FaceCat.FCScript.getLineWidth(System.String)">
            <summary>
            获取线的宽度
            </summary>
            <param name="strLine">线的描述</param>
            <returns>线宽</returns>
        </member>
        <member name="M:FaceCat.FCScript.getMiddleScript(System.String,FaceCat.ArrayList{System.String})">
            <summary>
            获取中间脚本
            </summary>
            <param name="script">脚本</param>
            <param name="lines">行</param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCScript.getOperator(System.String)">
            <summary>
            获取操作符号
            </summary>
            <param name="op">字符串</param>
            <returns>操作符号</returns>
        </member>
        <member name="M:FaceCat.FCScript.getShapes">
            <summary>
            获取所有的图形
            </summary>
            <returns>获取所有的图形</returns>
        </member>
        <member name="M:FaceCat.FCScript.getText(FaceCat.CVariable)">
            <summary>
            获取文本
            </summary>
            <param name="var">变量</param>
            <returns>文本</returns>
        </member>
        <member name="M:FaceCat.FCScript.getValue(FaceCat.CVariable)">
            <summary>
            获取数值
            </summary>
            <param name="var">变量</param>
            <returns>运算结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.getVariable(System.String)">
            <summary>
            获取变量
            </summary>
            <param name="name">名称</param>
            <returns>变量</returns>
        </member>
        <member name="M:FaceCat.FCScript.onCalculate(System.Int32)">
            <summary>
            计算指标
            </summary>
            <param name="index">索引</param>
            <returns>是否计算成功</returns>
        </member>
        <member name="M:FaceCat.FCScript.removeFunction(FaceCat.CFunction)">
            <summary>
            移除方法
            </summary>
            <param name="function">方法</param>
        </member>
        <member name="M:FaceCat.FCScript.replace(System.String)">
            <summary>
            替换方法和变量
            </summary>
            <param name="parameter">参数</param>
            <returns>替换后语句</returns>
        </member>
        <member name="M:FaceCat.FCScript.setSourceField(System.String,System.Int32)">
            <summary>
            设置数据源字段
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.FCScript.setSourceValue(System.Int32,System.String,System.Double)">
            <summary>
            设置数据源值
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.FCScript.setVariable(FaceCat.CVariable,FaceCat.CVariable)">
            <summary>
            设置变量的值
            </summary>
            <param name="variable">变量</param>
            <param name="parameter">值</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.splitExpression(System.String)">
            <summary>
            把表达式拆分成字符串数组，用于后面的检查和求值
            </summary>
            <param name="expression">表达式</param>
            <returns>从左到右返回从下标0开始的字符串数组</returns>
        </member>
        <member name="M:FaceCat.FCScript.splitExpression2(System.String)">
            <summary>
            把表达式拆分成字符串数组，用于后面的检查和求值
            </summary>
            <param name="expression">表达式</param>
            <returns>从左到右返回从下标0开始的字符串数组</returns>
        </member>
        <member name="M:FaceCat.FCScript.ABS(FaceCat.CVariable)">
            <summary>
            计算绝对值
            </summary>
            <param name="var">变量</param>
            <returns>绝对值</returns>
        </member>
        <member name="M:FaceCat.FCScript.AMA(FaceCat.CVariable)">
            <summary>
            计算自适应均线值
            </summary>
            <param name="var">变量</param>
            <returns>自适应均线值</returns>
        </member>
        <member name="M:FaceCat.FCScript.ACOS(FaceCat.CVariable)">
            <summary>
            计算反余弦值
            </summary>
            <param name="var">变量</param>
            <returns>反余弦值</returns>
        </member>
        <member name="M:FaceCat.FCScript.ASIN(FaceCat.CVariable)">
            <summary>
            计算反正弦值
            </summary>
            <param name="var">变量</param>
            <returns>反正弦值</returns>
        </member>
        <member name="M:FaceCat.FCScript.ATAN(FaceCat.CVariable)">
            <summary>
            计算反正切值
            </summary>
            <param name="var">变量</param>
            <returns>反正切值</returns>
        </member>
        <member name="M:FaceCat.FCScript.AVEDEV(FaceCat.CVariable)">
            <summary>
            计算平均绝对偏差
            </summary>
            <param name="var">变量</param>
            <returns>平均绝对偏差</returns>
        </member>
        <member name="M:FaceCat.FCScript.BARSCOUNT(FaceCat.CVariable)">
            <summary>
            计算数据条目
            </summary>
            <param name="var">变量</param>
            <returns>数据条目</returns>
        </member>
        <member name="M:FaceCat.FCScript.BARSLAST(FaceCat.CVariable)">
            <summary>
            计算上一次条件成立到当前的周期数
            </summary>
            <param name="var">变量</param>
            <returns>周期数</returns>
        </member>
        <member name="M:FaceCat.FCScript.BETWEEN(FaceCat.CVariable)">
            <summary>
            判断表达式
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.BREAK(FaceCat.CVariable)">
            <summary>
            跳出循环
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.CEILING(FaceCat.CVariable)">
            <summary>
            计算向上接近的整数
            </summary>
            <param name="var">变量</param>
            <returns>向上接近的整数</returns>
        </member>
        <!-- 对于成员“M:FaceCat.FCScript.CHUNK(FaceCat.CVariable)”忽略有格式错误的 XML 注释 -->
        <member name="M:FaceCat.FCScript.CONTINUE(FaceCat.CVariable)">
            <summary>
            继续循环
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.COS(FaceCat.CVariable)">
            <summary>
            计算余弦值
            </summary>
            <param name="var">变量</param>
            <returns>余弦值</returns>
        </member>
        <member name="M:FaceCat.FCScript.COUNT(FaceCat.CVariable)">
            <summary>
            统计满足条件的周期数
            </summary>
            <param name="var">变量</param>
            <returns>周期数</returns>
        </member>
        <member name="M:FaceCat.FCScript.CROSS(FaceCat.CVariable)">
            <summary>
            判断是否穿越
            </summary>
            <param name="var">变量</param>
            <returns>穿越:1 不穿越:0</returns>
        </member>
        <member name="M:FaceCat.FCScript.CURRBARSCOUNT(FaceCat.CVariable)">
            <summary>
            获取当前数据索引
            </summary>
            <param name="var">变量</param>
            <returns>数据索引</returns>
        </member>
        <member name="M:FaceCat.FCScript.DATE(FaceCat.CVariable)">
            <summary>
            取得该周期从1900以来的的年月日.
            </summary>
            <param name="var">变量</param>
            <returns>年月日</returns>
        </member>
        <member name="M:FaceCat.FCScript.DAY(FaceCat.CVariable)">
            <summary>
            返回日期
            </summary>
            <param name="var">变量</param>
            <returns>日期</returns>
        </member>
        <member name="M:FaceCat.FCScript.DELETE(FaceCat.CVariable)">
            <summary>
            删除变量
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.DMA(FaceCat.CVariable)">
            <summary>
            计算动态移动平均
            </summary>
            <param name="var">变量</param>
            <returns>动态移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.DOTIMES(FaceCat.CVariable)">
            <summary>
            循环执行一定次数
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCScript.DOWHILE(FaceCat.CVariable)">
            <summary>
            执行DOWHILE循环
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCScript.DOWNNDAY(FaceCat.CVariable)">
            <summary>
            返回是否连跌周期数
            </summary>
            <param name="var">变量</param>
            <returns>是否连跌周期数</returns>
        </member>
        <member name="M:FaceCat.FCScript.DRAWICON(FaceCat.CVariable)">
            <summary>
            绘制点图
            </summary>
            <param name="var">变量</param>
            <returns>0</returns>
        </member>
        <member name="M:FaceCat.FCScript.DRAWKLINE(FaceCat.CVariable)">
            <summary>
            绘制K线
            </summary>
            <param name="var">变量</param>
            <returns>0</returns>
        </member>
        <member name="M:FaceCat.FCScript.DRAWNULL(FaceCat.CVariable)">
            <summary>
            返回无效数
            </summary>
            <param name="var">变量</param>
            <returns>无效数</returns>
        </member>
        <member name="M:FaceCat.FCScript.DRAWTEXT(FaceCat.CVariable)">
            <summary>
            绘制文字
            </summary>
            <param name="var">变量</param>
            <returns>0</returns>
        </member>
        <member name="M:FaceCat.FCScript.EXIST(FaceCat.CVariable)">
            <summary>
            判断是否存在
            </summary>
            <param name="var">变量</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:FaceCat.FCScript.EMA(FaceCat.CVariable)">
            <summary>
            计算指数移动平均
            </summary>
            <param name="var">变量</param>
            <returns>指数移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.EVERY(FaceCat.CVariable)">
            <summary>
            判断是否一直存在
            </summary>
            <param name="var">变量</param>
            <returns>是否一直存在</returns>
        </member>
        <member name="M:FaceCat.FCScript.EXPMEMA(FaceCat.CVariable)">
            <summary>
            计算指数平滑移动平均
            </summary>
            <param name="var">变量</param>
            <returns>指数平滑移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.EXP(FaceCat.CVariable)">
            <summary>
            计算e的X次幂
            </summary>
            <param name="var">变量</param>
            <returns>e的X次幂</returns>
        </member>
        <member name="M:FaceCat.FCScript.FLOOR(FaceCat.CVariable)">
            <summary>
            计算向下接近的整数
            </summary>
            <param name="var">变量</param>
            <returns>向下接近的整数</returns>
        </member>
        <member name="M:FaceCat.FCScript.FOR(FaceCat.CVariable)">
            <summary>
            执行FOR循环
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCScript.FUNCTION(FaceCat.CVariable)">
            <summary>
            执行方法
            </summary>
            <param name="var">变量</param>
            <returns>返回值</returns>
        </member>
        <member name="M:FaceCat.FCScript.FUNCVAR(FaceCat.CVariable)">
            <summary>
            定义变量
            </summary>
            <param name="var">变量</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCScript.GET(FaceCat.CVariable)">
            <summary>
            获取变量的数值
            </summary>
            <param name="var">变量</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCScript.HHV(FaceCat.CVariable)">
            <summary>
            计算指定字段一段区间内的最大值
            </summary>
            <param name="var">变量</param>
            <returns>最大值</returns>
        </member>
        <member name="M:FaceCat.FCScript.HHVBARS(FaceCat.CVariable)">
            <summary>
            计算指定字段一段区间内的最大值距今天的天数
            </summary>
            <param name="var">变量</param>
            <returns>天数</returns>
        </member>
        <member name="M:FaceCat.FCScript.HOUR(FaceCat.CVariable)">
            <summary>
            返回小时
            </summary>
            <param name="var">变量</param>
            <returns>小时</returns>
        </member>
        <member name="M:FaceCat.FCScript.IF(FaceCat.CVariable)">
            <summary>
            选择函数
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.IFN(FaceCat.CVariable)">
            <summary>
            反选择函数
            </summary>
            <param name="var">变量</param>
            <returns>反选择结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.INTPART(FaceCat.CVariable)">
            <summary>
            计算沿X绝对值减小方向最接近的整数
            </summary>
            <param name="var">变量</param>
            <returns>最接近的整数</returns>
        </member>
        <member name="M:FaceCat.FCScript.LAST(FaceCat.CVariable)">
            <summary>
            判断是否持续存在
            </summary>
            <param name="var">变量</param>
            <returns>是否持续存在</returns>
        </member>
        <member name="M:FaceCat.FCScript.LLV(FaceCat.CVariable)">
            <summary>
            计算指定字段一段区间内的最小值
            </summary>
            <param name="var">变量</param>
            <returns>最小值</returns>
        </member>
        <member name="M:FaceCat.FCScript.LLVBARS(FaceCat.CVariable)">
            <summary>
            计算指定字段一段区间内的最小值距离今天的天数
            </summary>
            <param name="var">变量</param>
            <returns>天数</returns>
        </member>
        <member name="M:FaceCat.FCScript.LOG(FaceCat.CVariable)">
            <summary>
            计算常用对数
            </summary>
            <param name="var">变量</param>
            <returns>常用对数</returns>
        </member>
        <member name="M:FaceCat.FCScript.MA(FaceCat.CVariable)">
            <summary>
            计算简单移动平均
            </summary>
            <param name="var">变量</param>
            <returns>简单移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAX(FaceCat.CVariable)">
            <summary>
            计算最大值
            </summary>
            <param name="var">变量</param>
            <returns>最大值</returns>
        </member>
        <member name="M:FaceCat.FCScript.MEMA(FaceCat.CVariable)">
            <summary>
            计算指数移动平均
            </summary>
            <param name="var">变量</param>
            <returns>指数移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.MIN(FaceCat.CVariable)">
            <summary>
            计算最小值
            </summary>
            <param name="var">变量</param>
            <returns>最小百货值</returns>
        </member>
        <member name="M:FaceCat.FCScript.MINUTE(FaceCat.CVariable)">
            <summary>
            返回分钟
            </summary>
            <param name="var">变量</param>
            <returns>分钟</returns>
        </member>
        <member name="M:FaceCat.FCScript.MOD(FaceCat.CVariable)">
            <summary>
            计算模
            </summary>
            <param name="var">变量</param>
            <returns>模</returns>
        </member>
        <member name="M:FaceCat.FCScript.MONTH(FaceCat.CVariable)">
            <summary>
            返回月份
            </summary>
            <param name="var">变量</param>
            <returns>月份</returns>
        </member>
        <member name="M:FaceCat.FCScript.NDAY(FaceCat.CVariable)">
            <summary>
            返回是否持续存在X>Y
            </summary>
            <param name="var">变量</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:FaceCat.FCScript.NOT(FaceCat.CVariable)">
            <summary>
            当值为0时返回1,否则返回0
            </summary>
            <param name="var">变量</param>
            <returns>1或0</returns>
        </member>
        <member name="M:FaceCat.FCScript.POLYLINE(FaceCat.CVariable)">
            <summary>
            添加线条
            </summary>
            <param name="var">变量</param>
            <returns>0</returns>
        </member>
        <member name="M:FaceCat.FCScript.POW(FaceCat.CVariable)">
            <summary>
            计算次幂
            </summary>
            <param name="var">变量</param>
            <returns>次幂</returns>
        </member>
        <member name="M:FaceCat.FCScript.RAND(FaceCat.CVariable)">
            <summary>
            获取随机数
            </summary>
            <param name="var">变量</param>
            <returns>随机数</returns>
        </member>
        <member name="M:FaceCat.FCScript.REF(FaceCat.CVariable)">
            <summary>
            获取前推周期数值
            </summary>
            <param name="var">变量</param>
            <returns>前推周期数值</returns>
        </member>
        <member name="M:FaceCat.FCScript.RETURN(FaceCat.CVariable)">
            <summary>
            返回值
            </summary>
            <param name="var">变量</param>
            <returns>值</returns>
        </member>
        <member name="M:FaceCat.FCScript.REVERSE(FaceCat.CVariable)">
            <summary>
            取反
            </summary>
            <param name="var">变量</param>
            <returns>反值</returns>
        </member>
        <member name="M:FaceCat.FCScript.ROUND(FaceCat.CVariable)">
            <summary>
            计算四舍五入
            </summary>
            <param name="var">变量</param>
            <returns>四舍五入值</returns>
        </member>
        <member name="M:FaceCat.FCScript.SAR(FaceCat.CVariable)">
            <summary>
            计算抛物线指标
            </summary>
            <param name="var">变量</param>
            <returns>抛物线指标</returns>
        </member>
        <member name="M:FaceCat.FCScript.SET(FaceCat.CVariable)">
            <summary>
            设置变量的值
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCScript.SIGN(FaceCat.CVariable)">
            <summary>
            如果大于0则返回1,如果小于0则返回－1，否则返回0
            </summary>
            <param name="var">变量</param>
            <returns>1,0,-1</returns>
        </member>
        <member name="M:FaceCat.FCScript.SIN(FaceCat.CVariable)">
            <summary>
            计算正弦值
            </summary>
            <param name="var">变量</param>
            <returns>正弦值</returns>
        </member>
        <member name="M:FaceCat.FCScript.SMA(FaceCat.CVariable)">
            <summary>
            计算移动平均
            </summary>
            <param name="var">变量</param>
            <returns>移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.SQRT(FaceCat.CVariable)">
            <summary>
            计算平方根
            </summary>
            <param name="var">变量</param>
            <returns>平方根</returns>
        </member>
        <member name="M:FaceCat.FCScript.SQUARE(FaceCat.CVariable)">
            <summary>
            计算平方
            </summary>
            <param name="var">变量</param>
            <returns>平方</returns>
        </member>
        <member name="M:FaceCat.FCScript.STD(FaceCat.CVariable)">
            <summary>
            计算标准差
            </summary>
            <param name="var">变量</param>
            <returns>标准差</returns>
        </member>
        <member name="M:FaceCat.FCScript.STICKLINE(FaceCat.CVariable)">
            <summary>
            添加柱状图
            </summary>
            <param name="var">变量</param>
            <returns>0</returns>
        </member>
        <member name="M:FaceCat.FCScript.SUM(FaceCat.CVariable)">
            <summary>
            计算求和
            </summary>
            <param name="var">变量</param>
            <returns>和</returns>
        </member>
        <member name="M:FaceCat.FCScript.TAN(FaceCat.CVariable)">
            <summary>
            计算正切值
            </summary>
            <param name="var">变量</param>
            <returns>正切值</returns>
        </member>
        <member name="M:FaceCat.FCScript.TIME(FaceCat.CVariable)">
            <summary>
            取得该周期的时分,适用于日线以下周期
            </summary>
            <param name="var">变量</param>
            <returns>时分</returns>
        </member>
        <member name="M:FaceCat.FCScript.TIME2(FaceCat.CVariable)">
            <summary>
            取得该周期的时分秒,适用于日线以下周期.
            </summary>
            <param name="var">变量</param>
            <returns>时分秒</returns>
        </member>
        <member name="M:FaceCat.FCScript.TMA(FaceCat.CVariable)">
            <summary>
            计算递归移动平均
            </summary>
            <param name="var">变量</param>
            <returns>递归移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.UPNDAY(FaceCat.CVariable)">
            <summary>
            返回是否连涨周期数
            </summary>
            <param name="var">变量</param>
            <returns>是否连涨周期数</returns>
        </member>
        <member name="M:FaceCat.FCScript.VALUEWHEN(FaceCat.CVariable)">
            <summary>
            当条件成立时,取当前值,否则取上个值
            </summary>
            <param name="var">变量</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCScript.VAR(FaceCat.CVariable)">
            <summary>
            定义变量
            </summary>
            <param name="var">变量</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCScript.WHILE(FaceCat.CVariable)">
            <summary>
            执行WHILE循环
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCScript.WMA(FaceCat.CVariable)">
            <summary>
            计算加权移动平均线
            </summary>
            <param name="var">变量</param>
            <returns>加权移动平均</returns>
        </member>
        <member name="M:FaceCat.FCScript.YEAR(FaceCat.CVariable)">
            <summary>
            计算年份
            </summary>
            <param name="var">变量</param>
            <returns>年份</returns>
        </member>
        <member name="M:FaceCat.FCScript.ZIG(FaceCat.CVariable)">
            <summary>
            计算之字反转
            </summary>
            <param name="var">变量</param>
            <returns>之字反转</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_CONTACT(FaceCat.CVariable)">
            <summary>
            连接字符串
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_FIND(FaceCat.CVariable)">
            <summary>
            查找字符串中出现文字的位置
            </summary>
            <param name="var">变量</param>
            <returns>位置</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_EQUALS(FaceCat.CVariable)">
            <summary>
            比较字符串是否相等
            </summary>
            <param name="var">变量</param>
            <returns>位置</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_FINDLAST(FaceCat.CVariable)">
            <summary>
            查找字符串中最后出现文字的位置
            </summary>
            <param name="var">变量</param>
            <returns>位置</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_LENGTH(FaceCat.CVariable)">
            <summary>
            获取字符串的长度
            </summary>
            <param name="var">变量</param>
            <returns>长度</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_SUBSTR(FaceCat.CVariable)">
            <summary>
            截取字符串
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_REPLACE(FaceCat.CVariable)">
            <summary>
            替换字符串
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_SPLIT(FaceCat.CVariable)">
            <summary>
            切割字符串
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_TOLOWER(FaceCat.CVariable)">
            <summary>
            字符串转化为小写
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.STR_TOUPPER(FaceCat.CVariable)">
            <summary>
            字符串转化为大写
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.LIST_ADD(FaceCat.CVariable)">
            <summary>
            添加数据到集合
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.LIST_CLEAR(FaceCat.CVariable)">
            <summary>
            清除集合
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.LIST_GET(FaceCat.CVariable)">
            <summary>
            从集合中获取数据
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.LIST_INSERT(FaceCat.CVariable)">
            <summary>
            向集合中插入数据
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.LIST_REMOVE(FaceCat.CVariable)">
            <summary>
            从集合中移除数据
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.LIST_SIZE(FaceCat.CVariable)">
            <summary>
            获取集合的大小
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAP_CLEAR(FaceCat.CVariable)">
            <summary>
            清除哈希表
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAP_CONTAINSKEY(FaceCat.CVariable)">
            <summary>
            哈希表是否包含键
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAP_GET(FaceCat.CVariable)">
            <summary>
            获取哈希表的值
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAP_GETKEYS(FaceCat.CVariable)">
            <summary>
            获取哈希表的键
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAP_REMOVE(FaceCat.CVariable)">
            <summary>
            从哈希表中移除
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAP_SET(FaceCat.CVariable)">
            <summary>
            向哈希表中添加数据
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCScript.MAP_SIZE(FaceCat.CVariable)">
            <summary>
            获取哈希表的尺寸
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="P:FaceCat.FCScript.AttachVScale">
            <summary>
            获取或设置在左轴或右轴
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.DataSource">
            <summary>
            获取或设置数据源
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.Div">
            <summary>
            获取或设置图层
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.IsDeleted">
            <summary>
            获取或设置是否被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.Index">
            <summary>
            获取当前正在计算的索引
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.MainVariables">
            <summary>
            获取或设置主要变量
            </summary>
        </member>
        <!-- 对于成员“P:FaceCat.FCScript.Name”忽略有格式错误的 XML 注释 -->
        <member name="P:FaceCat.FCScript.Script">
            <summary>
            获取或设置脚本
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.SystemColors">
            <summary>
            获取或设置系统颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.Tag">
            <summary>
            获取或设置TAG值
            </summary>
        </member>
        <member name="P:FaceCat.FCScript.VarFactory">
            <summary>
            获取或设置临时变量工厂
            </summary>
        </member>
        <member name="T:FaceCat.LPDATA">
            <summary>
            数学计算数据传输结构
            </summary>
        </member>
        <member name="F:FaceCat.LPDATA.lastvalue">
            <summary>
            最后的值
            </summary>
        </member>
        <member name="F:FaceCat.LPDATA.first_value">
            <summary>
            第一个值
            </summary>
        </member>
        <member name="F:FaceCat.LPDATA.mode">
            <summary>
            模式
            </summary>
        </member>
        <member name="F:FaceCat.LPDATA.sum">
            <summary>
            和
            </summary>
        </member>
        <member name="T:FaceCat.TextShape">
            <summary>
            文字
            </summary>
        </member>
        <member name="M:FaceCat.TextShape.#ctor">
            <summary>
            创建文字
            </summary>
        </member>
        <member name="M:FaceCat.TextShape.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.TextShape.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.TextShape.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.TextShape.ColorField">
            <summary>
            获取或设置颜色字段
            </summary>
        </member>
        <member name="P:FaceCat.TextShape.FieldName">
            <summary>
            获取或设置字段
            </summary>
        </member>
        <member name="P:FaceCat.TextShape.Font">
            <summary>
            获取或设置字体
            </summary>
        </member>
        <member name="P:FaceCat.TextShape.StyleField">
            <summary>
            获取或设置样式字段
            -10000:不画
            </summary>
        </member>
        <member name="P:FaceCat.TextShape.Text">
            <summary>
            获取或设置绘制的文字
            </summary>
        </member>
        <member name="P:FaceCat.TextShape.TextColor">
            <summary>
            获取或设置前景色
            </summary>
        </member>
        <member name="T:FaceCat.CYear">
            <summary>
            年
            </summary>
        </member>
        <member name="M:FaceCat.CYear.#ctor(System.Int32)">
            <summary>
            创建年
            </summary>
            <param name="year">年份</param>
        </member>
        <member name="M:FaceCat.CYear.CreateMonths">
            <summary>
            创建月
            </summary>
        </member>
        <member name="M:FaceCat.CYear.delete">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="P:FaceCat.CYear.Months">
            <summary>
            获取或设置月的集合
            </summary>
        </member>
        <member name="P:FaceCat.CYear.Year">
            <summary>
            获取年份
            </summary>
        </member>
        <member name="T:FaceCat.CDay">
            <summary>
            日
            </summary>
        </member>
        <member name="M:FaceCat.CDay.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            创建日
            </summary>
            <param name="year">年</param>
            <param name="month">月</param>
            <param name="day">日</param>
        </member>
        <member name="M:FaceCat.CDay.delete">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="P:FaceCat.CDay.Day">
            <summary>
            获取日
            </summary>
        </member>
        <member name="P:FaceCat.CDay.Month">
            <summary>
            获取月
            </summary>
        </member>
        <member name="P:FaceCat.CDay.Year">
            <summary>
            获取年
            </summary>
        </member>
        <member name="T:FaceCat.GdiPlusPaint">
            <summary>
            Gdi+绘图类
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.#ctor">
            <summary>
            创建绘图类
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_bitmap">
            <summary>
            位图
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_brush">
            <summary>
            画刷
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_brushColor">
            <summary>
            画刷的颜色
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_emptyStringFormat">
            <summary>
            空的字符串格式
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_endLineCap">
            <summary>
            直线结束样式
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_exportPath">
            <summary>
            导出路径
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_g">
            <summary>
            绘图画面
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_hDC">
            <summary>
            控件的HDC
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_images">
            <summary>
            图像缓存
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_matrixItems">
            <summary>
            图像矩阵
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_offsetX">
            <summary>
            横向偏移
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_offsetY">
            <summary>
            纵向偏移
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_opacity">
            <summary>
            透明度
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_path">
            <summary>
            绘图路径
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_pen">
            <summary>
            画笔
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_penColor">
            <summary>
             画笔的颜色 
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_penWidth">
            <summary>
            画笔的宽度 
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_penStyle">
            <summary>
             画笔的样式 
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_pRect">
            <summary>
            刷新区域
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_resourcePath">
            <summary>
            资源路径
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_rotateAngle">
            <summary>
            旋转角度
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_scaleFactorX">
            <summary>
            横向缩放因子
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_scaleFactorY">
            <summary>
            纵向缩放因子
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_smoothMode">
            <summary>
            平滑程度
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_startLineCap">
            <summary>
            直线开始样式
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_textQuality">
            <summary>
            文字的质量
            </summary>
        </member>
        <member name="F:FaceCat.GdiPlusPaint.m_wRect">
            <summary>
            窗口大小
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addArc(FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            添加曲线
            </summary>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addBezier(FaceCat.FCPoint[])">
            <summary>
            添加贝赛尔曲线
            </summary>
            <param name="points">点阵</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addCurve(FaceCat.FCPoint[])">
            <summary>
            添加曲线
            </summary>
            <param name="points">点阵</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addEllipse(FaceCat.FCRect)">
            <summary>
            添加椭圆
            </summary>
            <param name="rect">矩形</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addLine(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加直线
            </summary>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addRect(FaceCat.FCRect)">
            <summary>
            添加矩形
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addPie(FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            添加扇形
            </summary>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.addText(System.String,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            添加文字
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.affectScaleFactor(System.Drawing.Rectangle@)">
            <summary>
            缩放因子生效
            </summary>
            <param name="gdiplusRect">矩形</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.affectScaleFactor(System.Drawing.RectangleF@)">
            <summary>
            缩放因子生效
            </summary>
            <param name="gdiplusRect">矩形</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.beginExport(System.String,FaceCat.FCRect)">
            <summary>
            开始导出
            </summary>
            <param name="exportPath">路径</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.beginPaint(System.IntPtr,FaceCat.FCRect,FaceCat.FCRect)">
            <summary>
            开始绘图
            </summary>
            <param name="hdc">HDC</param>
            <param name="wRect">窗体区域</param>
            <param name="pRect">刷新区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.beginPath">
            <summary>
            开始一段路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.clearCaches">
            <summary>
            清除缓存
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.clipPath">
            <summary>
            裁剪路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.closeFigure">
            <summary>
            闭合路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.closePath">
            <summary>
            结束一段路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.create_hbitmap_from_gdiplus_bitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            创建位图
            </summary>
            <param name="bitmap_ptr">Bitmap图像</param>
            <param name="rect">区域</param>
            <returns>位图</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawArc(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制弧线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawBezier(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            设置贝赛尔曲线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">坐标阵1</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawCurve(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制曲线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">坐标阵</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawEllipse(System.Int64,System.Single,System.Int32,FaceCat.FCRect)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawEllipse(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawImage(System.String,FaceCat.FCRect)">
            <summary>
            绘制图片
            </summary>
            <param name="imagePath">图片路径</param>
            <param name="rect">绘制区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawLine(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x1">第一个点的横坐标</param>
            <param name="y1">第一个点的纵坐标</param>
            <param name="x2">第二个点的横坐标</param>
            <param name="y2">第二个点的纵坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawLine(System.Int64,System.Single,System.Int32,FaceCat.FCPoint,FaceCat.FCPoint)">
            <summary>
            绘制直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="x">第一个点的坐标</param>
            <param name="y">第二个点的坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawPath(System.Int64,System.Single,System.Int32)">
            <summary>
            绘制路径
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawPie(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制扇形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawPolygon(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制多边形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">点的数组</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawPolyline(System.Int64,System.Single,System.Int32,FaceCat.FCPoint[])">
            <summary>
            绘制大量直线
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="points">点集</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawRect(System.Int64,System.Single,System.Int32,FaceCat.FCRect)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawRect(System.Int64,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawRoundRect(System.Int64,System.Single,System.Int32,FaceCat.FCRect,System.Int32)">
            <summary>
            绘制圆角矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <param name="rect">矩形区域</param>
            <param name="cornerRadius">边角半径</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawText(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            绘制文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawText(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRectF)">
            <summary>
            绘制文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.drawTextAutoEllipsis(System.String,System.Int64,FaceCat.FCFont,FaceCat.FCRect)">
            <summary>
            绘制自动省略结尾的文字
            </summary>
            <param name="text">文字</param>
            <param name="dwPenColor">颜色</param>
            <param name="font">字体</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.endExport">
            <summary>
            结束导出
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.endPaint">
            <summary>
            结束绘图
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.excludeClipPath">
            <summary>
            反裁剪路径
            </summary>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillEllipse(System.Int64,FaceCat.FCRect)">
            <summary>
            填充椭圆
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillEllipse(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            填充椭圆
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillGradientEllipse(System.Int64,System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            绘制渐变椭圆
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">矩形</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillGradientPath(System.Int64,System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            填充渐变路径
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="points">点的集合</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillGradientPolygon(System.Int64,System.Int64,FaceCat.FCPoint[],System.Int32)">
            <summary>
            绘制渐变的多边形
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">点的集合</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillGradientRect(System.Int64,System.Int64,FaceCat.FCRect,System.Int32,System.Int32)">
            <summary>
            绘制渐变矩形
            </summary>
            <param name="dwFirst">开始颜色</param>
            <param name="dwSecond">结束颜色</param>
            <param name="rect">矩形</param>
            <param name="cornerRadius">边角半径</param>
            <param name="angle">角度</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillPath(System.Int64)">
            <summary>
            填充路径
            </summary>
            <param name="dwPenColor">颜色</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillPie(System.Int64,FaceCat.FCRect,System.Single,System.Single)">
            <summary>
            绘制扇形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
            <param name="startAngle">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）</param>
            <param name="sweepAngle">从 startAngle 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillPolygon(System.Int64,FaceCat.FCPoint[])">
            <summary>
            填充多边形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="points">点的数组</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillRect(System.Int64,FaceCat.FCRect)">
            <summary>
            填充矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillRect(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            填充矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="left">左侧坐标</param>
            <param name="top">顶部左标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.fillRoundRect(System.Int64,FaceCat.FCRect,System.Int32)">
            <summary>
            填充圆角矩形
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="rect">矩形区域</param>
            <param name="cornerRadius">边角半径</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.GetBrush(System.Int64)">
            <summary>
            获取画刷
            </summary>
            <param name="dwPenColor">颜色</param>
            <returns>画刷</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.getColor(System.Int64)">
            <summary>
            获取颜色
            </summary>
            <param name="dwPenColor">输入颜色</param>
            <returns>输出颜色</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.getPaintColor(System.Int64)">
            <summary>
            获取要绘制的颜色
            </summary>
            <param name="dwPenColor">输入颜色</param>
            <returns>输出颜色</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.GetGdiPlusColor(System.Int64)">
            <summary>
            获取颜色
            </summary>
            <param name="dwPenColor">整型颜色</param>
            <returns>Gdi颜色</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.GetFont(FaceCat.FCFont)">
            <summary>
            获取Gdi字体
            </summary>
            <param name="font">字体</param>
            <returns>Gdi字体</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.getOffset">
            <summary>
            获取偏移
            </summary>
            <returns>偏移坐标</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.GetPen(System.Int64,System.Single,System.Int32)">
            <summary>
            获取画笔
            </summary>
            <param name="dwPenColor">颜色</param>
            <param name="width">宽度</param>
            <param name="style">样式</param>
            <returns>画笔</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.GetRoundRectPath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            获取绘制圆形矩形的路径
            </summary>
            <param name="gdiPlusRect">矩形</param>
            <param name="cornerRadius">边角半径</param>
            <returns>路径</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.rotate(FaceCat.FCPoint,FaceCat.FCPoint,System.Int32)">
            <summary>
            旋转角度
            </summary>
            <param name="op">圆心坐标</param>
            <param name="mp">点的坐标</param>
            <param name="angle">角度</param>
            <returns>结果坐标</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setClip(FaceCat.FCRect)">
            <summary>
            设置裁剪区域
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setLineCap(System.Int32,System.Int32)">
            <summary>
            设置直线两端的样式
            </summary>
            <param name="startLineCap">开始的样式</param>
            <param name="endLineCap">结束的样式</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setOffset(FaceCat.FCPoint)">
            <summary>
            设置偏移
            </summary>
            <param name="mp">偏移坐标</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setOpacity(System.Single)">
            <summary>
            设置透明度
            </summary>
            <param name="opacity">透明度</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setScaleFactor(System.Double,System.Double)">
            <summary>
            设置缩放因子
            </summary>
            <param name="scaleFactorX">横向因子</param>
            <param name="scaleFactorY">纵向因子</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setResourcePath(System.String)">
            <summary>
            设置资源的路径
            </summary>
            <param name="resourcePath">资源的路径</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setRotateAngle(System.Int32)">
            <summary>
            设置旋转角度
            </summary>
            <param name="rotateAngle">旋转角度</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setSmoothMode(System.Int32)">
            <summary>
            设置平滑模式
            </summary>
            <param name="smoothMode">平滑模式</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.setTextQuality(System.Int32)">
            <summary>
            设置文字的质量
            </summary>
            <param name="textQuality">文字质量</param>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.supportTransparent">
            <summary>
            设置是否支持透明色
            </summary>
            <returns>是否支持</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.textSize(System.String,FaceCat.FCFont)">
            <summary>
            获取文字大小
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <returns>字体大小</returns>
        </member>
        <member name="M:FaceCat.GdiPlusPaint.textSizeF(System.String,FaceCat.FCFont)">
            <summary>
            获取文字大小
            </summary>
            <param name="text">文字</param>
            <param name="font">字体</param>
            <returns>字体大小</returns>
        </member>
        <member name="T:FaceCat.GdiPlusPaint.BITMAP">
            <summary>
            位图对象
            </summary>
        </member>
        <member name="T:FaceCat.ChartTitleBar">
            <summary>
            图层标题栏
            </summary>
        </member>
        <member name="M:FaceCat.ChartTitleBar.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.ChartTitleBar.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.ChartTitleBar.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.ChartTitleBar.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.ChartTitleBar.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.ChartTitleBar.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.ChartTitleBar.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.Font">
            <summary>
            获取或设置字体
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.Height">
            <summary>
            获取或设置标题高度
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.MaxLine">
            <summary>
            获取或设置最大标题行数
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.ShowUnderLine">
            <summary>
            获取或设置是否显示标题下面的线
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.Text">
            <summary>
            获取或设置层的标题
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.TextColor">
            <summary>
            获取或设置标题的文字颜色
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.Titles">
            <summary>
            获取或设置标题
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.UnderLineColor">
            <summary>
            获取或设置是否显示标题下面的线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.ChartTitleBar.Visible">
            <summary>
            获取或设置是否显示标题
            </summary>
        </member>
        <member name="T:FaceCat.CTitle">
            <summary>
            标题
            </summary>
        </member>
        <member name="M:FaceCat.CTitle.#ctor(System.Int32,System.String,System.Int64,System.Int32,System.Boolean)">
            <summary>
            创建标题
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldText">字段文字</param>
            <param name="textColor">文字颜色</param>
            <param name="digit">保留小数位数</param>
            <param name="visible">是否可见</param>
        </member>
        <member name="M:FaceCat.CTitle.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.CTitle.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.CTitle.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.CTitle.Digit">
            <summary>
            获取或设置保留小数的位数
            </summary>
        </member>
        <member name="P:FaceCat.CTitle.FieldName">
            <summary>
            获取或设置字段名称
            </summary>
        </member>
        <member name="P:FaceCat.CTitle.FieldText">
            <summary>
            获取或设置字段文字
            </summary>
        </member>
        <member name="P:FaceCat.CTitle.FieldTextMode">
            <summary>
            获取或设置标题显示模式
            </summary>
        </member>
        <member name="P:FaceCat.CTitle.FieldTextSeparator">
            <summary>
            获取或设置标题的分隔符
            </summary>
        </member>
        <member name="P:FaceCat.CTitle.TextColor">
            <summary>
            获取或设置文字的颜色
            </summary>
        </member>
        <member name="P:FaceCat.CTitle.Visible">
            <summary>
            获取或设置是否可见
            </summary>
        </member>
        <member name="T:FaceCat.FCMenuItemTouchEvent">
            <summary>
            点击菜单事件
            </summary>
            <param name="sender">调用者</param>
            <param name="item">菜单项</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="T:FaceCat.FCGridBoolCell">
            <summary>
            布尔型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.#ctor">
            <summary>
            创建布尔型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.#ctor(System.Boolean)">
            <summary>
            创建布尔型单元格
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="F:FaceCat.FCGridBoolCell.m_value">
            <summary>
            数值
            </summary>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.compareTo(FaceCat.FCGridCell)">
            <summary>
            单元格大小比较，用于排序
            </summary>
            <param name="cell">比较单元格</param>
            <returns>1:较大 0:相等 -1:较小</returns>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridBoolCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="T:FaceCat.FCGridButtonCell">
            <summary>
            按钮控件单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridButtonCell.#ctor">
            <summary>
            创建按钮控件单元格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridButtonCell.Button">
            <summary>
            获取按钮
            </summary>
        </member>
        <member name="T:FaceCat.FCGridCheckBoxCell">
            <summary>
            复选框控件单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.#ctor">
            <summary>
            创建复选框控件单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.getString">
            <summary>
            获取布尔型数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridCheckBoxCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:FaceCat.FCGridCheckBoxCell.CheckBox">
            <summary>
            获取复选框控件
            </summary>
        </member>
        <member name="T:FaceCat.FCGridComboBoxCell">
            <summary>
            按钮控件单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.#ctor">
            <summary>
            创建按钮控件单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.getString">
            <summary>
            获取布尔型数值
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridComboBoxCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="P:FaceCat.FCGridComboBoxCell.ComboBox">
            <summary>
            获取按钮控件
            </summary>
        </member>
        <member name="T:FaceCat.FCGridDateTimePickerCell">
            <summary>
            日期控件单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridDateTimePickerCell.#ctor">
            <summary>
            创建日期控件单元格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridDateTimePickerCell.DatePicker">
            <summary>
            获取按钮控件
            </summary>
        </member>
        <member name="T:FaceCat.GridDivCell">
            <summary>
            层控件单元格
            </summary>
        </member>
        <member name="M:FaceCat.GridDivCell.#ctor">
            <summary>
            创建层控件单元格
            </summary>
        </member>
        <member name="P:FaceCat.GridDivCell.Div">
            <summary>
            获取层控件
            </summary>
        </member>
        <member name="T:FaceCat.FCGridDoubleCell">
            <summary>
            双精度浮点型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.#ctor">
            <summary>
            创建双精度浮点型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.#ctor(System.Double)">
            <summary>
            创建双精度浮点型单元格
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="F:FaceCat.FCGridDoubleCell.m_value">
            <summary>
            数值
            </summary>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.compareTo(FaceCat.FCGridCell)">
            <summary>
            单元格大小比较，用于排序
            </summary>
            <param name="cell">比较单元格</param>
            <returns>1:较大 0:相等 -1:较小</returns>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridDoubleCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="T:FaceCat.FCGridFloatCell">
            <summary>
            单精度浮点型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.#ctor">
            <summary>
            创建单精度浮点型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.#ctor(System.Single)">
            <summary>
            创建单精度浮点型单元格
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="F:FaceCat.FCGridFloatCell.m_value">
            <summary>
            数值
            </summary>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.compareTo(FaceCat.FCGridCell)">
            <summary>
            单元格大小比较，用于排序
            </summary>
            <param name="cell">比较单元格</param>
            <returns>1:较大 0:相等 -1:较小</returns>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridFloatCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="T:FaceCat.FCGridIntCell">
            <summary>
            整型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridIntCell.#ctor">
            <summary>
            创建整型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridIntCell.#ctor(System.Int32)">
            <summary>
            创建整型单元格
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="F:FaceCat.FCGridIntCell.m_value">
            <summary>
            数值
            </summary>
        </member>
        <member name="M:FaceCat.FCGridIntCell.compareTo(FaceCat.FCGridCell)">
            <summary>
            单元格大小比较，用于排序
            </summary>
            <param name="cell">比较单元格</param>
            <returns>1:较大 0:相等 -1:较小</returns>
        </member>
        <member name="M:FaceCat.FCGridIntCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridIntCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridIntCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridIntCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridIntCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridIntCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridIntCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridIntCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridIntCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridIntCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridIntCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridIntCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="T:FaceCat.FCGridLabelCell">
            <summary>
            标签型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridLabelCell.#ctor">
            <summary>
            创建标签单元格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridLabelCell.Label">
            <summary>
            获取标签控件
            </summary>
        </member>
        <member name="T:FaceCat.FCGridLongCell">
            <summary>
            长整型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridLongCell.#ctor">
            <summary>
            创建长整型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridLongCell.#ctor(System.Int64)">
            <summary>
            创建长整型单元格
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="F:FaceCat.FCGridLongCell.m_value">
            <summary>
            数值
            </summary>
        </member>
        <member name="M:FaceCat.FCGridLongCell.compareTo(FaceCat.FCGridCell)">
            <summary>
            单元格大小比较，用于排序
            </summary>
            <param name="cell">比较单元格</param>
            <returns>1:较大 0:相等 -1:较小</returns>
        </member>
        <member name="M:FaceCat.FCGridLongCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridLongCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridLongCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridLongCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridLongCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridLongCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridLongCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridLongCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridLongCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridLongCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridLongCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridLongCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="T:FaceCat.FCGridPasswordCell">
            <summary>
            密码型单元格
            </summary>
        </member>
        <member name="T:FaceCat.FCGridStringCell">
            <summary>
            字符型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridStringCell.#ctor">
            <summary>
            创建字符型单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridStringCell.#ctor(System.String)">
            <summary>
            创建字符型单元格
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="F:FaceCat.FCGridStringCell.m_value">
            <summary>
            字符
            </summary>
        </member>
        <member name="M:FaceCat.FCGridStringCell.compareTo(FaceCat.FCGridCell)">
            <summary>
            单元格大小比较，用于排序
            </summary>
            <param name="cell">比较单元格</param>
            <returns>1:较大 0:相等 -1:较小</returns>
        </member>
        <member name="M:FaceCat.FCGridStringCell.getString">
            <summary>
            获取字符型数值
            </summary>
            <returns>字符型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridStringCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridPasswordCell.getPaintText">
            <summary>
            获取要绘制的文本
            </summary>
            <returns>文本</returns>
        </member>
        <member name="T:FaceCat.GridRadioButtonCell">
            <summary>
            单选按钮单元格
            </summary>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.#ctor">
            <summary>
            创建单选按钮单元格
            </summary>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.getString">
            <summary>
            获取布尔型数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.GridRadioButtonCell.setString(System.String)">
            <summary>
            设置字符型数值
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:FaceCat.GridRadioButtonCell.RadioButton">
            <summary>
            获取按钮控件
            </summary>
        </member>
        <member name="T:FaceCat.FCGridSpinCell">
            <summary>
            数值框单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.#ctor">
            <summary>
            创建输入框单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.getBool">
            <summary>
            获取布尔型数值
            </summary>
            <returns>布尔型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.getDouble">
            <summary>
            获取双精度浮点值
            </summary>
            <returns>双精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.getFloat">
            <summary>
            获取单精度浮点值
            </summary>
            <returns>单精度浮点值</returns>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.getInt">
            <summary>
            获取整型数值
            </summary>
            <returns>整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.getLong">
            <summary>
            获取长整型数值
            </summary>
            <returns>长整型数值</returns>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.setBool(System.Boolean)">
            <summary>
            设置布尔型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.setDouble(System.Double)">
            <summary>
            设置双精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.setFloat(System.Single)">
            <summary>
            设置单精度浮点值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.setInt(System.Int32)">
            <summary>
            设置整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="M:FaceCat.FCGridSpinCell.setLong(System.Int64)">
            <summary>
            设置长整型数值
            </summary>
            <param name="value">数值</param>
        </member>
        <member name="P:FaceCat.FCGridSpinCell.Spin">
            <summary>
            获取输入框控件
            </summary>
        </member>
        <member name="T:FaceCat.FCGridTextBoxCell">
            <summary>
            输入框单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridTextBoxCell.#ctor">
            <summary>
            创建输入框单元格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridTextBoxCell.TextBox">
            <summary>
            获取按钮控件
            </summary>
        </member>
        <member name="T:FaceCat.CrossLine">
            <summary>
            十字线
            </summary>
        </member>
        <member name="M:FaceCat.CrossLine.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.CrossLine.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.CrossLine.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.CrossLine.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.CrossLine.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.CrossLine.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.CrossLine.AllowDoubleClick">
            <summary>
            获取或设置是否允许双击操作
            </summary>
        </member>
        <member name="P:FaceCat.CrossLine.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.CrossLine.AttachVScale">
            <summary>
            获取或设置依附于左轴还是右轴
            </summary>
        </member>
        <member name="P:FaceCat.CrossLine.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.CrossLine.LineColor">
            <summary>
            获取或设置十字线的颜色
            </summary>
        </member>
        <member name="T:FaceCat.CFunctionEx">
            <summary>
            提示方法
            </summary>
        </member>
        <member name="F:FaceCat.CFunctionEx.FUNCTIONS">
            <summary>
            所有方法
            </summary>
        </member>
        <member name="F:FaceCat.CFunctionEx.STARTINDEX">
            <summary>
            开始索引
            </summary>
        </member>
        <member name="M:FaceCat.CFunctionEx.#ctor(FaceCat.FCScript,System.Int32,System.String,FaceCat.FCNative)">
            <summary>
            创建方法
            </summary>
            <param name="indicator">指标</param>
            <param name="id">ID</param>
            <param name="name">名称</param>
            <param name="native">XML对象</param>
        </member>
        <member name="F:FaceCat.CFunctionEx.m_indicator">
            <summary>
            指标
            </summary>
        </member>
        <member name="F:FaceCat.CFunctionEx.m_native">
            <summary>
            XML对象
            </summary>
        </member>
        <member name="M:FaceCat.CFunctionEx.onCalculate(FaceCat.CVariable)">
            <summary>
            计算
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.CFunctionEx.CreateScript(System.String,FaceCat.FCNative)">
            <summary>
            创建指标
            </summary>
            <param name="native">方法库</param>
            <param name="script">脚本</param>
            <returns>指标</returns>
        </member>
        <member name="M:FaceCat.CFunctionEx.createThread(System.Object)">
            <summary>
            启动线程
            </summary>
            <param name="param">参数</param>
        </member>
        <member name="M:FaceCat.CFunctionEx.CREATETHREAD(FaceCat.CVariable)">
            <summary>
            启动线程
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="T:FaceCat.MessageCallBack">
            <summary>
            消息回调委托
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
            <param name="str">数据</param>
            <param name="len">长度</param>
        </member>
        <member name="T:FaceCat.ListenerMessageCallBack">
            <summary>
            监听消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="T:FaceCat.WriteLogCallBack">
            <summary>
            日志报告委托
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
            <param name="state">状态</param>
            <param name="log">日志</param>
        </member>
        <member name="T:FaceCat.FCMessage">
            <summary>
            消息结构
            </summary>
        </member>
        <member name="M:FaceCat.FCMessage.#ctor">
            <summary>
            创建消息
            </summary>
        </member>
        <member name="M:FaceCat.FCMessage.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
            <summary>
            创建消息
            </summary>
            <param name="groupID">组ID</param>
            <param name="serviceID">服务ID</param>
            <param name="functionID">功能ID</param>
            <param name="sessionID">登录ID</param>
            <param name="requestID">请求ID</param>
            <param name="socketID">连接ID</param>
            <param name="state">状态</param>
            <param name="compressType">压缩类型</param>
            <param name="bodyLength">包体长度</param>
            <param name="body">包体</param>
        </member>
        <member name="F:FaceCat.FCMessage.m_groupID">
            <summary>
            组ID
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_serviceID">
            <summary>
            服务ID
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_functionID">
            <summary>
            功能ID
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_sessionID">
            <summary>
            登录ID
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_requestID">
            <summary>
            请求ID
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_socketID">
            <summary>
            连接ID
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_state">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_compressType">
            <summary>
            压缩类型
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_bodyLength">
            <summary>
            包体长度
            </summary>
        </member>
        <member name="F:FaceCat.FCMessage.m_body">
            <summary>
            包体
            </summary>
        </member>
        <member name="M:FaceCat.FCMessage.copy(FaceCat.FCMessage)">
            <summary>
            复制数据
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="T:FaceCat.FCMessageListener">
            <summary>
            消息监听
            </summary>
        </member>
        <member name="M:FaceCat.FCMessageListener.#ctor">
            <summary>
            创建消息监听
            </summary>
        </member>
        <member name="M:FaceCat.FCMessageListener.Finalize">
            <summary>
            析构方法
            </summary>
        </member>
        <member name="F:FaceCat.FCMessageListener.m_callBacks">
            <summary>
            监听回调列表
            </summary>
        </member>
        <member name="M:FaceCat.FCMessageListener.add(FaceCat.ListenerMessageCallBack)">
            <summary>
            添加回调
            </summary>
            <param name="callBack">回调</param>
        </member>
        <member name="M:FaceCat.FCMessageListener.callBack(FaceCat.FCMessage)">
            <summary>
            回调方法
            </summary>
        </member>
        <member name="M:FaceCat.FCMessageListener.clear">
            <summary>
            清除监听
            </summary>
        </member>
        <member name="M:FaceCat.FCMessageListener.remove(FaceCat.ListenerMessageCallBack)">
            <summary>
            移除回调
            </summary>
            <param name="callBack">回调</param>
        </member>
        <member name="T:FaceCat.FCSocketArray">
            <summary>
            套接字连接组信息
            </summary>
        </member>
        <member name="F:FaceCat.FCSocketArray.m_sockets">
            <summary>
            套接字ID组
            </summary>
        </member>
        <member name="M:FaceCat.FCSocketArray.addSocket(System.Int32)">
            <summary>
            添加套接字ID
            </summary>
            <param name="socketID">套接字ID</param>
        </member>
        <member name="M:FaceCat.FCSocketArray.getSocketList(FaceCat.ArrayList{System.Int32})">
            <summary>
            获取套接字列表
            </summary>
            <param name="socketList">套接字列表</param>
        </member>
        <member name="M:FaceCat.FCSocketArray.removeSocket(System.Int32)">
            <summary>
            移除套接字ID
            </summary>
            <param name="socketID">套接字ID</param>
        </member>
        <member name="T:FaceCat.FCServerService">
            <summary>
            基础服务类
            </summary>
        </member>
        <member name="M:FaceCat.FCServerService.#ctor">
            <summary>
            创建服务
            </summary>
        </member>
        <member name="M:FaceCat.FCServerService.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.COMPRESSTYPE_NONE">
            <summary>
            无压缩
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.COMPRESSTYPE_GZIP">
            <summary>
            GZIP压缩
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_compressTypes">
            <summary>
            压缩类型
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_listeners">
            <summary>
            监听者集合
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_messageCallBack">
            <summary>
            消息回调
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_needWaitRequestIDs">
            <summary>
            需要等待的请求ID
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_requestID">
            <summary>
            请求
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_services">
            <summary>
            所有的服务
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_waitMessages">
            <summary>
            等待消息队列
            </summary>
        </member>
        <member name="F:FaceCat.FCServerService.m_writeLogCallBack">
            <summary>
            写日志回调
            </summary>
        </member>
        <member name="M:FaceCat.FCServerService.closeServer(System.Int32)">
            <summary>
            关闭服务
            </summary>
            <param name="socketID">套接字ID</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCServerService.sendByServer(System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            发送数据
            </summary>
            <param name="socketID">服务器套接字ID</param>
            <param name="localSID">客户端套接字ID</param>
            <param name="str">数据</param>
            <param name="len">长度</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCServerService.startServer(System.Int32)">
            <summary>
            启动服务
            </summary>
            <param name="port">端口</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCServerService.AddService(FaceCat.FCServerService)">
            <summary>
            添加服务
            </summary>
            <param name="service">服务</param>
        </member>
        <member name="M:FaceCat.FCServerService.callBack(System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            回调函数
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
            <param name="bytes">数据</param>
            <param name="len">长度</param>
        </member>
        <member name="M:FaceCat.FCServerService.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.FCServerService.getRequestID">
            <summary>
            获取请求ID
            </summary>
            <returns>请求ID</returns>
        </member>
        <member name="M:FaceCat.FCServerService.getServices(FaceCat.ArrayList{FaceCat.FCServerService})">
            <summary>
            获取所有的服务
            </summary>
            <param name="services">服务列表</param>
        </member>
        <member name="M:FaceCat.FCServerService.keepAlive(System.Int32)">
            <summary>
            保持活跃
            </summary>
            <param name="socketID">套接字ID</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCServerService.onCallBack(FaceCat.FCBinary,System.Int32,System.Int32,System.Int32)">
            <summary>
            收到消息
            </summary>
            <param name="br">流</param>
            <param name="socketID">套接字ID</param>
            <param name="localSID">本地套接字ID</param>
            <param name="len">长度</param>
        </member>
        <member name="M:FaceCat.FCServerService.onClientClose(System.Int32,System.Int32)">
            <summary>
            客户端关闭方法
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
        </member>
        <member name="M:FaceCat.FCServerService.onClientConnect(System.Int32,System.Int32,System.String)">
            <summary>
            客户端连接方法
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
        </member>
        <member name="M:FaceCat.FCServerService.onReceive(FaceCat.FCMessage)">
            <summary>
            接收数据
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCServerService.onWaitMessageHandle(FaceCat.FCMessage)">
            <summary>
            等待消息的处理
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCServerService.registerListener(System.Int32,FaceCat.ListenerMessageCallBack)">
            <summary>
            注册数据监听
            </summary>
            <param name="requestID">请求ID</param>
            <param name="callBack">回调函数</param>
        </member>
        <member name="M:FaceCat.FCServerService.registerWait(System.Int32,FaceCat.FCMessage)">
            <summary>
            注册等待
            </summary>
            <param name="requestID">请求ID</param>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCServerService.send(FaceCat.FCMessage)">
            <summary>
            发送消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCServerService.sendToListener(FaceCat.FCMessage)">
            <summary>
            发送到监听者
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCServerService.UnRegisterListener(System.Int32)">
            <summary>
            取消注册数据监听
            </summary>
            <param name="requestID">请求ID</param>
        </member>
        <member name="M:FaceCat.FCServerService.unRegisterListener(System.Int32,FaceCat.ListenerMessageCallBack)">
            <summary>
            取消注册监听
            </summary>
            <param name="requestID">请求ID</param>
            <param name="callBack">回调函数</param>
        </member>
        <member name="M:FaceCat.FCServerService.unRegisterWait(System.Int32)">
            <summary>
            取消注册等待
            </summary>
            <param name="requestID">请求ID</param>
        </member>
        <member name="M:FaceCat.FCServerService.waitMessage(System.Int32,System.Int32)">
            <summary>
            等待消息
            </summary>
            <param name="requestID">请求ID</param>
            <param name="timeout">超时</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCServerService.writeServerLog(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            写日志
            </summary>
            <param name="socketID">连接ID</param>
            <param name="localSID">本地连接ID</param>
            <param name="state">状态</param>
            <param name="log">日志</param>
        </member>
        <member name="P:FaceCat.FCServerService.CompressType">
            <summary>
            获取或设置压缩类型
            </summary>
        </member>
        <member name="P:FaceCat.FCServerService.DownFlow">
            <summary>
            获取或设置下载流量
            </summary>
        </member>
        <member name="P:FaceCat.FCServerService.GroupID">
            <summary>
            获取或设置组ID
            </summary>
        </member>
        <member name="P:FaceCat.FCServerService.ServiceID">
            <summary>
            获取或设置服务的ID
            </summary>
        </member>
        <member name="P:FaceCat.FCServerService.IsDisposed">
            <summary>
            获取对象是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCServerService.SessionID">
            <summary>
            获取或设置登录ID
            </summary>
        </member>
        <member name="P:FaceCat.FCServerService.SocketID">
            <summary>
            获取或设置套接字ID
            </summary>
        </member>
        <member name="P:FaceCat.FCServerService.UpFlow">
            <summary>
            获取或设置上传流量
            </summary>
        </member>
        <member name="T:FaceCat.FCServerSocketListener">
            <summary>
            服务端数据监听
            </summary>
        </member>
        <member name="M:FaceCat.FCServerSocketListener.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FaceCat.FCServerSocketListener.callBack(System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            消息回调
            </summary>
            <param name="socketID"></param>
            <param name="localSID"></param>
            <param name="str"></param>
            <param name="len"></param>
        </member>
        <member name="M:FaceCat.FCServerSocketListener.writeLog(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            日志回调
            </summary>
            <param name="socketID"></param>
            <param name="localSID"></param>
            <param name="state"></param>
            <param name="log"></param>
        </member>
        <member name="T:FaceCat.YearDiv">
            <summary>
            日期层
            </summary>
        </member>
        <member name="M:FaceCat.YearDiv.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建日期层
            </summary>
        </member>
        <member name="F:FaceCat.YearDiv.m_am_Direction">
            <summary>
            动画的方向
            </summary>
        </member>
        <member name="F:FaceCat.YearDiv.m_am_Tick">
            <summary>
            动画当前帧数
            </summary>
        </member>
        <member name="F:FaceCat.YearDiv.m_am_TotalTick">
            <summary>
            动画总帧数
            </summary>
        </member>
        <member name="F:FaceCat.YearDiv.m_yearButtons">
            <summary>
            月的按钮
            </summary>
        </member>
        <member name="F:FaceCat.YearDiv.m_yearButtons_am">
            <summary>
            月的动画按钮
            </summary>
        </member>
        <member name="M:FaceCat.YearDiv.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.YearDiv.hide">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="M:FaceCat.YearDiv.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.YearDiv.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.YearDiv.onPaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.YearDiv.onResetDiv(System.Int32)">
            <summary>
            重置日期图层
            </summary>
            <param name="state">状态</param>
        </member>
        <member name="M:FaceCat.YearDiv.onTimer">
            <summary>
            秒表触发方法
            </summary>
        </member>
        <member name="M:FaceCat.YearDiv.selectStartYear(System.Int32)">
            <summary>
            选择开始年份
            </summary>
            <param name="startYear">开始年份</param>
        </member>
        <member name="M:FaceCat.YearDiv.show">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:FaceCat.YearDiv.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.YearDiv.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="P:FaceCat.YearDiv.StartYear">
            <summary>
            获取开始年份
            </summary>
        </member>
        <member name="T:FaceCat.ChartToolTip">
            <summary>
            提示框
            </summary>
        </member>
        <member name="M:FaceCat.ChartToolTip.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.ChartToolTip.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.ChartToolTip.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.ChartToolTip.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.ChartToolTip.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.ChartToolTip.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.ChartToolTip.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.ChartToolTip.BackColor">
            <summary>
            获取或设置提示框的背景色
            </summary>
        </member>
        <member name="P:FaceCat.ChartToolTip.BorderColor">
            <summary>
            获取或设置边线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.ChartToolTip.Font">
            <summary>
            获取或设置提示框的字体
            </summary>
        </member>
        <member name="P:FaceCat.ChartToolTip.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.ChartToolTip.TextColor">
            <summary>
            获取或设置提示框的字体颜色
            </summary>
        </member>
        <member name="T:FaceCat.CrossLineTip">
            <summary>
            十字线标签
            </summary>
        </member>
        <member name="M:FaceCat.CrossLineTip.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:FaceCat.CrossLineTip.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.CrossLineTip.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.CrossLineTip.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.CrossLineTip.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.CrossLineTip.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.CrossLineTip.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.CrossLineTip.BackColor">
            <summary>
            获取或设置X轴提示框背景色
            </summary>
        </member>
        <member name="P:FaceCat.CrossLineTip.Font">
            <summary>
            获取或设置X轴提示框文字的字体
            </summary>
        </member>
        <member name="P:FaceCat.CrossLineTip.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.CrossLineTip.TextColor">
            <summary>
            获取或设置X轴提示框文字色
            </summary>
        </member>
        <member name="P:FaceCat.CrossLineTip.Visible">
            <summary>
            获取或设置是否可见
            </summary>
        </member>
        <member name="T:OwLib.CFunctionHttp">
            <summary>
            HTTP相关的库
            </summary>
        </member>
        <member name="F:OwLib.CFunctionHttp.STARTINDEX">
            <summary>
            开始索引
            </summary>
        </member>
        <member name="M:OwLib.CFunctionHttp.#ctor(FaceCat.FCScript,System.Int32,System.String)">
            <summary>
            创建方法
            </summary>
            <param name="indicator">指标</param>
            <param name="id">ID</param>
            <param name="name">名称</param>
        </member>
        <member name="F:OwLib.CFunctionHttp.m_data">
            <summary>
            HTTP对象
            </summary>
        </member>
        <member name="F:OwLib.CFunctionHttp.m_indicator">
            <summary>
            指标
            </summary>
        </member>
        <member name="F:OwLib.CFunctionHttp.FUNCTIONS">
            <summary>
            方法
            </summary>
        </member>
        <member name="F:OwLib.CFunctionHttp.PREFIX">
            <summary>
            前缀
            </summary>
        </member>
        <member name="M:OwLib.CFunctionHttp.onCalculate(FaceCat.CVariable)">
            <summary>
            计算
            </summary>
            <param name="var">变量</param>
            <returns>结果</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.addFunctions(FaceCat.FCScript)">
            <summary>
            添加方法
            </summary>
            <param name="indicator">方法库</param>
            <returns>指标</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_ADDPORT(FaceCat.CVariable)">
            <summary>
            添加前缀
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_CHECKSCRIPT(FaceCat.CVariable)">
            <summary>
            检查脚本
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_CLOSE(FaceCat.CVariable)">
            <summary>
            HTTP关闭
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_EASYREQUEST(FaceCat.CVariable)">
            <summary>
            接受GET请求
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_GETCONTENTTYPE(FaceCat.CVariable)">
            <summary>
            获取内容类型方法
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_GETREMOTEIP(FaceCat.CVariable)">
            <summary>
            获取IP
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_GETREMOTEPORT(FaceCat.CVariable)">
            <summary>
            获取Port
            </summary>
            <param name="var">变量</param>
            <returns>Port</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_GETREQUESTMETHOD(FaceCat.CVariable)">
            <summary>
            获取请求方法
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_GETREQUESTURL(FaceCat.CVariable)">
            <summary>
            获取请求URL
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_GETSERVICENAME(FaceCat.CVariable)">
            <summary>
            获取服务名称
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_HARDREQUEST(FaceCat.CVariable)">
            <summary>
            接受流数据
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_POSTREQUEST(FaceCat.CVariable)">
            <summary>
            接受流数据
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_POSTSTRING(FaceCat.CVariable)">
            <summary>
            HTTP获取POST请求的参数
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_QUERYSTRING(FaceCat.CVariable)">
            <summary>
            HTTP获取GET请求的参数
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_SETSTATUSCODE(FaceCat.CVariable)">
            <summary>
            设置响应状态码
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="M:OwLib.CFunctionHttp.HTTP_WRITE(FaceCat.CVariable)">
            <summary>
            HTTP响应写流
            </summary>
            <param name="var">变量</param>
            <returns>状态</returns>
        </member>
        <member name="T:FaceCat.FCBandedFCGridColumn">
            <summary>
            表格带列
            </summary>
        </member>
        <member name="T:FaceCat.FCGridColumn">
            <summary>
            表格列
            </summary>
        </member>
        <member name="M:FaceCat.FCGridColumn.#ctor">
            <summary>
            创建列
            </summary>
        </member>
        <member name="M:FaceCat.FCGridColumn.#ctor(System.String)">
            <summary>
            创建列
            </summary>
            <param name="text">标题</param>
        </member>
        <member name="F:FaceCat.FCGridColumn.m_beginWidth">
            <summary>
            起始宽度
            </summary>
        </member>
        <member name="F:FaceCat.FCGridColumn.m_resizeState">
            <summary>
            调整大小状态，1:左侧 2:右侧
            </summary>
        </member>
        <member name="F:FaceCat.FCGridColumn.m_touchDownPoint">
            <summary>
            触摸按下时的坐标
            </summary>
        </member>
        <member name="M:FaceCat.FCGridColumn.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCGridColumn.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCGridColumn.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCGridColumn.onClick(FaceCat.FCTouchInfo)">
            <summary>
            点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridColumn.onDragBegin">
            <summary>
            拖动开始方法
            </summary>
            <returns>是否拖动</returns>
        </member>
        <member name="M:FaceCat.FCGridColumn.onDragging">
            <summary>
            拖动中方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGridColumn.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridColumn.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridColumn.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCGridColumn.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCGridColumn.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCGridColumn.AllowResize">
            <summary>
            获取或设置是否可以调整大小
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.AllowSort">
            <summary>
            获取或设置是否可以排序
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.CellAlign">
            <summary>
            获取或设置内容的横向排列样式
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.ColumnType">
            <summary>
            获取或设置列的类型
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.Frozen">
            <summary>
            获取或设置是否冻结
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.Grid">
            <summary>
            获取或设置表格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.HeaderRect">
            <summary>
            获取或设置头部的矩形
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.Index">
            <summary>
            获取或设置索引
            </summary>
        </member>
        <member name="P:FaceCat.FCGridColumn.SortMode">
            <summary>
            获取或设置排序状态，0:不排序 1:升序 2:降序
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedFCGridColumn.#ctor">
            <summary>
            创建表格带列
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedFCGridColumn.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCBandedFCGridColumn.onDragBegin">
            <summary>
            拖动开始方法
            </summary>
            <returns>是否拖动</returns>
        </member>
        <member name="M:FaceCat.FCBandedFCGridColumn.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCBandedFCGridColumn.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="P:FaceCat.FCBandedFCGridColumn.Band">
            <summary>
            获取或设置表格带
            </summary>
        </member>
        <member name="T:FaceCat.DateTitle">
            <summary>
            日期标题
            </summary>
        </member>
        <member name="M:FaceCat.DateTitle.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建日期标题
            </summary>
            <param name="calendar">日历控件</param>
        </member>
        <member name="F:FaceCat.DateTitle.m_calendar">
            <summary>
            日历
            </summary>
        </member>
        <member name="M:FaceCat.DateTitle.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.DateTitle.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.DateTitle.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="P:FaceCat.DateTitle.Calendar">
            <summary>
            获取或设置日历
            </summary>
        </member>
        <member name="T:FaceCat.FCAnchor">
            <summary>
            锚定信息
            </summary>
        </member>
        <member name="M:FaceCat.FCAnchor.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            创建锚定信息
            </summary>
            <param name="left">左侧</param>
            <param name="top">顶部</param>
            <param name="right">右侧</param>
            <param name="bottom">底部</param>
        </member>
        <member name="F:FaceCat.FCAnchor.bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:FaceCat.FCAnchor.left">
            <summary>
            左侧
            </summary>
        </member>
        <member name="F:FaceCat.FCAnchor.right">
            <summary>
            右侧
            </summary>
        </member>
        <member name="F:FaceCat.FCAnchor.top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="T:FaceCat.FCContentAlignment">
            <summary>
            控件内容的布局
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.BottomCenter">
            <summary>
            中部靠下居中对齐
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.BottomLeft">
            <summary>
            左下方对齐
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.BottomRight">
            <summary>
            右下方对齐
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.MiddleCenter">
            <summary>
            垂直居中
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.MiddleLeft">
            <summary>
            垂直居中靠左
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.MiddleRight">
            <summary>
            垂直居中靠右
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.TopCenter">
            <summary>
            中部靠上居中对齐
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.TopLeft">
            <summary>
            左上方对齐
            </summary>
        </member>
        <member name="F:FaceCat.FCContentAlignment.TopRight">
            <summary>
            右上方对齐
            </summary>
        </member>
        <member name="T:FaceCat.FCCursors">
            <summary>
            光标
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.AppStarting">
            <summary>
            程序启动
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.Arrow">
            <summary>
            箭头
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.Cross">
            <summary>
            十字线
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.Hand">
            <summary>
            手型
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.Help">
            <summary>
            帮助
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.IBeam">
            <summary>
            文本光标出现
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.No">
            <summary>
            当前操作无效
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.SizeAll">
            <summary>
            四个箭头
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.SizeNESW">
            <summary>
            对角线大小调整光标
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.SizeNS">
            <summary>
            双向垂直大小调整光标
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.SizeNWSE">
            <summary>
            双向对角线大小调整光标
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.SizeWE">
            <summary>
            双向水平大小调整光标
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.UpArrow">
            <summary>
            向上箭头
            </summary>
        </member>
        <member name="F:FaceCat.FCCursors.WaitCursor">
            <summary>
            等待
            </summary>
        </member>
        <member name="T:FaceCat.FCDockStyle">
            <summary>
            控件绑定边缘类型
            </summary>
        </member>
        <member name="F:FaceCat.FCDockStyle.Bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:FaceCat.FCDockStyle.Fill">
            <summary>
            填充
            </summary>
        </member>
        <member name="F:FaceCat.FCDockStyle.Left">
            <summary>
            左侧
            </summary>
        </member>
        <member name="F:FaceCat.FCDockStyle.None">
            <summary>
            不绑定
            </summary>
        </member>
        <member name="F:FaceCat.FCDockStyle.Right">
            <summary>
            右侧
            </summary>
        </member>
        <member name="F:FaceCat.FCDockStyle.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="T:FaceCat.FCHorizontalAlign">
            <summary>
            控件横向排列方式
            </summary>
        </member>
        <member name="F:FaceCat.FCHorizontalAlign.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:FaceCat.FCHorizontalAlign.Right">
            <summary>
            远离
            </summary>
        </member>
        <member name="F:FaceCat.FCHorizontalAlign.Inherit">
            <summary>
            继承
            </summary>
        </member>
        <member name="F:FaceCat.FCHorizontalAlign.Left">
            <summary>
            靠近
            </summary>
        </member>
        <member name="T:FaceCat.FCVerticalAlign">
            <summary>
            控件纵向排列方式
            </summary>
        </member>
        <member name="F:FaceCat.FCVerticalAlign.Bottom">
            <summary>
            底部
            </summary>
        </member>
        <member name="F:FaceCat.FCVerticalAlign.Middle">
            <summary>
            中间
            </summary>
        </member>
        <member name="F:FaceCat.FCVerticalAlign.Inherit">
            <summary>
            继承
            </summary>
        </member>
        <member name="F:FaceCat.FCVerticalAlign.Top">
            <summary>
            顶部
            </summary>
        </member>
        <member name="T:FaceCat.FCLayoutStyle">
            <summary>
            控件布局样式
            </summary>
        </member>
        <member name="F:FaceCat.FCLayoutStyle.BottomToTop">
            <summary>
            自下而上
            </summary>
        </member>
        <member name="F:FaceCat.FCLayoutStyle.LeftToRight">
            <summary>
            从左向右
            </summary>
        </member>
        <member name="F:FaceCat.FCLayoutStyle.None">
            <summary>
            无布局
            </summary>
        </member>
        <member name="F:FaceCat.FCLayoutStyle.RightToLeft">
            <summary>
            从右向左
            </summary>
        </member>
        <member name="F:FaceCat.FCLayoutStyle.TopToBottom">
            <summary>
            自上而下
            </summary>
        </member>
        <member name="T:FaceCat.FCMirrorMode">
            <summary>
            镜像模式
            </summary>
        </member>
        <member name="F:FaceCat.FCMirrorMode.BugHole">
            <summary>
            虫洞
            </summary>
        </member>
        <member name="F:FaceCat.FCMirrorMode.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:FaceCat.FCMirrorMode.Shadow">
            <summary>
            影子
            </summary>
        </member>
        <member name="T:FaceCat.FCColor">
            <summary>
            颜色类
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.Back">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.Border">
            <summary>
            边线颜色
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.Text">
            <summary>
            前景色
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.DisabledBack">
            <summary>
            不可用的背景色
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.DisabledText">
            <summary>
            不可用的前景色
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.Hovered">
            <summary>
            触摸悬停的背景色
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.Pushed">
            <summary>
            触摸被按下的背景色
            </summary>
        </member>
        <member name="F:FaceCat.FCColor.None">
            <summary>
            空颜色
            </summary>
        </member>
        <member name="M:FaceCat.FCColor.argb(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取RGB颜色
            </summary>
            <param name="r">红色值</param>
            <param name="g">绿色值</param>
            <param name="b">蓝色值</param>
            <returns>RGB颜色</returns>
        </member>
        <member name="M:FaceCat.FCColor.argb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取ARGB颜色
            </summary>
            <param name="a">透明值</param>
            <param name="r">红色</param>
            <param name="g">绿色</param>
            <param name="b">蓝色</param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCColor.toArgb(FaceCat.FCPaint,System.Int64,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            获取颜色的各项数值
            </summary>
            <param name="paint">绘图对象</param>
            <param name="color">颜色</param>
            <param name="a">透明值</param>
            <param name="r">红色</param>
            <param name="g">绿色</param>
            <param name="b">蓝色</param>
        </member>
        <member name="M:FaceCat.FCColor.ratioColor(FaceCat.FCPaint,System.Int64,System.Double)">
            <summary>
            获取比例色
            </summary>
            <param name="paint">绘图对象</param>
            <param name="originalColor">原始色</param>
            <param name="ratio">比例</param>
            <returns>比例色</returns>
        </member>
        <member name="M:FaceCat.FCColor.reverse(FaceCat.FCPaint,System.Int64)">
            <summary>
            获取反色
            </summary>
            <param name="paint">绘图对象</param>
            <param name="originalColor">原始色</param>
            <returns>反色</returns>
        </member>
        <member name="T:FaceCat.FCPadding">
            <summary>
            边距信息
            </summary>
        </member>
        <member name="M:FaceCat.FCPadding.#ctor(System.Int32)">
            <summary>
            创建边距
            </summary>
            <param name="all">所有边距</param>
        </member>
        <member name="M:FaceCat.FCPadding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建边距
            </summary>
            <param name="left">左边距</param>
            <param name="top">顶边距</param>
            <param name="right">右边距</param>
            <param name="bottom">底边距</param>
        </member>
        <member name="F:FaceCat.FCPadding.bottom">
            <summary>
            底边距
            </summary>
        </member>
        <member name="F:FaceCat.FCPadding.left">
            <summary>
            左边距
            </summary>
        </member>
        <member name="F:FaceCat.FCPadding.right">
            <summary>
            右边距
            </summary>
        </member>
        <member name="F:FaceCat.FCPadding.top">
            <summary>
            顶边距
            </summary>
        </member>
        <member name="T:FaceCat.FCFont">
            <summary>
            字体类
            </summary>
        </member>
        <member name="M:FaceCat.FCFont.#ctor">
            <summary>
            创建字体
            </summary>
        </member>
        <member name="M:FaceCat.FCFont.#ctor(System.String,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            创建字体
            </summary>
            <param name="fontFamily">字体</param>
            <param name="fontSize">字号</param>
            <param name="bold">是否粗体</param>
            <param name="underline">是否有下划线</param>
            <param name="italic">是否斜体</param>
        </member>
        <member name="M:FaceCat.FCFont.#ctor(System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            创建字体
            </summary>
            <param name="fontFamily">字体</param>
            <param name="fontSize">字号</param>
            <param name="bold">是否粗体</param>
            <param name="underline">是否有下划线</param>
            <param name="italic">是否斜体</param>
            <param name="strikeout">是否有删除线</param>
        </member>
        <member name="F:FaceCat.FCFont.m_bold">
            <summary>
            是否粗体
            </summary>
        </member>
        <member name="F:FaceCat.FCFont.m_fontFamily">
            <summary>
            字体
            </summary>
        </member>
        <member name="F:FaceCat.FCFont.m_fontSize">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="F:FaceCat.FCFont.m_italic">
            <summary>
            是否斜体
            </summary>
        </member>
        <member name="F:FaceCat.FCFont.m_strikeout">
            <summary>
            是否有删除线
            </summary>
        </member>
        <member name="F:FaceCat.FCFont.m_underline">
            <summary>
            是否有下划线
            </summary>
        </member>
        <member name="T:FaceCat.FCPoint">
            <summary>
            点类
            </summary>
        </member>
        <member name="M:FaceCat.FCPoint.#ctor(System.Int32,System.Int32)">
            <summary>
            创建点
            </summary>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="M:FaceCat.FCPoint.#ctor(System.Single,System.Single)">
            <summary>
            创建点
            </summary>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="F:FaceCat.FCPoint.x">
            <summary>
            横坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCPoint.y">
            <summary>
            纵坐标
            </summary>
        </member>
        <member name="T:FaceCat.FCPointF">
            <summary>
            浮点类
            </summary>
        </member>
        <member name="M:FaceCat.FCPointF.#ctor(System.Single,System.Single)">
            <summary>
            创建浮点
            </summary>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="F:FaceCat.FCPointF.x">
            <summary>
            横坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCPointF.y">
            <summary>
            纵坐标
            </summary>
        </member>
        <member name="T:FaceCat.FCPointF2">
            <summary>
            浮点类
            </summary>
        </member>
        <member name="M:FaceCat.FCPointF2.#ctor">
            <summary>
            创建浮点
            </summary>
            <param name="x">横坐标</param>
            <param name="y">纵坐标</param>
        </member>
        <member name="F:FaceCat.FCPointF2.x">
            <summary>
            横坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCPointF2.y">
            <summary>
            纵坐标
            </summary>
        </member>
        <member name="T:FaceCat.FCRect">
            <summary>
            字体类
            </summary>
        </member>
        <member name="M:FaceCat.FCRect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            创建矩形
            </summary>
            <param name="left">左侧坐标</param>
            <param name="top">顶部坐标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="M:FaceCat.FCRect.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            创建矩形
            </summary>
            <param name="left">左侧坐标</param>
            <param name="top">顶部坐标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="F:FaceCat.FCRect.left">
            <summary>
            左侧坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCRect.top">
            <summary>
            顶部坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCRect.right">
            <summary>
            右侧坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCRect.bottom">
            <summary>
            底部坐标
            </summary>
        </member>
        <member name="T:FaceCat.FCRectF">
            <summary>
            浮点型矩形类
            </summary>
        </member>
        <member name="M:FaceCat.FCRectF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            创建矩形
            </summary>
            <param name="left">左侧坐标</param>
            <param name="top">顶部坐标</param>
            <param name="right">右侧坐标</param>
            <param name="bottom">底部坐标</param>
        </member>
        <member name="F:FaceCat.FCRectF.left">
            <summary>
            左侧坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCRectF.top">
            <summary>
            顶部坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCRectF.right">
            <summary>
            右侧坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCRectF.bottom">
            <summary>
            底部坐标
            </summary>
        </member>
        <member name="T:FaceCat.FCSize">
            <summary>
            尺寸类
            </summary>
        </member>
        <member name="M:FaceCat.FCSize.#ctor(System.Int32,System.Int32)">
            <summary>
            创建尺寸
            </summary>
            <param name="cx">宽</param>
            <param name="cy">高</param>
        </member>
        <member name="F:FaceCat.FCSize.cx">
            <summary>
            宽
            </summary>
        </member>
        <member name="F:FaceCat.FCSize.cy">
            <summary>
            高
            </summary>
        </member>
        <member name="T:FaceCat.FCSizeF">
            <summary>
            浮点型尺寸类
            </summary>
        </member>
        <member name="M:FaceCat.FCSizeF.#ctor(System.Single,System.Single)">
            <summary>
            创建浮点型尺寸
            </summary>
            <param name="cx">宽</param>
            <param name="cy">高</param>
        </member>
        <member name="F:FaceCat.FCSizeF.cx">
            <summary>
            宽
            </summary>
        </member>
        <member name="F:FaceCat.FCSizeF.cy">
            <summary>
            高
            </summary>
        </member>
        <member name="T:FaceCat.FCSizeF2">
            <summary>
            浮点型尺寸类
            </summary>
        </member>
        <member name="M:FaceCat.FCSizeF2.#ctor">
            <summary>
            创建浮点型尺寸
            </summary>
            <param name="cx">宽</param>
            <param name="cy">高</param>
        </member>
        <member name="F:FaceCat.FCSizeF2.cx">
            <summary>
            宽
            </summary>
        </member>
        <member name="F:FaceCat.FCSizeF2.cy">
            <summary>
            高
            </summary>
        </member>
        <member name="T:FaceCat.FCTouchInfo">
            <summary>
            触摸信息
            </summary>
        </member>
        <member name="F:FaceCat.FCTouchInfo.m_clicks">
            <summary>
            点击次数
            </summary>
        </member>
        <member name="F:FaceCat.FCTouchInfo.m_delta">
            <summary>
            滚动值
            </summary>
        </member>
        <member name="F:FaceCat.FCTouchInfo.m_firstTouch">
            <summary>
            是否第一个坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCTouchInfo.m_firstPoint">
            <summary>
            第一个坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCTouchInfo.m_secondTouch">
            <summary>
            是否第二个坐标
            </summary>
        </member>
        <member name="F:FaceCat.FCTouchInfo.m_secondPoint">
            <summary>
            第二个坐标
            </summary>
        </member>
        <member name="M:FaceCat.FCTouchInfo.clone">
            <summary>
            拷贝信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:FaceCat.FCWindowClosingEvent">
            <summary>
            控件事件
            </summary>
            <param name="sender">调用者</param>
            <param name="cancel">是否退出</param>
        </member>
        <member name="T:FaceCat.FCWindow">
            <summary>
            窗体控件
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.#ctor">
            <summary>
            创建窗体控件
            </summary>
        </member>
        <member name="F:FaceCat.FCWindow.m_resizePoint">
            <summary>
            调整尺寸的点
            </summary>
        </member>
        <member name="F:FaceCat.FCWindow.m_startTouchPoint">
            <summary>
            移动开始点
            </summary>
        </member>
        <member name="F:FaceCat.FCWindow.m_startRect">
            <summary>
            移动开始时的控件矩形
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.bringToFront">
            <summary>
            将控件放到最前显示
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.callWindowClosingEvents(System.Int32,System.Boolean@)">
            <summary>
            调用事件
            </summary>
            <param name="eventID">事件ID</param>
            <param name="cancel">是否退出</param>
        </member>
        <member name="M:FaceCat.FCWindow.close">
            <summary>
            关闭窗体
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.delete">
            <summary>
            销毁控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCWindow.getDynamicPaintRect">
            <summary>
            获取动态绘图区域
            </summary>
            <returns>区域</returns>
        </member>
        <member name="M:FaceCat.FCWindow.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCWindow.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
            <param name="type">类型</param>
        </member>
        <member name="M:FaceCat.FCWindow.getPropertyNames">
            <summary>
            获取属性列表
            </summary>
            <returns>属性列表</returns>
        </member>
        <member name="M:FaceCat.FCWindow.getResizeCursor(System.Int32)">
            <summary>
            获取触摸状态
            </summary>
            <param name="state">状态值</param>
            <returns>触摸状态</returns>
        </member>
        <member name="M:FaceCat.FCWindow.getResizePoints">
            <summary>
            获取调整尺寸的点
            </summary>
            <returns>矩形集合</returns>
        </member>
        <member name="M:FaceCat.FCWindow.getResizeState">
            <summary>
            获取调整尺寸的状态
            </summary>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.FCWindow.onDragBegin">
            <summary>
            滚动开始方法
            </summary>
            <returns>是否已处理</returns>
        </member>
        <member name="M:FaceCat.FCWindow.onDragReady(FaceCat.FCPoint@)">
            <summary>
            拖动准备方法
            </summary>
            <param name="startOffset">可以拖动的偏移坐标量</param>
        </member>
        <member name="M:FaceCat.FCWindow.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCWindow.onTouchMove(FaceCat.FCTouchInfo)">
            <summary>
            触摸移动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCWindow.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCWindow.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            绘制前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCWindow.onVisibleChanged">
            <summary>
            可见状态改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.onWindowClosing(System.Boolean@)">
            <summary>
            窗体正在关闭方法
            </summary>
            <param name="cancel">是否退出</param>
        </member>
        <member name="M:FaceCat.FCWindow.onWindowClosed">
            <summary>
            窗体关闭方法
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.sendToBack">
            <summary>
            将控件放到最下面显示
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCWindow.showDialog">
            <summary>
            以会话方式显示
            </summary>
        </member>
        <member name="M:FaceCat.FCWindow.windowResize(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,FaceCat.FCPoint@,FaceCat.FCPoint@)">
            <summary>
            窗体尺寸改变
            </summary>
            <param name="resizePoint"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
            <param name="nowPoint"></param>
            <param name="startTouchPoint"></param>
        </member>
        <member name="P:FaceCat.FCWindow.BorderWidth">
            <summary>
            获取或设置边框的宽度
            </summary>
        </member>
        <member name="P:FaceCat.FCWindow.CanResize">
            <summary>
            获取或设置是否可以调整尺寸
            </summary>
        </member>
        <member name="P:FaceCat.FCWindow.CaptionHeight">
            <summary>
            获取或设置标题栏的高度
            </summary>
        </member>
        <member name="P:FaceCat.FCWindow.ClientSize">
            <summary>
            获取客户端的区域
            </summary>
        </member>
        <member name="P:FaceCat.FCWindow.Frame">
            <summary>
            获取或设置窗体的
            </summary>
        </member>
        <member name="P:FaceCat.FCWindow.IsDialog">
            <summary>
            获取或设置是否会话窗口
            </summary>
        </member>
        <member name="P:FaceCat.FCWindow.ShadowColor">
            <summary>
            获取或设置阴影的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCWindow.ShadowSize">
            <summary>
            获取或设置阴影的大小
            </summary>
        </member>
        <member name="T:FaceCat.FCHttpHardService">
            <summary>
            HTTP服务
            </summary>
        </member>
        <member name="F:FaceCat.FCHttpHardService.SERVICEID_HTTPHARD">
            <summary>
            用户会话服务ID
            </summary>
        </member>
        <member name="F:FaceCat.FCHttpHardService.FUNCTIONID_HTTPHARD_TEST">
            <summary>
            POST方法ID
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpHardService.#ctor">
            <summary>
            创建HTTP服务
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpHardService.onReceive(FaceCat.FCMessage)">
            <summary>
            接收数据
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCHttpHardService.send(FaceCat.FCMessage)">
            <summary>
            发送消息
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="T:FaceCat.FCHScrollBar">
            <summary>
            横向滚动条控件
            </summary>
        </member>
        <member name="M:FaceCat.FCHScrollBar.#ctor">
            <summary>
            创建控件
            </summary>
        </member>
        <member name="F:FaceCat.FCHScrollBar.m_backButtonTouchDownEvent">
            <summary>
            背景按钮的触摸按下事件
            </summary>
        </member>
        <member name="F:FaceCat.FCHScrollBar.m_backButtonTouchUpEvent">
            <summary>
            背景按钮的触摸抬起事件
            </summary>
        </member>
        <member name="M:FaceCat.FCHScrollBar.backButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸按下回调事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCHScrollBar.backButtonTouchUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸抬起回调事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCHScrollBar.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCHScrollBar.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCHScrollBar.onDragScroll">
            <summary>
            拖动滚动方法
            </summary>
        </member>
        <member name="M:FaceCat.FCHScrollBar.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCHScrollBar.onBackButtonTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸按下回调方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCHScrollBar.onBackButtonTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            滚动条背景按钮触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCHScrollBar.update">
            <summary>
            重新布局方法
            </summary>
        </member>
        <member name="T:FaceCat.FCGridRowStyle">
            <summary>
            表格行的样式
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRowStyle.BackColor">
            <summary>
            获取
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRowStyle.Font">
            <summary>
            获取或设置字体
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRowStyle.HoveredBackColor">
            <summary>
            获取或设置触摸悬停行的背景色
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRowStyle.HoveredTextColor">
            <summary>
            获取或设置触摸悬停行的前景色
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRowStyle.SelectedBackColor">
            <summary>
            获取或设置选中行的背景色
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRowStyle.SelectedTextColor">
            <summary>
            获取或设置选中行的前景色
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRowStyle.TextColor">
            <summary>
            获取或设置前景色
            </summary>
        </member>
        <member name="T:FaceCat.FCGridRow">
            <summary>
            单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridRow.#ctor">
            <summary>
            创建行
            </summary>
        </member>
        <member name="M:FaceCat.FCGridRow.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCGridRow.m_cells">
            <summary>
            所有单元格
            </summary>
        </member>
        <member name="F:FaceCat.FCGridRow.m_editState">
            <summary>
            编辑状态
            </summary>
        </member>
        <member name="M:FaceCat.FCGridRow.addCell(FaceCat.FCGridColumn,FaceCat.FCGridCell)">
            <summary>
            添加单元格
            </summary>
            <param name="column">列索引</param>
            <param name="cell">单元格</param>
        </member>
        <member name="M:FaceCat.FCGridRow.addCell(System.Int32,FaceCat.FCGridCell)">
            <summary>
            添加单元格
            </summary>
            <param name="columnIndex">列索引</param>
            <param name="cell">单元格</param>
        </member>
        <member name="M:FaceCat.FCGridRow.addCell(System.String,FaceCat.FCGridCell)">
            <summary>
            添加单元格
            </summary>
            <param name="columnName">列名</param>
            <param name="cell">单元格</param>
        </member>
        <member name="M:FaceCat.FCGridRow.clearCells">
            <summary>
            清除单元格
            </summary>
        </member>
        <member name="M:FaceCat.FCGridRow.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.FCGridRow.getCell(FaceCat.FCGridColumn)">
            <summary>
            根据列获取单元格
            </summary>
            <param name="column">列</param>
            <returns>单元格</returns>
        </member>
        <member name="M:FaceCat.FCGridRow.getCell(System.Int32)">
            <summary>
            根据列的索引获取单元格
            </summary>
            <returns>单元格</returns>
        </member>
        <member name="M:FaceCat.FCGridRow.getCell(System.String)">
            <summary>
            根据列的名称获取单元格
            </summary>
            <param name="columnName">列名</param>
            <returns>单元格</returns>
        </member>
        <member name="M:FaceCat.FCGridRow.getCells">
            <summary>
            获取所有单元格
            </summary>
            <returns>所有单元格</returns>
        </member>
        <member name="M:FaceCat.FCGridRow.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCGridRow.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCGridRow.onAdd">
            <summary>
            添加行方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGridRow.onPaint(FaceCat.FCPaint,FaceCat.FCRect,System.Boolean)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪矩形</param>
            <param name="isAlternate">是否交替行</param>
        </member>
        <member name="M:FaceCat.FCGridRow.onPaintBorder(FaceCat.FCPaint,FaceCat.FCRect,System.Boolean)">
            <summary>
            重绘边线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪矩形</param>
            <param name="isAlternate">是否交替行</param>
        </member>
        <member name="M:FaceCat.FCGridRow.onRemove">
            <summary>
            移除行方法
            </summary>
        </member>
        <member name="M:FaceCat.FCGridRow.removeCell(FaceCat.FCGridColumn)">
            <summary>
            移除单元格
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:FaceCat.FCGridRow.removeCell(System.Int32)">
            <summary>
            移除单元格
            </summary>
            <param name="columnIndex">列索引</param>
        </member>
        <member name="M:FaceCat.FCGridRow.removeCell(System.String)">
            <summary>
            移除单元格
            </summary>
            <param name="columnName">列名</param>
        </member>
        <member name="M:FaceCat.FCGridRow.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCGridRow.AllowEdit">
            <summary>
            获取或设置是否允许编辑
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.Bounds">
            <summary>
            获取或设置显示区域
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.EditButton">
            <summary>
            获取或设置编辑按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.Grid">
            <summary>
            获取或设置所在表格
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.Height">
            <summary>
            获取或设置行高
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.HorizontalOffset">
            <summary>
            获取或设置横向滚动距离
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.Index">
            <summary>
            获取或设置索引
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.Tag">
            <summary>
            获取或设置TAG值
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.Visible">
            <summary>
            获取或设置是否可见
            </summary>
        </member>
        <member name="P:FaceCat.FCGridRow.VisibleIndex">
            <summary>
            获取或设置可见索引
            </summary>
        </member>
        <member name="T:FaceCat.FCGridCellStyle">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCellStyle.Align">
            <summary>
            获取或设置内容的横向排列样式
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCellStyle.AutoEllipsis">
            <summary>
            获取或设置是否在文字超出范围时在结尾显示省略号
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCellStyle.BackColor">
            <summary>
            获取
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCellStyle.Font">
            <summary>
            获取或设置字体
            </summary>
        </member>
        <member name="P:FaceCat.FCGridCellStyle.TextColor">
            <summary>
            获取或设置前景色
            </summary>
        </member>
        <member name="T:FaceCat.MonthDiv">
            <summary>
            日期层
            </summary>
        </member>
        <member name="M:FaceCat.MonthDiv.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建日期层
            </summary>
        </member>
        <member name="F:FaceCat.MonthDiv.m_am_Direction">
            <summary>
            动画的方向
            </summary>
        </member>
        <member name="F:FaceCat.MonthDiv.m_am_Tick">
            <summary>
            动画当前帧数
            </summary>
        </member>
        <member name="F:FaceCat.MonthDiv.m_am_TotalTick">
            <summary>
            动画总帧数
            </summary>
        </member>
        <member name="F:FaceCat.MonthDiv.m_monthButtons">
            <summary>
            月的按钮
            </summary>
        </member>
        <member name="F:FaceCat.MonthDiv.m_monthButtons_am">
            <summary>
            月的动画按钮
            </summary>
        </member>
        <member name="M:FaceCat.MonthDiv.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.MonthDiv.hide">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="M:FaceCat.MonthDiv.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.MonthDiv.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.MonthDiv.onPaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.MonthDiv.onResetDiv(System.Int32)">
            <summary>
            重置日期图层
            </summary>
            <param name="state">状态</param>
        </member>
        <member name="M:FaceCat.MonthDiv.onTimer">
            <summary>
            秒表触发方法
            </summary>
        </member>
        <member name="M:FaceCat.MonthDiv.selectYear(System.Int32)">
            <summary>
            选择年份
            </summary>
            <param name="year">年份</param>
        </member>
        <member name="M:FaceCat.MonthDiv.show">
            <summary>
            显示
            </summary>
        </member>
        <member name="M:FaceCat.MonthDiv.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.MonthDiv.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="P:FaceCat.MonthDiv.Year">
            <summary>
            获取年份
            </summary>
        </member>
        <member name="T:FaceCat.ChartDiv">
            <summary>
            图层，用来承载坐标轴，图形，画线工具，指标等内容。
            </summary>
        </member>
        <member name="M:FaceCat.ChartDiv.#ctor">
            <summary>
            创建图层
            </summary>
        </member>
        <member name="M:FaceCat.ChartDiv.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.ChartDiv.m_plots">
            <summary>
            画线工具
            </summary>
        </member>
        <member name="F:FaceCat.ChartDiv.m_shapes">
            <summary>
            图形
            </summary>
        </member>
        <member name="M:FaceCat.ChartDiv.addPlot(FaceCat.FCPlot)">
            <summary>
            添加画线工具
            </summary>
            <param name="plot">画线工具</param>
        </member>
        <member name="M:FaceCat.ChartDiv.addShape(FaceCat.BaseShape)">
            <summary>
            添加图形
            </summary>
            <param name="shape">图形</param>
        </member>
        <member name="M:FaceCat.ChartDiv.containsShape(FaceCat.BaseShape)">
            <summary>
            是否包含图形
            </summary>
            <param name="shape">图形</param>
            <returns>是否包含</returns>
        </member>
        <member name="M:FaceCat.ChartDiv.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.ChartDiv.getPlots(FaceCat.SortType)">
            <summary>
            获取所有的画线工具
            </summary>
            <returns>所有画线工具</returns>
        </member>
        <member name="M:FaceCat.ChartDiv.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.ChartDiv.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.ChartDiv.getShapes(FaceCat.SortType)">
            <summary>
            获取所有的图形
            </summary>
            <param name="sortType">排序类型</param>
            <returns>图形集合</returns>
        </member>
        <member name="M:FaceCat.ChartDiv.getVScale(FaceCat.AttachVScale)">
            <summary>
            获取纵轴
            </summary>
            <param name="attachVScale">纵轴类型</param>
            <returns>坐标轴</returns>
        </member>
        <member name="M:FaceCat.ChartDiv.onPaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.ChartDiv.removePlot(FaceCat.FCPlot)">
            <summary>
            移除画线工具
            </summary>
            <param name="plot">画线工具</param>
        </member>
        <member name="M:FaceCat.ChartDiv.removeShape(FaceCat.BaseShape)">
            <summary>
            移除图形
            </summary>
            <param name="shape">图形</param>
        </member>
        <member name="M:FaceCat.ChartDiv.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.ChartDiv.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.BackColor">
            <summary>
            获取或设置背景色
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.BorderColor">
            <summary>
            获取或设置边线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Bottom">
            <summary>
            获取距离下侧的位置
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Bounds">
            <summary>
            获取或设置层的区域
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Chart">
            <summary>
            获取或设置所在布局
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.CrossLine">
            <summary>
            获取或设置十字线
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Font">
            <summary>
            获取或设置层的字体
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Height">
            <summary>
            获取高度
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.HGrid">
            <summary>
            获取或设置横向网格线
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.HScale">
            <summary>
            获取或设置横轴
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Left">
            <summary>
            获取或设置距离左侧的位置
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.LeftVScale">
            <summary>
            获取或设置左纵轴
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Right">
            <summary>
            获取距离右侧的距离
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.RightVScale">
            <summary>
            获取或设置右纵轴
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.SelectArea">
            <summary>
            获取或设置选中框
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Selected">
            <summary>
            获取或设置是否被选中
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.ShowSelect">
            <summary>
            获取或设置是否可以选中
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.TitleBar">
            <summary>
            获取或设置标题
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.ToolTip">
            <summary>
            获取或设置提示框
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Top">
            <summary>
            获取或设置距离上侧的位置
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.VerticalPercent">
            <summary>
            获取或设置纵向所占比例
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.VGrid">
            <summary>
            获取或设置纵向网格线
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.Width">
            <summary>
            获取宽度
            </summary>
        </member>
        <member name="P:FaceCat.ChartDiv.WorkingAreaHeight">
            <summary>
            获取或设置工作区域的高度
            </summary>
        </member>
        <member name="T:FaceCat.BaseShapeZOrderASC">
            <summary>
            比较线条层次的类(升序)
            </summary>
        </member>
        <member name="M:FaceCat.BaseShapeZOrderASC.Compare(FaceCat.BaseShape,FaceCat.BaseShape)">
            <summary>
            比较方法
            </summary>
            <param name="x">线条X</param>
            <param name="y">线条Y</param>
            <returns>是否相等</returns>
        </member>
        <member name="T:FaceCat.BaseShapeZOrderDESC">
            <summary>
            比较线条层次的类(降序)
            </summary>
        </member>
        <member name="M:FaceCat.BaseShapeZOrderDESC.Compare(FaceCat.BaseShape,FaceCat.BaseShape)">
            <summary>
            比较方法
            </summary>
            <param name="x">线条X</param>
            <param name="y">线条Y</param>
            <returns>是否相等</returns>
        </member>
        <member name="T:FaceCat.PlotZOrderCompareASC">
            <summary>
            比较线条层次的类
            </summary>
        </member>
        <member name="M:FaceCat.PlotZOrderCompareASC.Compare(FaceCat.FCPlot,FaceCat.FCPlot)">
            <summary>
            比较方法
            </summary>
            <param name="x">画线工具X</param>
            <param name="y">画线工具Y</param>
            <returns>是否相等</returns>
        </member>
        <member name="T:FaceCat.PlotZOrderCompareDESC">
            <summary>
            比较线条层次的类
            </summary>
        </member>
        <member name="M:FaceCat.PlotZOrderCompareDESC.Compare(FaceCat.FCPlot,FaceCat.FCPlot)">
            <summary>
            比较方法
            </summary>
            <param name="x">画线工具X</param>
            <param name="y">画线工具Y</param>
            <returns>是否相等</returns>
        </member>
        <member name="T:facecat.Properties.Resources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:facecat.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:facecat.Properties.Resources.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:FaceCat.FCTabPage">
            <summary>
            多页夹控件
            </summary>
        </member>
        <member name="M:FaceCat.FCTabPage.#ctor">
            <summary>
            创建多页夹
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPage.m_dragHeaderBeginEvent">
            <summary>
            开始拖动页头按钮事件
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPage.m_dragHeaderEndEvent">
            <summary>
            结束拖动页头按钮事件
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPage.m_draggingHeaderEvent">
            <summary>
            页头按钮拖动中事件
            </summary>
        </member>
        <member name="F:FaceCat.FCTabPage.m_headerTouchDownEvent">
            <summary>
            页头的触摸按下事件
            </summary>
        </member>
        <member name="M:FaceCat.FCTabPage.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTabPage.DragHeaderBegin(System.Object)">
            <summary>
            开始拖动页头按钮方法
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCTabPage.DragHeaderEnd(System.Object)">
            <summary>
            结束拖动页头按钮方法
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCTabPage.DraggingHeader(System.Object)">
            <summary>
            页头按钮拖动中方法
            </summary>
            <param name="sender">调用者</param>
        </member>
        <member name="M:FaceCat.FCTabPage.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCTabPage.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCTabPage.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCTabPage.HeaderTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            页头触摸按下方法
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCTabPage.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTabPage.onTextChanged">
            <summary>
            文字改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCTabPage.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCTabPage.HeaderButton">
            <summary>
            获取或设置页头按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCTabPage.HeaderLocation">
            <summary>
            获取或设置头部的位置
            </summary>
        </member>
        <member name="P:FaceCat.FCTabPage.HeaderVisible">
            <summary>
            获取或设置头部是否可见
            </summary>
        </member>
        <member name="P:FaceCat.FCTabPage.TabControl">
            <summary>
            获取或设置多页夹控件
            </summary>
        </member>
        <member name="T:FaceCat.FCLabel">
            <summary>
            标签控件
            </summary>
        </member>
        <member name="M:FaceCat.FCLabel.#ctor">
            <summary>
            创建标签控件
            </summary>
        </member>
        <member name="M:FaceCat.FCLabel.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCLabel.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCLabel.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCLabel.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCLabel.onPrePaint(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            预绘图方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCLabel.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCLabel.TextAlign">
            <summary>
            获取或设置文字的布局方式
            </summary>
        </member>
        <member name="T:FaceCat.FCRadioButton">
            <summary>
            复选框控件
            </summary>
        </member>
        <member name="M:FaceCat.FCRadioButton.#ctor">
            <summary>
            创建复选框
            </summary>
        </member>
        <member name="M:FaceCat.FCRadioButton.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCRadioButton.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCRadioButton.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCRadioButton.onClick(FaceCat.FCTouchInfo)">
            <summary>
            点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCRadioButton.onPaintCheckButton(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘选中按钮方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCRadioButton.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCRadioButton.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.FCRadioButton.GroupName">
            <summary>
            获取或设置组名
            </summary>
        </member>
        <member name="T:FaceCat.FCSpin">
            <summary>
            数值显示控件
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.#ctor">
            <summary>
            创建数值显示控件
            </summary>
        </member>
        <member name="F:FaceCat.FCSpin.m_downButtoTouchDownEvent">
            <summary>
            向下按钮的触摸按下函数
            </summary>
        </member>
        <member name="F:FaceCat.FCSpin.m_downButtoTouchUpEvent">
            <summary>
            向下按钮的触摸抬起函数
            </summary>
        </member>
        <member name="F:FaceCat.FCSpin.m_tick">
            <summary>
            TICK值
            </summary>
        </member>
        <member name="F:FaceCat.FCSpin.m_timerID">
            <summary>
            秒表ID
            </summary>
        </member>
        <member name="F:FaceCat.FCSpin.m_upButtonTouchDownEvent">
            <summary>
            向上按钮的触摸按下函数
            </summary>
        </member>
        <member name="F:FaceCat.FCSpin.m_upButtonTouchUpEvent">
            <summary>
            向上按钮的触摸抬起函数
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.Add">
            <summary>
            增加指定幅度的数值
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.DownButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            向下按钮的触摸按下事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCSpin.DownButtonTouchUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            向下按钮的触摸抬起事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCSpin.FormatNum(System.String)">
            <summary>
            将文本转化为千分位显示
            </summary>
            <param name="inputText">输入文字</param>
            <returns>千分位文字</returns>
        </member>
        <member name="M:FaceCat.FCSpin.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCSpin.getEventNames">
            <summary>
            获取事件名称列表
            </summary>
            <returns>名称列表</returns>
        </member>
        <member name="M:FaceCat.FCSpin.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCSpin.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCSpin.getValueByDigit(System.Double,System.Int32)">
            <summary>
            根据保留小数的位置将double型转化为String型
            </summary>
            <param name="value">值</param>
            <param name="digit">保留小数点</param>
            <returns>数值字符</returns>
        </member>
        <member name="M:FaceCat.FCSpin.onChar(System.Char)">
            <summary>
            输入文字方法
            </summary>
            <param name="ch">字符</param>
        </member>
        <member name="M:FaceCat.FCSpin.onKeyDown(System.Char)">
            <summary>
            键盘按下方法
            </summary>
            <param name="key">按键</param>
        </member>
        <member name="M:FaceCat.FCSpin.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.onTouchWheel(FaceCat.FCTouchInfo)">
            <summary>
            触摸滚动方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCSpin.onPaste">
            <summary>
            粘贴方法
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.onTimer(System.Int32)">
            <summary>
            秒表事件
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCSpin.onValueChanged">
            <summary>
            数值改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.reduce">
            <summary>
            减少指定幅度的数值
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCSpin.setRegion">
            <summary>
            设置区域
            </summary>
        </member>
        <member name="M:FaceCat.FCSpin.upButtonTouchDown(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            向上按钮的触摸按下事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCSpin.upButtonTouchUp(System.Object,FaceCat.FCTouchInfo)">
            <summary>
            向上按钮的触摸抬起事件
            </summary>
            <param name="sender">调用者</param>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCSpin.update">
            <summary>
            更新布局方法
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.AutoFormat">
            <summary>
            获取或设置是否自动格式化
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.Digit">
            <summary>
            获取或设置保留小数的位数
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.DownButton">
            <summary>
            获取向下按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.IsAdding">
            <summary>
            获取或设置是否正在增量
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.IsReducing">
            <summary>
            获取或设置是否正在减量
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.Maximum">
            <summary>
            获取或设置最大值
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.Minimum">
            <summary>
            获取或设置最小值
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.ShowThousands">
            <summary>
            获取或设置是否显示千分位
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.Step">
            <summary>
            获取或设置数值增减幅度
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.Text">
            <summary>
            获取或设置文本
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.UpButton">
            <summary>
            获取向上按钮
            </summary>
        </member>
        <member name="P:FaceCat.FCSpin.Value">
            <summary>
            获取或设置当的数值
            </summary>
        </member>
        <member name="T:FaceCat.FCHttpPostService">
            <summary>
            HTTP的POST服务
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpPostService.#ctor">
            <summary>
            创建HTTP服务
            </summary>
        </member>
        <member name="M:FaceCat.FCHttpPostService.asynSend(System.Object)">
            <summary>
            异步发送数据
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:FaceCat.FCHttpPostService.onReceive(FaceCat.FCMessage)">
            <summary>
            接收数据
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:FaceCat.FCHttpPostService.post(System.String)">
            <summary>
            发送POST数据
            </summary>
            <param name="url">地址</param>
            <param name="data">数据</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCHttpPostService.post(System.String,System.String)">
            <summary>
            发送POST数据
            </summary>
            <param name="url">地址</param>
            <param name="data">数据</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCHttpPostService.post(System.String,System.Byte[])">
            <summary>
            发送POST数据
            </summary>
            <param name="url">地址</param>
            <param name="data">数据</param>
            <returns>结果</returns>
        </member>
        <member name="M:FaceCat.FCHttpPostService.send(FaceCat.FCMessage)">
            <summary>
            发送POST数据
            </summary>
            <param name="message">消息</param>
            <returns>返回消息</returns>
        </member>
        <member name="M:FaceCat.FCHttpPostService.sendRequest(FaceCat.FCMessage)">
            <summary>
            发送POST数据
            </summary>
            <param name="message">消息</param>
            <returns>返回消息</returns>
        </member>
        <member name="P:FaceCat.FCHttpPostService.IsSyncSend">
            <summary>
            获取或者设置是否同步发送
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpPostService.Timeout">
            <summary>
            获取或者设置Timeout时间
            </summary>
        </member>
        <member name="P:FaceCat.FCHttpPostService.Url">
            <summary>
            获取或设置地址
            </summary>
        </member>
        <member name="T:FaceCat.FCLinkBehavior">
            <summary>
            超链接控件行为
            </summary>
        </member>
        <member name="F:FaceCat.FCLinkBehavior.AlwaysUnderLine">
            <summary>
            总是显示下划线
            </summary>
        </member>
        <member name="F:FaceCat.FCLinkBehavior.HoverUnderLine">
            <summary>
            触摸悬停时显示下划线
            </summary>
        </member>
        <member name="F:FaceCat.FCLinkBehavior.NeverUnderLine">
            <summary>
            总是不显示下划线
            </summary>
        </member>
        <member name="T:FaceCat.FCLinkLabel">
            <summary>
            超链接控件
            </summary>
        </member>
        <member name="M:FaceCat.FCLinkLabel.#ctor">
            <summary>
            创建超链接控件
            </summary>
        </member>
        <member name="F:FaceCat.FCLinkLabel.m_visited">
            <summary>
            是否已访问
            </summary>
        </member>
        <member name="M:FaceCat.FCLinkLabel.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCLinkLabel.getPaintingLinkColor">
            <summary>
            获取要绘制的超链接颜色
            </summary>
            <returns>前景色</returns>
        </member>
        <member name="M:FaceCat.FCLinkLabel.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCLinkLabel.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCLinkLabel.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCLinkLabel.onTouchDown(FaceCat.FCTouchInfo)">
            <summary>
            触摸按下方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCLinkLabel.onTouchEnter(FaceCat.FCTouchInfo)">
            <summary>
            触摸进入方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCLinkLabel.onTouchLeave(FaceCat.FCTouchInfo)">
            <summary>
            触摸离开方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCLinkLabel.onTouchUp(FaceCat.FCTouchInfo)">
            <summary>
            触摸抬起方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.FCLinkLabel.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.FCLinkLabel.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.FCLinkLabel.ActiveLinkColor">
            <summary>
            获取或设置单击超链接时的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCLinkLabel.DisabledLinkColor">
            <summary>
            获取或设置超链接被禁用时的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCLinkLabel.LinkBehavior">
            <summary>
            获取或设置下划线的显示方式
            </summary>
        </member>
        <member name="P:FaceCat.FCLinkLabel.LinkColor">
            <summary>
            获取或设置超链接处于默认时的颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCLinkLabel.LinkVisited">
            <summary>
            获取或设置是否按照已访问的样式显示超链接颜色
            </summary>
        </member>
        <member name="P:FaceCat.FCLinkLabel.VisitedLinkColor">
            <summary>
            获取已访问的超链接的颜色
            </summary>
        </member>
        <member name="T:FaceCat.FCBandedGrid">
            <summary>
            复合列头表格
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedGrid.#ctor">
            <summary>
            创建复合列头表格
            </summary>
        </member>
        <member name="F:FaceCat.FCBandedGrid.m_bands">
            <summary>
            表格带
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedGrid.addBand(FaceCat.FCGridBand)">
            <summary>
            添加表格带
            </summary>
            <param name="band">表格带</param>
        </member>
        <member name="M:FaceCat.FCBandedGrid.addColumn(FaceCat.FCGridColumn)">
            <summary>
            添加列
            </summary>
            <param name="column">列</param>
        </member>
        <member name="M:FaceCat.FCBandedGrid.clearBands">
            <summary>
            清除表格带
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedGrid.clearColumns">
            <summary>
            清除所有的列
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedGrid.getBands">
            <summary>
            获取表格带列表
            </summary>
            <returns>表格带集合</returns>
        </member>
        <member name="M:FaceCat.FCBandedGrid.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCBandedGrid.getContentWidth">
            <summary>
            获取内容的宽度
            </summary>
            <returns>宽度</returns>
        </member>
        <member name="M:FaceCat.FCBandedGrid.insertBand(System.Int32,FaceCat.FCGridBand)">
            <summary>
            插入表格带
            </summary>
            <param name="index">索引</param>
            <param name="band">表格带</param>
        </member>
        <member name="M:FaceCat.FCBandedGrid.onSetEmptyClipRegion">
            <summary>
            设置控件不可见方法
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedGrid.removeBand(FaceCat.FCGridBand)">
            <summary>
            移除表格带
            </summary>
            <param name="band">表格带</param>
        </member>
        <member name="M:FaceCat.FCBandedGrid.removeColumn(FaceCat.FCGridColumn)">
            <summary>
            移除列头
            </summary>
            <param name="column">列头</param>
        </member>
        <member name="M:FaceCat.FCBandedGrid.resetHeaderLayout">
            <summary>
            重置列头布局
            </summary>
        </member>
        <member name="M:FaceCat.FCBandedGrid.update">
            <summary>
            重新布局
            </summary>
        </member>
        <member name="P:FaceCat.FCBandedGrid.AllVisibleBandsWidth">
            <summary>
            获取所有可见带的宽度
            </summary>
        </member>
        <member name="T:FaceCat.ActionType">
            <summary>
            动作类型
            </summary>
        </member>
        <member name="F:FaceCat.ActionType.AT1">
            <summary>
            第一个点的动作
            </summary>
        </member>
        <member name="F:FaceCat.ActionType.AT2">
            <summary>
            第二个点的动作
            </summary>
        </member>
        <member name="F:FaceCat.ActionType.AT3">
            <summary>
            第三个点的动作
            </summary>
        </member>
        <member name="F:FaceCat.ActionType.AT4">
            <summary>
            第四个点的动作
            </summary>
        </member>
        <member name="F:FaceCat.ActionType.MOVE">
            <summary>
            移动
            </summary>
        </member>
        <member name="F:FaceCat.ActionType.NO">
            <summary>
            不移动
            </summary>
        </member>
        <member name="T:FaceCat.PlotMark">
            <summary>
            各点值的集合
            </summary>
        </member>
        <member name="M:FaceCat.PlotMark.#ctor(System.Int32,System.Double,System.Double)">
            <summary>
            创建一个点值
            </summary>
            <param name="index">索引</param>
            <param name="key">键</param>
            <param name="value">值</param>
        </member>
        <member name="F:FaceCat.PlotMark.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="F:FaceCat.PlotMark.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="F:FaceCat.PlotMark.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:FaceCat.FCDataRow">
            <summary>
            数据行
            </summary>
        </member>
        <member name="M:FaceCat.FCDataRow.#ctor">
            <summary>
            创建行
            </summary>
        </member>
        <member name="M:FaceCat.FCDataRow.#ctor(System.Int32,System.Int32)">
            <summary>
            创建行
            <param name="capacity">容量</param>
            <param name="step">步长</param>
            </summary>
        </member>
        <member name="M:FaceCat.FCDataRow.#ctor(System.Double[],System.Int32)">
            <summary>
            创建行
            </summary>
            <param name="ary">数组</param>
            <param name="size">长度</param>
        </member>
        <member name="M:FaceCat.FCDataRow.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCDataRow.m_values">
            <summary>
            值集合
            </summary>
        </member>
        <member name="M:FaceCat.FCDataRow.clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:FaceCat.FCDataRow.delete">
            <summary>
            销毁对象
            </summary>
        </member>
        <member name="M:FaceCat.FCDataRow.fillEmpty(System.Int32)">
            <summary>
            填充空间
            </summary>
            <param name="columns">列名</param>
        </member>
        <member name="M:FaceCat.FCDataRow.get(System.Int32)">
            <summary>
            获取数值
            </summary>
            <param name="index">索引</param>
            <returns>数值</returns>
        </member>
        <member name="M:FaceCat.FCDataRow.remove(System.Int32)">
            <summary>
            移除
            </summary>
            <param name="index">索引</param>
        </member>
        <member name="M:FaceCat.FCDataRow.set(System.Int32,System.Double)">
            <summary>
            设置值
            </summary>
            <param name="index">索引</param>
            <param name="value">值</param>
        </member>
        <member name="T:FaceCat.FCDataTable">
            <summary>
            自定义数据源
            </summary>
        </member>
        <member name="M:FaceCat.FCDataTable.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.FCDataTable.m_colsCapacity">
            <summary>
            列的容量
            </summary>
        </member>
        <member name="F:FaceCat.FCDataTable.m_colsStep">
            <summary>
            列的增长步长
            </summary>
        </member>
        <member name="F:FaceCat.FCDataTable.m_columns">
            <summary>
            数据列
            </summary>
        </member>
        <member name="F:FaceCat.FCDataTable.m_keys">
            <summary>
            数值键
            </summary>
        </member>
        <member name="F:FaceCat.FCDataTable.m_rows">
            <summary>
            数据行
            </summary>
        </member>
        <member name="F:FaceCat.FCDataTable.m_autoField">
            <summary>
            自动字段
            </summary>
        </member>
        <member name="M:FaceCat.FCDataTable.addColumn(System.Int32)">
            <summary>
            添加列
            </summary>
            <param name="colName">列名</param>
        </member>
        <member name="M:FaceCat.FCDataTable.addKey(System.Double)">
            <summary>
            添加数值主键
            </summary>
            <param name="num">数值</param>
            <param name="newRow">数据行</param>
        </member>
        <member name="M:FaceCat.FCDataTable.AddRow(System.Double,System.Double[],System.Int32)">
            <summary>
            直接插入行数据
            </summary>
            <param name="pk">主键</param>
            <param name="ary">数组</param>
            <param name="size">长度</param>
        </member>
        <member name="M:FaceCat.FCDataTable.clear">
            <summary>
            清除数据
            </summary>
        </member>
        <member name="M:FaceCat.FCDataTable.DATA_ARRAY(System.Int32,System.Int32,System.Int32)">
            <summary>
            从数据源中获取之前的一段数据的数组
            </summary>
            <param name="field">字段</param>
            <param name="index">结束索引</param>
            <param name="n">周期</param>
            <returns>数值数组</returns>
        </member>
        <member name="M:FaceCat.FCDataTable.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.FCDataTable.fillEmpty">
            <summary>
            填充空白
            </summary>
        </member>
        <member name="M:FaceCat.FCDataTable.getColumnIndex(System.Int32)">
            <summary>
            获取列的索引
            </summary>
            <param name="colName">列名</param>
            <returns>索引</returns>
        </member>
        <member name="M:FaceCat.FCDataTable.getRowIndex(System.Double)">
            <summary>
            获取索引
            </summary>
            <param name="key">键</param>
            <returns>索引</returns>
        </member>
        <member name="M:FaceCat.FCDataTable.getXValue(System.Int32)">
            <summary>
            获取X轴的值
            </summary>
            <param name="index">索引</param>
            <returns>X轴的值</returns>
        </member>
        <member name="M:FaceCat.FCDataTable.get(System.Double,System.Int32)">
            <summary>
            获取数据
            </summary>
            <param name="pk">主键</param>
            <param name="colName">名称</param>
        </member>
        <member name="M:FaceCat.FCDataTable.get2(System.Int32,System.Int32)">
            <summary>
            根据索引和列名获取数据
            </summary>
            <param name="rowIndex">索引</param>
            <param name="colName">名称</param>
            <returns>数据</returns>
        </member>
        <member name="M:FaceCat.FCDataTable.get3(System.Int32,System.Int32)">
            <summary>
            根据行索引和列索引获取数据
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="colIndex">列索引</param>
            <returns>数据</returns>
        </member>
        <member name="M:FaceCat.FCDataTable.remove(System.Double)">
            <summary>
            移除数据
            </summary>
            <param name="pk">主键</param>
        </member>
        <member name="M:FaceCat.FCDataTable.removeAt(System.Int32)">
            <summary>
            移除指定索引的数据
            </summary>
            <param name="rowIndex">行索引</param>
        </member>
        <member name="M:FaceCat.FCDataTable.removeColumn(System.Int32)">
            <summary>
            移除列
            </summary>
            <param name="colName">列名</param>
        </member>
        <member name="M:FaceCat.FCDataTable.set(System.Double,System.Int32,System.Double)">
            <summary>
            添加数据，主键为日期
            </summary>
            <param name="pk">主键</param>
            <param name="colName">列名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.FCDataTable.set2(System.Int32,System.Int32,System.Double)">
            <summary>
            根据索引添加数据
            </summary>
            <param name="rowIndex">索引</param>
            <param name="colName">列名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.FCDataTable.set3(System.Int32,System.Int32,System.Double)">
            <summary>
            根据行索引和列索引加数据
            </summary>
            <param name="rowIndex">行索引</param>
            <param name="colIndex">列索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:FaceCat.FCDataTable.setColsCapacity(System.Int32)">
            <summary>
            设置列的容量
            </summary>
            <param name="capacity">容量</param>
        </member>
        <member name="M:FaceCat.FCDataTable.setColsGrowStep(System.Int32)">
            <summary>
            设置列的增长步长
            </summary>
            <param name="step">容量</param>
        </member>
        <member name="M:FaceCat.FCDataTable.setRowsCapacity(System.Int32)">
            <summary>
            设置行的容量
            </summary>
            <param name="capacity">容量</param>
        </member>
        <member name="M:FaceCat.FCDataTable.setRowsGrowStep(System.Int32)">
            <summary>
            设置行的增长步长
            </summary>
            <param name="step">容量</param>
        </member>
        <member name="P:FaceCat.FCDataTable.AutoField">
            <summary>
            获取
            </summary>
            <returns></returns>
        </member>
        <member name="P:FaceCat.FCDataTable.ColumnsCount">
            <summary>
            获取列数
            </summary>
        </member>
        <member name="P:FaceCat.FCDataTable.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.FCDataTable.RowsCount">
            <summary>
            获取行数
            </summary>
        </member>
        <member name="T:FaceCat.FCToolTip">
            <summary>
            提示标签
            </summary>
        </member>
        <member name="M:FaceCat.FCToolTip.#ctor">
            <summary>
            创建标签
            </summary>
        </member>
        <member name="F:FaceCat.FCToolTip.m_lastTouchPoint">
            <summary>
            上一次触摸的位置
            </summary>
        </member>
        <member name="F:FaceCat.FCToolTip.m_timerID">
            <summary>
            秒表ID
            </summary>
        </member>
        <member name="F:FaceCat.FCToolTip.m_remainAutoPopDelay">
            <summary>
            剩余保留显示毫秒数
            </summary>
        </member>
        <member name="F:FaceCat.FCToolTip.m_remainInitialDelay">
            <summary>
            剩余延迟显示毫秒数
            </summary>
        </member>
        <member name="M:FaceCat.FCToolTip.delete">
            <summary>
            销毁控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCToolTip.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCToolTip.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCToolTip.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCToolTip.hide">
            <summary>
            隐藏控件
            </summary>
        </member>
        <member name="M:FaceCat.FCToolTip.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCToolTip.onTimer(System.Int32)">
            <summary>
            秒表方法
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="M:FaceCat.FCToolTip.onVisibleChanged">
            <summary>
            可见状态改变方法
            </summary>
        </member>
        <member name="M:FaceCat.FCToolTip.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCToolTip.show">
            <summary>
            显示控件
            </summary>
        </member>
        <member name="P:FaceCat.FCToolTip.AutoPopDelay">
            <summary>
            提示保留显示的时间长度
            </summary>
        </member>
        <member name="P:FaceCat.FCToolTip.InitialDelay">
            <summary>
            获取或设置触摸静止时延迟显示的毫秒数
            </summary>
        </member>
        <member name="P:FaceCat.FCToolTip.ShowAlways">
            <summary>
            获取或设置是否总是显示
            </summary>
        </member>
        <member name="P:FaceCat.FCToolTip.UseAnimation">
            <summary>
            获取或设置是否在显示隐藏时使用动画
            </summary>
        </member>
        <member name="T:FaceCat.FCFile">
            <summary>
            文件操作类
            </summary>
        </member>
        <member name="M:FaceCat.FCFile.append(System.String,System.String)">
            <summary>
            向文件中追加内容
            </summary>
            <param name="file">文件</param>
            <param name="content">内容</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:FaceCat.FCFile.createDirectory(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="dir">文件夹</param>
        </member>
        <member name="M:FaceCat.FCFile.getDirectories(System.String,FaceCat.ArrayList{System.String})">
            <summary>
            获取文件夹中的文件夹
            </summary>
            <param name="dir">文件夹</param>
            <param name="dirs">文件夹集合</param>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCFile.getFiles(System.String,FaceCat.ArrayList{System.String})">
            <summary>
            获取文件夹中的文件
            </summary>
            <param name="dir">文件夹</param>
            <param name="files">文件集合</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:FaceCat.FCFile.isDirectoryExist(System.String)">
            <summary>
            判断文件夹是否存在
            </summary>
            <param name="dir">文件夹</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:FaceCat.FCFile.isFileExist(System.String)">
            <summary>
            判断文件是否存在
            </summary>
            <param name="file">文件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:FaceCat.FCFile.read(System.String,System.String@)">
            <summary>
            从文件中读取内容
            </summary>
            <param name="file">文件</param>
            <param name="content">返回内容</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:FaceCat.FCFile.removeFile(System.String)">
            <summary>
            移除文件
            </summary>
            <param name="file">文件</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:FaceCat.FCFile.write(System.String,System.String)">
            <summary>
            向文件中写入内容
            </summary>
            <param name="file">文件</param>
            <param name="content">内容</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:FaceCat.CandleShape">
            <summary>
            K线
            </summary>
        </member>
        <member name="M:FaceCat.CandleShape.#ctor">
            <summary>
            创建K线
            </summary>
        </member>
        <member name="M:FaceCat.CandleShape.getBaseField">
            <summary>
            获取基础字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.CandleShape.getFieldText(System.Int32)">
            <summary>
            由字段名称获取字段标题
            </summary>
            <param name="fieldName">字段名称</param>
            <returns>字段标题</returns>
        </member>
        <member name="M:FaceCat.CandleShape.getFields">
            <summary>
            获取所有字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.CandleShape.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.CandleShape.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.CandleShape.getSelectedColor">
            <summary>
            获取选中点的颜色
            </summary>
            <returns>颜色</returns>
        </member>
        <member name="M:FaceCat.CandleShape.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.CandleShape.CloseField">
            <summary>
            获取或设置收盘价字段
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.ColorField">
            <summary>
            获取或设置颜色的字段
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.CloseFieldText">
            <summary>
            获取或设置收盘价的显示文字
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.DownColor">
            <summary>
            获取或设置阴线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.HighField">
            <summary>
            获取或设置最高价字段
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.HighFieldText">
            <summary>
            获取或设置最高价的显示文字
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.LowField">
            <summary>
            获取或设置最低价字段
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.LowFieldText">
            <summary>
            获取或设置最低价的显示文字
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.OpenField">
            <summary>
            获取或设置开盘价字段
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.OpenFieldText">
            <summary>
            获取或设置开盘价的显示文字
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.ShowMaxMin">
            <summary>
            获取或设置是否显示最大最小值
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.Style">
            <summary>
            获取或设置线柱的类型
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.StyleField">
            <summary>
            获取或设置样式字段
            -10000:不画 0:阳线空心阴线实心 1:空心矩形 2:实心矩形 3:美国线 4:收盘线 5:宝塔线
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.TagColor">
            <summary>
            获取或设置最大最小值标签的颜色
            </summary>
        </member>
        <member name="P:FaceCat.CandleShape.UpColor">
            <summary>
            获取或设置阳线颜色
            </summary>
        </member>
        <member name="T:FaceCat.WinHost">
            <summary>
            窗体控件管理
            </summary>
        </member>
        <member name="M:FaceCat.WinHost.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.WinHost.m_allowOperate">
            <summary>
            是否可以操作
            </summary>
        </member>
        <member name="F:FaceCat.WinHost.m_allowPartialPaint">
            <summary>
            是否支持局部绘图
            </summary>
        </member>
        <member name="F:FaceCat.WinHost.m_container">
            <summary>
            容器
            </summary>
        </member>
        <member name="F:FaceCat.WinHost.m_invokeArgs">
            <summary>
            调用控件线程方法的参数
            </summary>
        </member>
        <member name="F:FaceCat.WinHost.m_invokeControls">
            <summary>
            调用控件线程方法的控件
            </summary>
        </member>
        <member name="F:FaceCat.WinHost.m_invokeSerialID">
            <summary>
            调用控件线程方法的流水号
            </summary>
        </member>
        <member name="M:FaceCat.WinHost.activeMirror">
            <summary>
            激活镜像
            </summary>
        </member>
        <member name="M:FaceCat.WinHost.beginInvoke(FaceCat.FCView,System.Object)">
            <summary>
            在控件的线程中调用方法
            </summary>
            <param name="control">控件</param>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.WinHost.container_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            尺寸改变事件
            </summary>
            <param name="sender">调用者</param>
            <param name="e">参数</param>
        </member>
        <member name="M:FaceCat.WinHost.copy(System.String)">
            <summary>
            复制文本
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:FaceCat.WinHost.createInternalControl(FaceCat.FCView,System.String)">
            <summary>
            创建内部控件
            </summary>
            <param name="parent">父控件</param>
            <param name="clsid">类型ID</param>
            <returns>控件</returns>
        </member>
        <member name="M:FaceCat.WinHost.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.WinHost.getAppPath">
            <summary>
            获取程序的路径
            </summary>
            <returns>路径</returns>
        </member>
        <member name="M:FaceCat.WinHost.getClientSize">
            <summary>
            获取客户端的大小
            </summary>
            <returns>大小</returns>
        </member>
        <member name="M:FaceCat.WinHost.getCursor">
            <summary>
            获取光标
            </summary>
            <returns>光标</returns>
        </member>
        <member name="M:FaceCat.WinHost.getIntersectRect(FaceCat.FCRect@,FaceCat.FCRect@,FaceCat.FCRect@)">
            <summary>
            获取矩形相交区
            </summary>
            <param name="lpDestRect">相交矩形</param>
            <param name="lpSrc1Rect">矩形1</param>
            <param name="lpSrc2Rect">矩形2</param>
            <returns>是否相交</returns>
        </member>
        <member name="M:FaceCat.WinHost.getUnionRect(FaceCat.FCRect@,FaceCat.FCRect@,FaceCat.FCRect@)">
            <summary>
            获取矩形并集区
            </summary>
            <param name="lpDestRect">并集矩形</param>
            <param name="lpSrc1Rect">矩形1</param>
            <param name="lpSrc2Rect">矩形2</param>
            <returns>是否相交</returns>
        </member>
        <member name="M:FaceCat.WinHost.getTouchPoint">
            <summary>
            获取触摸位置
            </summary>
            <returns>坐标</returns>
        </member>
        <member name="M:FaceCat.WinHost.getSize">
            <summary>
            获取尺寸
            </summary>
            <returns>大小</returns>
        </member>
        <member name="M:FaceCat.WinHost.invalidate">
            <summary>
            刷新绘图
            </summary>
        </member>
        <member name="M:FaceCat.WinHost.invalidate(FaceCat.FCRect)">
            <summary>
            刷新绘图
            </summary>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.WinHost.invoke(FaceCat.FCView,System.Object)">
            <summary>
            在控件的线程中调用方法
            </summary>
            <param name="control">控件</param>
            <param name="args">参数</param>
        </member>
        <member name="M:FaceCat.WinHost.isKeyPress(System.Int32)">
            <summary>
            获取按键的状态
            </summary>
            <param name="key">按键</param>
            <returns>状态</returns>
        </member>
        <member name="M:FaceCat.WinHost.onInvoke(System.Int32)">
            <summary>
            调用控件线程的方法
            </summary>
            <param name="invokeSerialID">消息ID</param>
        </member>
        <member name="M:FaceCat.WinHost.onMessage(System.Windows.Forms.Message@)">
            <summary>
            消息处理
            </summary>
            <param name="m">消息</param>
            <returns>是否处理</returns>
        </member>
        <member name="M:FaceCat.WinHost.onPaint(FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.WinHost.paste">
            <summary>
            获取粘贴文本
            </summary>
            <returns>文本</returns>
        </member>
        <member name="M:FaceCat.WinHost.setCursor(FaceCat.FCCursors)">
            <summary>
            设置光标
            </summary>
            <param name="cursor">光标</param>
        </member>
        <member name="M:FaceCat.WinHost.showToolTip(System.String,FaceCat.FCPoint)">
            <summary>
            显示提示框
            </summary>
            <param name="text">文字</param>
            <param name="mp">位置</param>
        </member>
        <member name="M:FaceCat.WinHost.startTimer(System.Int32,System.Int32)">
            <summary>
            开启秒表
            </summary>
            <param name="timerID">秒表ID</param>
            <param name="interval">间隔</param>
        </member>
        <member name="M:FaceCat.WinHost.stopTimer(System.Int32)">
            <summary>
            停止秒表
            </summary>
            <param name="timerID">秒表ID</param>
        </member>
        <member name="P:FaceCat.WinHost.AllowOperate">
            <summary>
            获取或设置是否允许操作
            </summary>
        </member>
        <member name="P:FaceCat.WinHost.AllowPartialPaint">
            <summary>
            获取或设置是否允许局部绘图
            </summary>
        </member>
        <member name="P:FaceCat.WinHost.HWnd">
            <summary>
            获取或设置图形控件
            </summary>
        </member>
        <member name="P:FaceCat.WinHost.IsDeleted">
            <summary>
            获取是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.WinHost.Native">
            <summary>
            获取或设置方法库
            </summary>
        </member>
        <member name="P:FaceCat.WinHost.PInvokeMsgID">
            <summary>
            获取或设置调用线程方法的消息ID
            </summary>
        </member>
        <member name="P:FaceCat.WinHost.ToolTip">
            <summary>
            获取或设置提示框
            </summary>
        </member>
        <member name="T:FaceCat.PolylineShape">
            <summary>
            曲线
            </summary>
        </member>
        <member name="M:FaceCat.PolylineShape.#ctor">
            <summary>
            创建曲线
            </summary>
        </member>
        <member name="M:FaceCat.PolylineShape.getBaseField">
            <summary>
            获取基础字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.PolylineShape.getFieldText(System.Int32)">
            <summary>
            由字段名称获取字段标题
            </summary>
            <param name="fieldName">字段名称</param>
            <returns>字段标题</returns>
        </member>
        <member name="M:FaceCat.PolylineShape.getFields">
            <summary>
            获取所有字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.PolylineShape.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.PolylineShape.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.PolylineShape.getSelectedColor">
            <summary>
            获取选中点的颜色
            </summary>
            <returns>颜色</returns>
        </member>
        <member name="M:FaceCat.PolylineShape.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.PolylineShape.Color">
            <summary>
            获取或设置线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.PolylineShape.ColorField">
            <summary>
            获取或设置颜色的字段
            </summary>
        </member>
        <member name="P:FaceCat.PolylineShape.FieldName">
            <summary>
            获取或设置字段名称
            </summary>
        </member>
        <member name="P:FaceCat.PolylineShape.FieldText">
            <summary>
            获取或设置显示的标题名称
            </summary>
        </member>
        <member name="P:FaceCat.PolylineShape.FillColor">
            <summary>
            获取或设置填充色
            </summary>
        </member>
        <member name="P:FaceCat.PolylineShape.Style">
            <summary>
            获取或设置样式
            </summary>
        </member>
        <member name="P:FaceCat.PolylineShape.Width">
            <summary>
            获取或设置线的宽度
            </summary>
        </member>
        <member name="T:FaceCat.HScale">
            <summary>
            横轴
            </summary>
        </member>
        <member name="M:FaceCat.HScale.#ctor">
            <summary>
            创建横轴
            </summary>
        </member>
        <member name="M:FaceCat.HScale.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="F:FaceCat.HScale.m_dateColors">
            <summary>
            日期文字的颜色
            </summary>
        </member>
        <member name="F:FaceCat.HScale.m_scaleSteps">
            <summary>
            刻度点
            </summary>
        </member>
        <member name="M:FaceCat.HScale.delete">
            <summary>
            销毁资源
            </summary>
        </member>
        <member name="M:FaceCat.HScale.getDateColor(FaceCat.DateType)">
            <summary>
            获取日期文字的颜色
            </summary>
            <param name="dateType">日期类型</param>
            <returns>颜色</returns>
        </member>
        <member name="M:FaceCat.HScale.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.HScale.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.HScale.getScaleSteps">
            <summary>
            获取刻度点
            </summary>
            <returns>刻度点</returns>
        </member>
        <member name="M:FaceCat.HScale.onPaint(FaceCat.FCPaint,FaceCat.ChartDiv,FaceCat.FCRect)">
            <summary>
            重绘方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="div">图层</param>
            <param name="rect">区域</param>
        </member>
        <member name="M:FaceCat.HScale.setDateColor(FaceCat.DateType,System.Int64)">
            <summary>
            设置日期文字的颜色
            </summary>
            <param name="dateType">日期类型</param>
            <param name="color">颜色</param>
        </member>
        <member name="M:FaceCat.HScale.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.HScale.setScaleSteps(FaceCat.ArrayList{System.Double})">
            <summary>
            设置刻度点
            </summary>
            <param name="scaleSteps">刻度点</param>
        </member>
        <member name="P:FaceCat.HScale.AllowUserPaint">
            <summary>
            获取或设置是否允许用户绘图
            </summary>
        </member>
        <member name="P:FaceCat.HScale.CrossLineTip">
            <summary>
            获取或设置十字线标签
            </summary>
        </member>
        <member name="P:FaceCat.HScale.Font">
            <summary>
            获取或设置X轴文字的字体
            </summary>
        </member>
        <member name="P:FaceCat.HScale.TextColor">
            <summary>
            获取或设置X轴文字色
            </summary>
        </member>
        <member name="P:FaceCat.HScale.Height">
            <summary>
            获取或设置X轴的高度
            </summary>
        </member>
        <member name="P:FaceCat.HScale.HScaleType">
            <summary>
            获取获取设置横轴的数据类型
            </summary>
        </member>
        <member name="P:FaceCat.HScale.Interval">
            <summary>
            获取或设置日期文字间隔
            </summary>
        </member>
        <member name="P:FaceCat.HScale.IsDeleted">
            <summary>
            获取或设置是否已被销毁
            </summary>
        </member>
        <member name="P:FaceCat.HScale.ScaleColor">
            <summary>
            获取或设置X轴的线条颜色
            </summary>
        </member>
        <member name="P:FaceCat.HScale.Visible">
            <summary>
            获取或设置显示X轴
            </summary>
        </member>
        <member name="T:FaceCat.BarShape">
            <summary>
            柱状图
            </summary>
        </member>
        <member name="M:FaceCat.BarShape.#ctor">
            <summary>
            创建柱状图
            </summary>
        </member>
        <member name="M:FaceCat.BarShape.getBaseField">
            <summary>
            获取基础字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.BarShape.getFieldText(System.Int32)">
            <summary>
            由字段名称获取字段标题
            </summary>
            <param name="fieldName">字段名称</param>
            <returns>字段标题</returns>
        </member>
        <member name="M:FaceCat.BarShape.getFields">
            <summary>
            获取所有字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.BarShape.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.BarShape.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.BarShape.getSelectedColor">
            <summary>
            获取选中点的颜色
            </summary>
            <returns>颜色</returns>
        </member>
        <member name="M:FaceCat.BarShape.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="P:FaceCat.BarShape.ColorField">
            <summary>
            获取或设置颜色的字段
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.DownColor">
            <summary>
            获取或设置阴线的颜色
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.FieldName">
            <summary>
            获取或设置字段名称
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.FieldName2">
            <summary>
            获取或设置字段名称2
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.FieldText">
            <summary>
            获取或设置显示的标题名称
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.FieldText2">
            <summary>
            获取或设置显示的标题名称2
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.LineWidth">
            <summary>
            获取或设置线的宽度
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.Style">
            <summary>
            获取或设置线条的样式
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.StyleField">
            <summary>
            获取或设置样式字段
            -10000:不画 -1:虚线空心矩形 0:实心矩形 1:实线空心矩形  2:线
            </summary>
        </member>
        <member name="P:FaceCat.BarShape.UpColor">
            <summary>
            获取或设置阳线的颜色
            </summary>
        </member>
        <member name="T:FaceCat.FCSplitLayoutDiv">
            <summary>
            分割布局控件
            </summary>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.#ctor">
            <summary>
            创建分割布局控件
            </summary>
        </member>
        <member name="F:FaceCat.FCSplitLayoutDiv.m_splitPercent">
            <summary>
            分割百分比
            </summary>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.delete">
            <summary>
            销毁方法
            </summary>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.getProperty(System.String,System.String@,System.String@)">
            <summary>
            获取属性值
            </summary>
            <param name="name">属性名称</param>
            <param name="value">返回属性值</param>
            <param name="type">返回属性类型</param>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.getPropertyNames">
            <summary>
            获取属性名称列表
            </summary>
            <returns>属性名称列表</returns>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.onResetLayout">
            <summary>
            重置布局
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.setProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name">属性名称</param>
            <param name="value">属性值</param>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.SplitterDragging(System.Object)">
            <summary>
            拖动滚动条
            </summary>
            <param name="sender">控件</param>
        </member>
        <member name="M:FaceCat.FCSplitLayoutDiv.update">
            <summary>
            布局更新方法
            </summary>
        </member>
        <member name="P:FaceCat.FCSplitLayoutDiv.FirstControl">
            <summary>
            获取或设置第一个控件
            </summary>
        </member>
        <member name="P:FaceCat.FCSplitLayoutDiv.SecondControl">
            <summary>
            获取或设置第二个控件
            </summary>
        </member>
        <member name="P:FaceCat.FCSplitLayoutDiv.SplitMode">
            <summary>
            获取或设置分割模式
            </summary>
        </member>
        <member name="P:FaceCat.FCSplitLayoutDiv.Splitter">
            <summary>
            获取分割按钮
            </summary>
        </member>
        <member name="T:FaceCat.YearButton">
            <summary>
            年的按钮
            </summary>
        </member>
        <member name="M:FaceCat.YearButton.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建月的按钮
            </summary>
            <param name="calendar">日历控件</param>
        </member>
        <member name="M:FaceCat.YearButton.getPaintingBackColor">
            <summary>
            获取绘制的背景色
            </summary>
            <returns>背景色</returns>
        </member>
        <member name="M:FaceCat.YearButton.getPaintingBorderColor">
            <summary>
            获取绘制的边线颜色
            </summary>
            <returns>边线颜色</returns>
        </member>
        <member name="M:FaceCat.YearButton.getPaintingTextColor">
            <summary>
            获取要绘制的前景色
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaceCat.YearButton.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击方法
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.YearButton.onPaintBackGround(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.YearButton.onPaintBorder(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘边线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.YearButton.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="P:FaceCat.YearButton.Bounds">
            <summary>
            获取或设置显示区域
            </summary>
        </member>
        <member name="P:FaceCat.YearButton.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="P:FaceCat.YearButton.Visible">
            <summary>
            获取或设置是否可见
            </summary>
        </member>
        <member name="P:FaceCat.YearButton.Year">
            <summary>
            获取或设置年
            </summary>
        </member>
        <member name="T:FaceCat.HeadDiv">
            <summary>
            顶部层
            </summary>
        </member>
        <member name="M:FaceCat.HeadDiv.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建层
            </summary>
            <param name="calendar">日历</param>
        </member>
        <member name="F:FaceCat.HeadDiv.m_calendar">
            <summary>
            日历
            </summary>
        </member>
        <member name="M:FaceCat.HeadDiv.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.HeadDiv.onLoad">
            <summary>
            添加控件方法
            </summary>
        </member>
        <member name="M:FaceCat.HeadDiv.onPaintBackground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.HeadDiv.onPaintBorder(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘边线方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.HeadDiv.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘前景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="M:FaceCat.HeadDiv.update">
            <summary>
            布局更新方法
            </summary>
        </member>
        <member name="P:FaceCat.HeadDiv.Calendar">
            <summary>
            获取或设置日历
            </summary>
        </member>
        <member name="P:FaceCat.HeadDiv.DateTitle">
            <summary>
            获取或设置日期标题
            </summary>
        </member>
        <member name="P:FaceCat.HeadDiv.LastBtn">
            <summary>
            获取或设置到上个周期的按钮
            </summary>
        </member>
        <member name="P:FaceCat.HeadDiv.NextBtn">
            <summary>
            获取或设置到下个周期的按钮
            </summary>
        </member>
        <member name="T:FaceCat.ArrowButton">
            <summary>
            切换到上个月的按钮
            </summary>
        </member>
        <member name="M:FaceCat.ArrowButton.#ctor(FaceCat.FCCalendar)">
            <summary>
            创建按钮
            </summary>
        </member>
        <member name="M:FaceCat.ArrowButton.getControlType">
            <summary>
            获取控件类型
            </summary>
            <returns>控件类型</returns>
        </member>
        <member name="M:FaceCat.ArrowButton.onClick(FaceCat.FCTouchInfo)">
            <summary>
            触摸点击事件
            </summary>
            <param name="touchInfo">触摸信息</param>
        </member>
        <member name="M:FaceCat.ArrowButton.onPaintForeground(FaceCat.FCPaint,FaceCat.FCRect)">
            <summary>
            重绘背景方法
            </summary>
            <param name="paint">绘图对象</param>
            <param name="clipRect">裁剪区域</param>
        </member>
        <member name="P:FaceCat.ArrowButton.Calendar">
            <summary>
            获取或设置日历控件
            </summary>
        </member>
        <member name="P:FaceCat.ArrowButton.ToLast">
            <summary>
            获取或设置是否前往上个月
            </summary>
        </member>
    </members>
</doc>
